const V=Object.entries,et=Object.fromEntries,st="ENTRIES",L="KEYS",T="VALUES",_="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===_)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==_).join("")}value(){return E(this._path).node.get(_)}result(){switch(this._type){case T:return this.value();case L:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],nt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const c of e.keys())if(c===_){const a=o[d-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let h=0;h<c.length;++h,++a){const g=c[h],m=i*a,p=m-i;let l=o[m];const f=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let F=f;F<y;++F){const v=g!==t[F],z=o[p+F]+ +v,A=o[p+F+1]+1,w=o[m+F]+1,j=o[m+F+1]=Math.min(z,A,w);j<l&&(l=j)}if(l>s)continue t}R(e.get(c),t,s,n,o,a,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==_&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new D(this,st)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return nt(this._tree,t,s)}get(t){const s=k(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=k(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new D(this,L)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,I(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=I(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},k=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return k(e.get(s),t.slice(s.length))},I=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const c=new Map;c.set(u.slice(r),d),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ot=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(_),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;q(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&q(e.slice(0,-1),n,o)}},q=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],ut=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,M="or",$="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},N=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,lt=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[M]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),N(n.terms,u)}}return e},[$]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);N(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},at=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:M,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:$,prefix:(e,t,s)=>t===s.length-1},Ft={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},_t={...Ft,...U},K=Symbol("*"),yt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,u]of e._documentIds){const i=n.boostDocument?n.boostDocument(u,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},X=(e,t=M)=>{if(e.length===0)return new Map;const s=t.toLowerCase(),n=ht[s];if(!n)throw new Error(`Invalid combination operator: ${t}`);return e.reduce(n)||new Map},S=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const c of Object.keys(u)){const a=u[c],h=e._fieldIds[c],g=o.get(h);if(g==null)continue;let m=g.size;const p=e._avgFieldLength[h];for(const l of g.keys()){if(!e._documentIds.has(l)){ft(e,h,l,s),m-=1;continue}const f=i?i(e._documentIds.get(l),s,e._storedFields.get(l)):1;if(!f)continue;const y=g.get(l),F=e._fieldLength.get(l)[h],v=dt(y,m,e._documentCount,F,p,r),z=n*a*f*v,A=d.get(l);if(A){A.score+=z,ct(A.terms,t);const w=G(A.match,s);w?w.push(c):A.match[s]=[c]}else d.set(l,{score:z,terms:[t],match:{[s]:[c]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:c,prefix:a}={...J.weights,...i},h=e._index.get(t.term),g=S(e,t.term,t.term,1,h,o,u,d);let m,p;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(r,Math.round(t.term.length*l)):l;f&&(p=e._index.fuzzyGet(t.term,f))}if(m)for(const[l,f]of m){const y=l.length-t.term.length;if(!y)continue;p?.delete(l);const F=a*l.length/(l.length+.3*y);S(e,t.term,l,F,f,o,u,d,g)}if(p)for(const l of p.keys()){const[f,y]=p.get(l);if(!y)continue;const F=c*l.length/(l.length+y);S(e,t.term,l,F,f,o,u,d,g)}return g},Y=(e,t,s={})=>{if(t===K)return yt(e,s);if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(g=>Y(e,g,a));return X(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,c=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(at(i)).map(a=>At(e,a,i));return X(c,i.combineWith)},Q=(e,t,s={})=>{const n=Y(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const c=r.length||1,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(d),queryTerms:r,match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return t===K&&s.boostDocument==null&&e._options.searchOptions.boostDocument==null||o.sort(P),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of Q(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(P),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?_t:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=b(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=b(u),h._avgFieldLength=i,h._storedFields=b(r),h._dirtCount=d||0,h._index=new C;for(const[g,m]of h._documentIds)h._idToShortId.set(m,g);for(const[g,m]of e){const p=new Map;for(const l of Object.keys(m)){let f=m[l];c===1&&(f=f.ds),p.set(parseInt(l,10),b(f))}h._index.set(g,p)}return h},B=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let h="";i===0?h=c.length>20?`… ${c.slice(-20)}`:c:a?h=c.length+i>100?`${c.slice(0,100-i)}… `:c:h=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const c=d+n.length;if(r(e.slice(u,d)),u=c,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},wt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),xt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),Z=(e,t,s={})=>{const n={};return Q(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),c=u.includes("#"),[a,h]=u.split(/[#@]/),g=Number(a),m=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(y=>!y.includes(l))),{contents:p}=n[g]??={title:"",contents:[]};if(d)p.push([{type:"customField",id:g,index:h,display:m.map(l=>o.c.map(f=>B(f,l))).flat().filter(l=>l!==null)},r]);else{const l=m.map(f=>B(o.h,f)).filter(f=>f!==null);if(l.length&&p.push([{type:c?"heading":"title",id:g,...c&&{anchor:h},display:l},r]),"t"in o)for(const f of o.t){const y=m.map(F=>B(f,F)).filter(F=>F!==null);y.length&&p.push([{type:"text",id:g,...c&&{anchor:h},display:y},r])}}}),V(n).sort(([,o],[,u])=>"max"==="total"?wt(o,u):xt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=ut(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},tt=(e,t,s={})=>{const n=Ct(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},bt=et(V(JSON.parse("{\"/\":{\"documentCount\":556,\"nextId\":556,\"documentIds\":{\"0\":\"0\",\"1\":\"0#关于我\",\"2\":\"0#基本信息\",\"3\":\"0#能做什么\",\"4\":\"0#技术栈\",\"5\":\"0#我的优势\",\"6\":\"0#培训经历\",\"7\":\"0#常用软件\",\"8\":\"1\",\"9\":\"2\",\"10\":\"3\",\"11\":\"3#css-单位\",\"12\":\"4\",\"13\":\"4#前提条件\",\"14\":\"4#安装步骤\",\"15\":\"4#_1-初始化安装-需要注意入口文件为-main-js-默认安装入口为-index-js\",\"16\":\"4#_2-安装依赖\",\"17\":\"4#_3-修改package-json文件\",\"18\":\"4#_4-新建入口文件main-js-和index-html\",\"19\":\"4#_5-启动应用\",\"20\":\"4#打包步骤\",\"21\":\"5\",\"22\":\"5#java基础知识\",\"23\":\"5#_1-java数据类型\",\"24\":\"5#_2-运算类型转换\",\"25\":\"5#_3-类实例化方法\",\"26\":\"5#_4-修饰符使用\",\"27\":\"5#访问修饰符\",\"28\":\"5#非访问修饰符\",\"29\":\"5#_5-对象和类\",\"30\":\"5#变量\",\"31\":\"5#构造函数\",\"32\":\"5#创建对象\",\"33\":\"5#_6-循环结构\",\"34\":\"5#_7-条件语句\",\"35\":\"5#_8-数组结构\",\"36\":\"5#_9-string类\",\"37\":\"5#_10-charactor类\",\"38\":\"6\",\"39\":\"6#jframe类\",\"40\":\"7\",\"41\":\"7#scanner类的使用\",\"42\":\"8\",\"43\":\"8#http知识\",\"44\":\"8#_1-http协议概述\",\"45\":\"8#_2-http请求方式有哪些-8个\",\"46\":\"8#_3-这些请求方式具体的作用是什么\",\"47\":\"8#_4-get和post有什么区别\",\"48\":\"8#_5-put和post都是给服务器发送新增资源-有什么区别\",\"49\":\"8#_6-put和patch都是给服务器发送修改资源-有什么区别\",\"50\":\"8#_7-聊一聊http的状态码有哪些\",\"51\":\"8#_2xx-成功\",\"52\":\"8#_3xx-重定向\",\"53\":\"8#_4xx-客户端错误\",\"54\":\"8#_5xx-服务器错误\",\"55\":\"8#_8-同样是重定向307-303-302的区别\",\"56\":\"8#_9-http的keep-alive是干什么的\",\"57\":\"8#_10-为什么有了http为什么还要https\",\"58\":\"8#_11-http缓存的了解\",\"59\":\"8#_12-说一下tcp三次握手-四次挥手\",\"60\":\"8#_13-输入一个url-浏览器发生什么\",\"61\":\"9\",\"62\":\"9#数据库和数据表创建\",\"63\":\"9#数据库操作\",\"64\":\"9#数据表操作\",\"65\":\"9#数据的增删改查\",\"66\":\"9#数据表导入导出\",\"67\":\"9#常用语句\",\"68\":\"9#where-条件语句\",\"69\":\"9#关键字-in-限定指定值类型\",\"70\":\"9#关键字-between-and-指定范围\",\"71\":\"9#关键字-like-模糊查询\",\"72\":\"9#is-null-判断\",\"73\":\"9#使用-order-by-进行排序\",\"74\":\"9#limit-分页查询\",\"75\":\"9#as-别名\",\"76\":\"9#聚合函数\",\"77\":\"9#子查询\",\"78\":\"9#表关联\",\"79\":\"9#索引\",\"80\":\"9#视图\",\"81\":\"10\",\"82\":\"10#mysql基础知识\",\"83\":\"10#_1-数据类型\",\"84\":\"11\",\"85\":\"11#ajax-请求\",\"86\":\"11#_1-什么是ajax\",\"87\":\"11#_2-ajax优缺点\",\"88\":\"11#_3-实现xhr请求数据的步骤\",\"89\":\"11#xhr-open方法\",\"90\":\"11#onreadystatechange-状态\",\"91\":\"11#setrequestheader-设置请求类型\",\"92\":\"11#content-type-类型\",\"93\":\"11#取消请求\",\"94\":\"12\",\"95\":\"12#arr-at\",\"96\":\"12#arr-cancat-arr1-arr2-arr3\",\"97\":\"12#arr-constructor\",\"98\":\"12#arr-copywithin-target-start-end\",\"99\":\"12#arr-entries\",\"100\":\"12#arr-every\",\"101\":\"12#arr-fill-val-start-end\",\"102\":\"12#arr-filter\",\"103\":\"12#arr-find\",\"104\":\"12#arr-findindex\",\"105\":\"12#arr-flat-number\",\"106\":\"12#arr-flatmap\",\"107\":\"12#arr-foreach\",\"108\":\"12#arr-from\",\"109\":\"12#arr-includes\",\"110\":\"12#arr-indexof\",\"111\":\"12#arr-isarray\",\"112\":\"12#arr-join-separator\",\"113\":\"12#arr-keys\",\"114\":\"12#arr-lastindexof\",\"115\":\"12#arr-map\",\"116\":\"12#arr-pop\",\"117\":\"12#arr-push\",\"118\":\"12#arr-reduce-function-total-currentvalue-currentindex-arr-initialvalue\",\"119\":\"12#arr-reduceright-function-total-currentvalue-currentindex-arr-initialvalue\",\"120\":\"12#arr-reverse\",\"121\":\"12#arr-shift\",\"122\":\"12#arr-slice-start-end\",\"123\":\"12#arr-some\",\"124\":\"12#arr-sort\",\"125\":\"12#arr-splice-index-number-item1-item2\",\"126\":\"12#arr-tostring\",\"127\":\"12#arr-unshift\",\"128\":\"12#arr-values\",\"129\":\"12#arr-length\",\"130\":\"13\",\"131\":\"13#canvas基础知识\",\"132\":\"13#一-canvas和svg的区别\",\"133\":\"13#二-canvas使用\",\"134\":\"13#_1-画矩形-fillrect\",\"135\":\"13#_2-画直线\",\"136\":\"13#_3-画三角形\",\"137\":\"13#_4-画圆形\",\"138\":\"13#_5-画弧线\",\"139\":\"13#_6-贝塞尔曲线\",\"140\":\"13#_7-虚线\",\"141\":\"13#_8-画文字\",\"142\":\"13#_9-移动-translate\",\"143\":\"13#_10-旋转-rotate\",\"144\":\"13#_11-变形-transform\",\"145\":\"13#_12-裁剪-clip\",\"146\":\"13#_13-形状合成-globalcompositeoperation\",\"147\":\"13#_14-颜色\",\"148\":\"13#_15-渐变颜色\",\"149\":\"13#线性渐变-createlineargradient-x1-y1-x2-y2\",\"150\":\"13#径向渐变-createradialgradient-x-y-r-x2-y2-r2\",\"151\":\"13#_16-背景填充-createpattern\",\"152\":\"15\",\"153\":\"15#为什么叫es6\",\"154\":\"15#es6-新特性\",\"155\":\"15#_1-let声明变量及特性\",\"156\":\"15#_2-const声明常量\",\"157\":\"15#_3-解构赋值\",\"158\":\"15#_4-模板字符串\",\"159\":\"15#_5-对象简化写法\",\"160\":\"15#_6-箭头函数\",\"161\":\"15#_7-函数参数设置默认值\",\"162\":\"15#_8-rest参数\",\"163\":\"15#_9-扩展运算符\",\"164\":\"15#_10-数据类型symbol\",\"165\":\"15#_11-迭代器-iterator\",\"166\":\"15#_12-生成器-generator\",\"167\":\"15#_13-promise\",\"168\":\"15#_14-集合-set\",\"169\":\"15#_15-map\",\"170\":\"15#_16-class-类\",\"171\":\"15#构造函数\",\"172\":\"15#静态成员\",\"173\":\"15#类继承\",\"174\":\"15#类的getter和seter方法\",\"175\":\"15#_17-es6数值扩展\",\"176\":\"15#number-epsilon-数值最小精度\",\"177\":\"15#number-isnan-判断数值是否是nan\",\"178\":\"15#number-parseint-和number-parsefloat\",\"179\":\"15#number-isinteger-判断是否是整数\",\"180\":\"15#math-truc-抹掉小数部分\",\"181\":\"15#math-sign-判断数值是正数-1-负数-1-还是0\",\"182\":\"15#_18-es6对象扩展\",\"183\":\"15#object-is-判断2个值是否完全相等\",\"184\":\"15#object-assign-对象合并\",\"185\":\"15#_19-es6模块化\",\"186\":\"15#es7-新特性\",\"187\":\"15#_1-array-includes-是否包含某个元素\",\"188\":\"15#_2-幂运算\",\"189\":\"15#es8-新特性\",\"190\":\"15#_1-async-和-await\",\"191\":\"15#_2-es8-对象方法扩展\",\"192\":\"15#object-keys-和object-values\",\"193\":\"15#object-entries-对象转成键值对的集合\",\"194\":\"15#object-getownpropertydescriptors-获取对象所有属性的描述\",\"195\":\"15#es9-新特性\",\"196\":\"15#_1-扩展运算符和rest参数\",\"197\":\"15#_2-正则捕获分组\",\"198\":\"15#_3-正则反向断言\",\"199\":\"15#es10-新特性\",\"200\":\"15#_1-object-fromentries-将二维数组或map类型转成对象\",\"201\":\"15#_2-trimstart与trimend\",\"202\":\"15#_3-flat-将多维数组转低维数组\",\"203\":\"15#_4-symbol-description-获取symbolde描述\",\"204\":\"15#es11-新特性\",\"205\":\"15#_1-类的私有属性\",\"206\":\"15#_2-promise-allsettled\",\"207\":\"15#_3-可选链操作符\",\"208\":\"15#_4-动态导入import\",\"209\":\"15#_5-bigint数据类型\",\"210\":\"15#_6-globalthis-特殊变量\",\"211\":\"16\",\"212\":\"16#js模块化\",\"213\":\"16#_1-模块化背景\",\"214\":\"16#_2-commonjs规范\",\"215\":\"16#_3-amd-规范\",\"216\":\"16#_4-cmd-规范\",\"217\":\"16#_5-es6模块化\",\"218\":\"17\",\"219\":\"17#postmessage-实现父子页面通信\",\"220\":\"17#postmessage-如何实现跨域\",\"221\":\"18\",\"222\":\"18#websocket是什么\",\"223\":\"18#客户端网络信息\",\"224\":\"18#对比传统方法\",\"225\":\"18#websocket的缺点\",\"226\":\"18#websocket事件方法有\",\"227\":\"18#客户端与服务器使用websocket通信案例\",\"228\":\"18#websocket的心跳机制-为什么websocket需要心跳机制\",\"229\":\"19\",\"230\":\"19#worker对象\",\"231\":\"19#应用场景\",\"232\":\"19#使用\",\"233\":\"19#关闭线程\",\"234\":\"19#案例\",\"235\":\"20\",\"236\":\"20#事件循环\",\"237\":\"20#_1-进程和线程\",\"238\":\"20#什么是进程\",\"239\":\"20#什么是线程\",\"240\":\"20#_2-浏览器进程\",\"241\":\"20#_3-什么是异步\",\"242\":\"20#单线程是异步产生的原因\",\"243\":\"20#如何理解js的异步\",\"244\":\"20#事件循环式异步的实现方法\",\"245\":\"20#什么是js的事件循环\",\"246\":\"20#js中的计时器能做到精确计时吗\",\"247\":\"21\",\"248\":\"21#object-对象描述操作\",\"249\":\"21#getownpropertydescriptors-获取对象的描述\",\"250\":\"21#defineproperty-设置属性描述符\",\"251\":\"21#freeze-对象冻结\",\"252\":\"21#seal-对象封闭\",\"253\":\"22\",\"254\":\"22#渲染原理\",\"255\":\"22#浏览器是如何渲染页面的-从输入网址到页面正常展示-浏览器做了什么\",\"256\":\"22#_1-html解析\",\"257\":\"22#_2-样式计算\",\"258\":\"22#_3-布局-layout\",\"259\":\"22#_4-分层-layer\",\"260\":\"22#_5-绘制\",\"261\":\"22#_6-分块-tiling\",\"262\":\"22#_7-光栅化-raster\",\"263\":\"22#_8-画-draw\",\"264\":\"22#什么是回流-reflow\",\"265\":\"22#什么是重绘-repaint\",\"266\":\"22#为什么-transform效率那么高\",\"267\":\"23\",\"268\":\"23#_1-xss-攻击-及防护\",\"269\":\"23#什么是xss\",\"270\":\"23#xss常见注入方法\",\"271\":\"23#xss攻击类型\",\"272\":\"23#防御xss方法\",\"273\":\"23#_2-csrf-跨站请求伪造\",\"274\":\"23#什么是csrf\",\"275\":\"23#csrf常见攻击类型\",\"276\":\"23#防御csrf方法\",\"277\":\"24\",\"278\":\"24#跨域\",\"279\":\"24#_1-什么是跨域\",\"280\":\"24#_2-解决方案\",\"281\":\"24#jsonp方案\",\"282\":\"24#cors方案\",\"283\":\"24#代理服务方法\",\"284\":\"24#代理转发\",\"285\":\"24#postmessage方案\",\"286\":\"24#websocket方案\",\"287\":\"25\",\"288\":\"25#_1-深拷贝需要注意哪些问题\",\"289\":\"26\",\"290\":\"27\",\"291\":\"28\",\"292\":\"29\",\"293\":\"29#_1-安装node\",\"294\":\"29#_2-安装typescript\",\"295\":\"29#_3-创建ts格式文件\",\"296\":\"29#_4-使用tsc编译文件\",\"297\":\"29#ts优势-相比与js\",\"298\":\"30\",\"299\":\"30#对象-类class\",\"300\":\"30#定义类\",\"301\":\"30#构造函数constructor\",\"302\":\"30#this指向\",\"303\":\"30#类继承\",\"304\":\"30#抽象类与抽象方法\",\"305\":\"31\",\"306\":\"31#_1-数值类型-number\",\"307\":\"31#_2-布尔类型-boolean\",\"308\":\"31#_3-字符串类型-string\",\"309\":\"31#_4-数组类型-array\",\"310\":\"31#_5-元组-tuple\",\"311\":\"31#_6-空类型-void\",\"312\":\"31#_7-枚举类型-enum\",\"313\":\"31#_8-任意类型-any\",\"314\":\"31#_9-未知类型-unknown\",\"315\":\"31#ts的类型断言有2种写法-关键字as-类型-值\",\"316\":\"31#_10-永远不会有返回值类型-never\",\"317\":\"31#_11-字面量类型\",\"318\":\"31#_12-对象-object\",\"319\":\"31#_13-函数表达式类型\",\"320\":\"31#_14-接口类型-interface\",\"321\":\"31#_15-泛型-generics\",\"322\":\"31#_16-联合类型\",\"323\":\"31#_17-交叉类型\",\"324\":\"31#_18-工具类型\",\"325\":\"32\",\"326\":\"32#_1-什么是typescript\",\"327\":\"32#_2-类型声明和类型推断的区别\",\"328\":\"32#_3-什么是联合类型和交叉类型\",\"329\":\"32#_4-枚举-enum-是什么-它的优势-应用案例。枚举和常量枚举的区别\",\"330\":\"32#_5-什么是类型断言\",\"331\":\"32#_6-typescript中的可选参数和默认参数是什么\",\"332\":\"32#_7-什么是类型守卫-有什么作用\",\"333\":\"32#_8-const和readonly的区别\",\"334\":\"32#_9-typescript数据类型都有哪些\",\"335\":\"32#_10-interface可以给function-array-class-indexable-做声明吗\",\"336\":\"32#_11-typescript-中-any-类型的作用是什么-滥用会有什么后果\",\"337\":\"32#_12-说说typescript中命名空间与模块的理解和区别\",\"338\":\"32#_13-typescript支持的类访问修饰符有哪些\",\"339\":\"32#_14-typescript中never和void的区别\",\"340\":\"32#_15-typescript中any和unknown有什么区别\",\"341\":\"32#_16-typescript中的泛型是什么\",\"342\":\"32#_17-type和interface区别和相同点\",\"343\":\"32#_18-omit-类型有什么作用\",\"344\":\"32#_19-typescript中什么是装饰器\",\"345\":\"32#_20-typescript中什么是函数重载\",\"346\":\"32#_21-keyof和typeof关键字的作用\",\"347\":\"32#_22-declare有什么用\",\"348\":\"33\",\"349\":\"33#axios-请求\",\"350\":\"33#axios-get-url-config-查询\",\"351\":\"33#axios-post-url-data-config-新增\",\"352\":\"33#axios-put-url-data-config-修改\",\"353\":\"33#axios-delete-url-config-删除\",\"354\":\"33#axios-request-config-通用请求\",\"355\":\"33#axios设置默认值\",\"356\":\"33#axios请求体\",\"357\":\"33#axios响应体\",\"358\":\"33#axios同步请求\",\"359\":\"33#axios拦截器\",\"360\":\"34\",\"361\":\"34#pinia状态管理\",\"362\":\"34#_1-为什么使用pinia管理vue数据状态\",\"363\":\"34#_2-如何安装使用步骤\",\"364\":\"34#_3-pinia状态管理store的核心组成\",\"365\":\"34#_4-如何获取响应式的store数据\",\"366\":\"35\",\"367\":\"35#router路由\",\"368\":\"35#router-link\",\"369\":\"35#router-view\",\"370\":\"35#指定路由模式\",\"371\":\"35#带参数的动态路由\",\"372\":\"35#路由跳转-router-push\",\"373\":\"35#路由替换-router-replace\",\"374\":\"35#路由历史-router-go\",\"375\":\"35#路由命名\",\"376\":\"35#路由重定向-redirect\",\"377\":\"35#路由别名-alias\",\"378\":\"35#路由守卫\",\"379\":\"35#全局前置守卫-beforeeach-通过next方法放行。\",\"380\":\"35#全局解析守卫-beforeresolve\",\"381\":\"35#全局后置守卫-aftereach\",\"382\":\"35#独享路由守卫\",\"383\":\"35#组件守卫\",\"384\":\"35#路由懒加载\",\"385\":\"35#_404配置\",\"386\":\"35#路由鉴权拦截\",\"387\":\"36\",\"388\":\"36#vue源码学习\",\"389\":\"36#_1-vue模板解析实现\",\"390\":\"36#_2-vue生命周期实现\",\"391\":\"36#_3-vue事件添加实现\",\"392\":\"36#_4-vue数据劫持\",\"393\":\"36#_5-vue双向绑定\",\"394\":\"36#_6-vue表单数据的响应式\",\"395\":\"37\",\"396\":\"37#_1-vue3环境安装篇\",\"397\":\"37#安装vue脚手架-vue-cli\",\"398\":\"37#指定启动端口\",\"399\":\"37#安装使用-elementplus\",\"400\":\"37#安装使用elementplus-icon\",\"401\":\"37#动态引入图片问题\",\"402\":\"37#_2-实战问题篇\",\"403\":\"37#计算属性获取动态参数\",\"404\":\"37#设置404路由\",\"405\":\"37#异常报错\",\"406\":\"37#搜索框之外点击关闭\",\"407\":\"37#vue3添加debugger无效-如何解决\",\"408\":\"37#vue3嵌套路由配置之后-页面显示空白\",\"409\":\"37#vue3自定义ref-实现防抖\",\"410\":\"38\",\"411\":\"38#组合式-composition-api\",\"412\":\"38#组合式函数\",\"413\":\"38#基础知识\",\"414\":\"38#_1-模板语法\",\"415\":\"38#文本插值\",\"416\":\"38#html代码\",\"417\":\"38#属性绑定\",\"418\":\"38#_2-class和style\",\"419\":\"38#动态class\",\"420\":\"38#动态style\",\"421\":\"38#属性透传-attribute\",\"422\":\"38#透传属性获取\",\"423\":\"38#_3-条件和列表\",\"424\":\"38#v-if、v-else、v-else-if\",\"425\":\"38#v-show\",\"426\":\"38#列表渲染\",\"427\":\"38#_4-事件处理\",\"428\":\"38#内联事件\",\"429\":\"38#方法事件\",\"430\":\"38#事件修饰符\",\"431\":\"38#按键修饰符\",\"432\":\"38#_5-表单model\",\"433\":\"38#表单修饰符\",\"434\":\"38#definemodel\",\"435\":\"38#v-model接收参数\",\"436\":\"38#自定义model修饰符\",\"437\":\"38#_6-模板引用\",\"438\":\"38#_7-组件\",\"439\":\"38#定义组件\",\"440\":\"38#传递props\",\"441\":\"38#子组件emit触发父方法\",\"442\":\"38#_8-插槽-slot\",\"443\":\"38#默认插槽\",\"444\":\"38#具名插槽\",\"445\":\"38#动态插槽名\",\"446\":\"38#插槽作用域\",\"447\":\"38#_9-自定义指令\",\"448\":\"38#指令钩子\",\"449\":\"38#钩子参数\",\"450\":\"38#简化写法\",\"451\":\"38#_10-插件\",\"452\":\"38#_11-内置组件\",\"453\":\"38#transition过渡动画组件\",\"454\":\"38#transitiongroup\",\"455\":\"38#keepalive\",\"456\":\"38#teleport\",\"457\":\"38#suspense\",\"458\":\"38#生明周期\",\"459\":\"38#函数\",\"460\":\"38#setup\",\"461\":\"38#setup语法糖写法缺点-组件无法命名缺失了name属性-默认使用文件名作为组件-name。\",\"462\":\"38#如何在setup语法糖前提下-自定义组件的名字\",\"463\":\"38#ref-和reactive\",\"464\":\"38#reactive-的局限性\",\"465\":\"38#computed-计算属性\",\"466\":\"38#watch\",\"467\":\"38#watch-只能监听以下4中数据\",\"468\":\"38#如何解除watch监听事件\",\"469\":\"38#watcheffect\",\"470\":\"38#依赖注入provide-inject\",\"471\":\"38#provide提供数据\",\"472\":\"38#inject注入数据\",\"473\":\"38#tovalue\",\"474\":\"39\",\"475\":\"39#_1-vuex是什么\",\"476\":\"39#_2-如何安装使用\",\"477\":\"39#_3-vuex核心组成都有哪些\",\"478\":\"39#state-数据存储\",\"479\":\"39#mutation-变更state数据\",\"480\":\"39#mutation-如何传递参数\",\"481\":\"39#action-异步修改数据\",\"482\":\"39#getter-包装数据\",\"483\":\"39#module-模块\",\"484\":\"39#_4-vuex在vue3里面使用-组合式api\",\"485\":\"40\",\"486\":\"40#一-vue2生命周期\",\"487\":\"40#_1-vue的生命周期都有哪些-8个\",\"488\":\"40#_1-1-发送请求在create阶段还是在mounted阶段\",\"489\":\"40#_2-为什么发送请求不在-beforecreate里\",\"490\":\"40#_2-1-beforecreate和created有什么区别\",\"491\":\"40#_3-在create阶段如何获取dom元素\",\"492\":\"40#_4-进入页面之后会执行哪些生命周期\",\"493\":\"40#_5-第二次或第n次进入页面会执行哪些生命周期\",\"494\":\"40#_6-父组件引入子组件-那么生命周期执行循序是什么\",\"495\":\"40#_7-加入keep-alive会执行哪些生命周期-8-2\",\"496\":\"40#_8-说一下常用的生命周期及对应使用场景\",\"497\":\"40#二-组件传值\",\"498\":\"40#_1-组件传值方式\",\"499\":\"40#_2-子组件如何修改父组件的值\",\"500\":\"40#_3-父组件修改子组件的值\",\"501\":\"40#_4-如何找到根组件\",\"502\":\"40#三-插槽-slot\",\"503\":\"40#_1-匿名插槽\",\"504\":\"40#_2-具名插槽\",\"505\":\"40#_3-插槽作用域\",\"506\":\"40#四-vue如何封装组件\",\"507\":\"40#五-关于vuex\",\"508\":\"40#_1-vuex有哪些属性\",\"509\":\"40#_2-vuex数据时单向的还是双向的\",\"510\":\"40#_3-vuex如何做持久化存储\",\"511\":\"40#六-vue设置代理\",\"512\":\"40#_1-vue项目设置代理是为了解决接口跨域问题。\",\"513\":\"40#_2-代理打包之后-会出现代理接口跨域问题-如何解决\",\"514\":\"40#七-打包问题\",\"515\":\"40#_1-打包之后白屏问题什么原因导致的\",\"516\":\"40#_2-打包后-路径点击之后白屏-图片内容都不显示\",\"517\":\"40#_3-如何项目上线需要-history-模式-但是前端开发是-hash-模式-怎么处理\",\"518\":\"40#八-vue路由模式\",\"519\":\"40#_1-路由都有哪些模式-都有什么区别\",\"520\":\"40#_2-介绍一下spa及缺点\",\"521\":\"40#_3-vue路径如何传参\",\"522\":\"40#_4-路由导航守卫有哪些\",\"523\":\"40#_5-动态路由\",\"524\":\"40#八-setup函数可以跟data-methods等同时使用吗\",\"525\":\"41\",\"526\":\"41#_1-webpack有什么用\",\"527\":\"41#_2-webpack的核心功能有哪些\",\"528\":\"41#入口-entry\",\"529\":\"41#输出-output\",\"530\":\"41#loader-module模块转换\",\"531\":\"41#plugin-插件\",\"532\":\"41#mode-模式\",\"533\":\"41#_3-webpack和vite打包的区别-为什么vite打包速度快于webpack\",\"534\":\"41#_1-工作原理上不同\",\"535\":\"41#_2-热更新不同\",\"536\":\"41#_3-构建速度不同\",\"537\":\"41#_4-配置不同\",\"538\":\"42\",\"539\":\"43\",\"540\":\"43#app生命周期\",\"541\":\"43#全局变量\",\"542\":\"43#页面生命周期\",\"543\":\"43#小程序跳转\",\"544\":\"43#小程序获取html数据\",\"545\":\"43#页面路径传参\",\"546\":\"43#image-的mode类型\",\"547\":\"43#常见问题\",\"548\":\"43#_1-小程序体积不得超过2m-超过如何处理\",\"549\":\"43#_2-bindtap和catchtap的区别是什么\",\"550\":\"43#_3-小程序页面之间传递参数的方法有哪些\",\"551\":\"43#_4-小程序关联微信公众号如何确定用户的唯一性\",\"552\":\"43#_5-小程序对wx-if-和-hidden使用的理解\",\"553\":\"43#_6-webview中的页面怎么跳回小程序中\",\"554\":\"43#_7-如何实现下来刷新\",\"555\":\"44\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1],\"2\":[1,18],\"3\":[2,7],\"4\":[1,26],\"5\":[1,27],\"6\":[1,11],\"7\":[1,10],\"8\":[1,10],\"9\":[1],\"10\":[1],\"11\":[2,49],\"12\":[1],\"13\":[1,8],\"14\":[1],\"15\":[8,2],\"16\":[2,9],\"17\":[3,7],\"18\":[5,22],\"19\":[2,5],\"20\":[1,17],\"21\":[1],\"22\":[1],\"23\":[2,44],\"24\":[2,49],\"25\":[2,30],\"26\":[2],\"27\":[1,35],\"28\":[1,19],\"29\":[2,3],\"30\":[1,28],\"31\":[1,10],\"32\":[1,35],\"33\":[2,69],\"34\":[2,13],\"35\":[2,66],\"36\":[2,46],\"37\":[2,29],\"38\":[1],\"39\":[1,78],\"40\":[1],\"41\":[1,42],\"42\":[1],\"43\":[1],\"44\":[2,13],\"45\":[3,22],\"46\":[3,37],\"47\":[3,17],\"48\":[4,8],\"49\":[4,8],\"50\":[3],\"51\":[1,21],\"52\":[1,27],\"53\":[1,23],\"54\":[2,26],\"55\":[5,12],\"56\":[4,24],\"57\":[3,20],\"58\":[2,60],\"59\":[3,64],\"60\":[4,26],\"61\":[1],\"62\":[1],\"63\":[2,11],\"64\":[2,47],\"65\":[1,41],\"66\":[1,20],\"67\":[1],\"68\":[2,18],\"69\":[3,12],\"70\":[4,20],\"71\":[3,16],\"72\":[3,22],\"73\":[4,18],\"74\":[1,21],\"75\":[2,13],\"76\":[1,69],\"77\":[1,31],\"78\":[1,24],\"79\":[1,19],\"80\":[1,20],\"81\":[1],\"82\":[1],\"83\":[2,201],\"84\":[1],\"85\":[2],\"86\":[3,4],\"87\":[2,6],\"88\":[2,43],\"89\":[2,20],\"90\":[2,11],\"91\":[2,17],\"92\":[3,30],\"93\":[1,3],\"94\":[1,11],\"95\":[3,26],\"96\":[6,20],\"97\":[3,17],\"98\":[6,26],\"99\":[3,27],\"100\":[3,24],\"101\":[6,20],\"102\":[3,21],\"103\":[3,27],\"104\":[3,22],\"105\":[4,25],\"106\":[3,26],\"107\":[3,26],\"108\":[3,25],\"109\":[3,17],\"110\":[3,14],\"111\":[3,16],\"112\":[4,16],\"113\":[3,22],\"114\":[3,14],\"115\":[3,22],\"116\":[3,18],\"117\":[3,18],\"118\":[8,37],\"119\":[8,33],\"120\":[3,13],\"121\":[3,15],\"122\":[5,17],\"123\":[3,20],\"124\":[3,22],\"125\":[7,30],\"126\":[3,20],\"127\":[3,18],\"128\":[3,20],\"129\":[2,63],\"130\":[1],\"131\":[1,5],\"132\":[2,9],\"133\":[2,26],\"134\":[3,42],\"135\":[2,43],\"136\":[2,39],\"137\":[2,47],\"138\":[2,45],\"139\":[2,64],\"140\":[2,36],\"141\":[2,59],\"142\":[3,28],\"143\":[3,38],\"144\":[3,23],\"145\":[3,34],\"146\":[3,72],\"147\":[2,8],\"148\":[2],\"149\":[7,41],\"150\":[9,20],\"151\":[3,36],\"152\":[1],\"153\":[2,17],\"154\":[2],\"155\":[2,4],\"156\":[2,7],\"157\":[2,17],\"158\":[2,16],\"159\":[2,15],\"160\":[2,13],\"161\":[2,4],\"162\":[2,23],\"163\":[2,26],\"164\":[2,25],\"165\":[3,70],\"166\":[3,46],\"167\":[2,65],\"168\":[3,29],\"169\":[2,31],\"170\":[3,14],\"171\":[1,11],\"172\":[1,19],\"173\":[1,23],\"174\":[1,10],\"175\":[2],\"176\":[3,32],\"177\":[3,5],\"178\":[4,17],\"179\":[3,5],\"180\":[3,5],\"181\":[6,6],\"182\":[2],\"183\":[3,9],\"184\":[3,30],\"185\":[2,79],\"186\":[2],\"187\":[4,9],\"188\":[3,13],\"189\":[2],\"190\":[4,79],\"191\":[3],\"192\":[4,16],\"193\":[3,18],\"194\":[3,28],\"195\":[2],\"196\":[2,24],\"197\":[2],\"198\":[2,20],\"199\":[2],\"200\":[4,14],\"201\":[2,4],\"202\":[3,18],\"203\":[4,8],\"204\":[2],\"205\":[2,21],\"206\":[3,13],\"207\":[2,21],\"208\":[2,20],\"209\":[2,30],\"210\":[3,6],\"211\":[1],\"212\":[1],\"213\":[2,34],\"214\":[2,25],\"215\":[3,60],\"216\":[3,71],\"217\":[2,4],\"218\":[2,24],\"219\":[2,50],\"220\":[3,67],\"221\":[1],\"222\":[2,13],\"223\":[1,17],\"224\":[1,18],\"225\":[1,8],\"226\":[2,13],\"227\":[1,55],\"228\":[3,70],\"229\":[1],\"230\":[1,8],\"231\":[2,4],\"232\":[1,5],\"233\":[1,9],\"234\":[2,46],\"235\":[1],\"236\":[1],\"237\":[2],\"238\":[2,3],\"239\":[2,4],\"240\":[2,38],\"241\":[3,12],\"242\":[1],\"243\":[1,35],\"244\":[1],\"245\":[2,21],\"246\":[2,19],\"247\":[1],\"248\":[2,19],\"249\":[2,4],\"250\":[2,8],\"251\":[2,11],\"252\":[2,6],\"253\":[1],\"254\":[1,4],\"255\":[4,16],\"256\":[2,23],\"257\":[2,18],\"258\":[3,10],\"259\":[3,18],\"260\":[2,4],\"261\":[3,3],\"262\":[3,5],\"263\":[3,8],\"264\":[3,13],\"265\":[3,7],\"266\":[3,11],\"267\":[1],\"268\":[4],\"269\":[2,16],\"270\":[1,43],\"271\":[1,22],\"272\":[1,12],\"273\":[3],\"274\":[2,28],\"275\":[1,8],\"276\":[1,5],\"277\":[1],\"278\":[1],\"279\":[3,8],\"280\":[2,3],\"281\":[1,64],\"282\":[1,43],\"283\":[1,22],\"284\":[1,15],\"285\":[1,42],\"286\":[1,37],\"287\":[1],\"288\":[3,36],\"289\":[1,31],\"290\":[1,28],\"291\":[1,147],\"292\":[1],\"293\":[2,6],\"294\":[2,4],\"295\":[2],\"296\":[2,3],\"297\":[3,12],\"298\":[1],\"299\":[2,3],\"300\":[1,35],\"301\":[1,3],\"302\":[1,2],\"303\":[1,22],\"304\":[1,15],\"305\":[1,18],\"306\":[3,8],\"307\":[3,8],\"308\":[3,8],\"309\":[3,32],\"310\":[3,10],\"311\":[3,9],\"312\":[3,23],\"313\":[3,5],\"314\":[3,4],\"315\":[4,29],\"316\":[3,10],\"317\":[2,13],\"318\":[3,30],\"319\":[2,12],\"320\":[3,61],\"321\":[3,68],\"322\":[2,10],\"323\":[2,22],\"324\":[2,31],\"325\":[1],\"326\":[3,41],\"327\":[3,5],\"328\":[3,5],\"329\":[8,13],\"330\":[3,4],\"331\":[3,6],\"332\":[4,29],\"333\":[3,6],\"334\":[3,48],\"335\":[7,33],\"336\":[7,7],\"337\":[3,11],\"338\":[3,17],\"339\":[3,10],\"340\":[3,9],\"341\":[3,5],\"342\":[3,28],\"343\":[4,18],\"344\":[3,84],\"345\":[3,31],\"346\":[3,7],\"347\":[3,16],\"348\":[1],\"349\":[2,14],\"350\":[5],\"351\":[6],\"352\":[6],\"353\":[5],\"354\":[4,42],\"355\":[1,29],\"356\":[1,361],\"357\":[1,41],\"358\":[1,29],\"359\":[1,26],\"360\":[1],\"361\":[1],\"362\":[3,13],\"363\":[2,47],\"364\":[3,53],\"365\":[3,60],\"366\":[1],\"367\":[1,15],\"368\":[2,5],\"369\":[2,60],\"370\":[1,25],\"371\":[1,13],\"372\":[3,39],\"373\":[3,14],\"374\":[3,16],\"375\":[1,24],\"376\":[2,10],\"377\":[2,9],\"378\":[1],\"379\":[4,14],\"380\":[2,24],\"381\":[2,10],\"382\":[1,19],\"383\":[1,40],\"384\":[1,19],\"385\":[1,10],\"386\":[1,35],\"387\":[1],\"388\":[1],\"389\":[2,68],\"390\":[2,41],\"391\":[2,78],\"392\":[2,24],\"393\":[2,124],\"394\":[2,52],\"395\":[1],\"396\":[2],\"397\":[3,43],\"398\":[1,21],\"399\":[1,24],\"400\":[1,35],\"401\":[1,31],\"402\":[2],\"403\":[1,28],\"404\":[1,11],\"405\":[2,8],\"406\":[1,25],\"407\":[3,16],\"408\":[3,7],\"409\":[2,26],\"410\":[1],\"411\":[3,59],\"412\":[1,65],\"413\":[1],\"414\":[2],\"415\":[1,9],\"416\":[1,15],\"417\":[1,41],\"418\":[2],\"419\":[1,45],\"420\":[1,29],\"421\":[2,25],\"422\":[1,24],\"423\":[2],\"424\":[3,19],\"425\":[2,6],\"426\":[1,58],\"427\":[2,6],\"428\":[1,16],\"429\":[1,13],\"430\":[1,12],\"431\":[1,38],\"432\":[2,50],\"433\":[1,8],\"434\":[1,48],\"435\":[2,27],\"436\":[1,36],\"437\":[2,41],\"438\":[2],\"439\":[1,48],\"440\":[1,103],\"441\":[1,39],\"442\":[3,2],\"443\":[1,17],\"444\":[1,33],\"445\":[1,14],\"446\":[1,22],\"447\":[2,27],\"448\":[1,29],\"449\":[1,50],\"450\":[1,35],\"451\":[2,29],\"452\":[2],\"453\":[1,58],\"454\":[1,37],\"455\":[1,41],\"456\":[1,36],\"457\":[1,23],\"458\":[1,53],\"459\":[1],\"460\":[1,55],\"461\":[4],\"462\":[3,17],\"463\":[2,51],\"464\":[3,27],\"465\":[2,50],\"466\":[1,34],\"467\":[1,7],\"468\":[2,12],\"469\":[1,27],\"470\":[2,8],\"471\":[1,19],\"472\":[1,19],\"473\":[1,31],\"474\":[1],\"475\":[3,7],\"476\":[3,32],\"477\":[3,16],\"478\":[2,19],\"479\":[2,20],\"480\":[2,36],\"481\":[2,41],\"482\":[2,35],\"483\":[2,22],\"484\":[4,31],\"485\":[1],\"486\":[2],\"487\":[4,8],\"488\":[3,12],\"489\":[4,6],\"490\":[4,6],\"491\":[3,7],\"492\":[3,6],\"493\":[3,13],\"494\":[4,9],\"495\":[5,12],\"496\":[3,13],\"497\":[2],\"498\":[2,26],\"499\":[2,3],\"500\":[2,9],\"501\":[3,3],\"502\":[3,4],\"503\":[2,1],\"504\":[2,28],\"505\":[2,12],\"506\":[3,4],\"507\":[2],\"508\":[3,12],\"509\":[3,8],\"510\":[3,15],\"511\":[2],\"512\":[3,16],\"513\":[5,47],\"514\":[2],\"515\":[3,12],\"516\":[5,10],\"517\":[8,3],\"518\":[2],\"519\":[4,14],\"520\":[3,5],\"521\":[3,26],\"522\":[3,19],\"523\":[2,17],\"524\":[4,36],\"525\":[1,7],\"526\":[3,38],\"527\":[3,10],\"528\":[2,16],\"529\":[2,21],\"530\":[2,37],\"531\":[2,34],\"532\":[2,20],\"533\":[4],\"534\":[2,16],\"535\":[2,10],\"536\":[2,5],\"537\":[2,8],\"538\":[1,13],\"539\":[1],\"540\":[1,8],\"541\":[1,9],\"542\":[1,44],\"543\":[1,18],\"544\":[1,17],\"545\":[1,15],\"546\":[2,31],\"547\":[1],\"548\":[4,18],\"549\":[3,8],\"550\":[3,15],\"551\":[2,15],\"552\":[6,12],\"553\":[3,19],\"554\":[2,19],\"555\":[1,3]},\"averageFieldLength\":[2.2428057553956853,24.821514299911975],\"storedFields\":{\"0\":{\"h\":\"\"},\"1\":{\"h\":\"关于我\"},\"2\":{\"h\":\"基本信息\",\"t\":[\"姓名：陈敬起\",\"毕业院校：郑州科技学院 （2012.09-2016.06） | 学历：全日制本科 | 院系专业：计算机 - 通信工程\",\"邮箱：cjq314@qq.com\"]},\"3\":{\"h\":\"能做什么？\",\"t\":[\"独立完成网站开发、UI设计、小程序开发(原生、uni-app)\"]},\"4\":{\"h\":\"技术栈\",\"t\":[\"精通HTML5/Html、CSS/CSS3、JavaScript/ES6~ES11、JQuery、Ajax/JSON等移动端和PC端前端开发技术。\",\"熟悉Vue全家桶主流框架，熟练使用Vue3、TypeScript、Sass/Less前端技术，熟练使用ES6模块化开发。\",\"熟悉BootStrap、Element UI、IView、Color UI、Chart/Echart、Swiper等第三方插件。\",\"熟悉微信原生小程序开发及API接口调用，独立完成小程序开发及上线的工作。\"]},\"5\":{\"h\":\"我的优势\",\"t\":[\"工作经验丰富，有设计经验，能快速了解设计师的需求，零沟通障碍，严格还原设计稿效果；\",\"了解C#、Java、PHP后端语言，能基于PHP二次开发项目，使用Node+Mysql开发接口等，有助于前端处理数据和逻辑功能开发；\",\"自学能力极强，爱折腾，能独立完成开发建站工作，个人网站：www.51qux.com；\",\"热爱开源（https://github.com/GHchenjingqi），开源了几个WordPress博客主题，分享专业知识，善于总结，吸取经验；\"]},\"6\":{\"h\":\"培训经历\",\"t\":[\"2015.09 - 2015.11 与郑州AAA数字艺术教育培训了“UI/UE全能班”，培训内容：UI设计、前端开发、UE交互设计。\"]},\"7\":{\"h\":\"常用软件\",\"t\":[\"开发IDE：VScode、HBuilder、WebStorm\",\"设计软件：Adobe PhotoShop 、Adobe XD、Axure/墨刀\"]},\"8\":{\"h\":\"\",\"t\":[\"推荐内容\",\"vue2\",\"vue3\",\"vue路由\",\"vuex状态管理\",\"webpack配置\",\"ES6新特性\",\"小程序\",\"TypeScript\",\"Mysql基础\"]},\"9\":{\"h\":\"\"},\"10\":{\"h\":\"\"},\"11\":{\"h\":\"CSS 单位\",\"t\":[\"PX 像素，绝对单位，浏览器物理像素单位\",\"% 相对单位，默认相对父元素;如果父级没有设置，就相对根子号，甚至浏览器的默认大小\",\"rem 相对单位，相对于根字号，默认 1rem = 16px，假如修改了根字号 1rem = 根字号\",\"em 相对单位，默认相对父元素的font-size，1em = 父元素的字号\",\"vw 将视口宽度分成了100份 1vw = 视宽 / 100\",\"vh 将视口高度分层了100份 1vh = 视高 / 100\",\"vmin 视口最短边的长度\",\"vmax 视口最长边的长度\",\"rpx 是小程序常用的相对单位(小程序规定屏幕宽度 750rpx)，默认屏宽按照iPhone6( 物理宽度375px)，dpr:2   100vw = 750rpx = 375px   , 相当于 1rpx = 0.5px\"]},\"12\":{\"h\":\"\"},\"13\":{\"h\":\"前提条件\",\"t\":[\"1.安装node.js，查看方式\",\"node -v\",\"npm -v \"]},\"14\":{\"h\":\"安装步骤\"},\"15\":{\"h\":\"1.初始化安装，需要注意入口文件为 main.js（默认安装入口为：index.js)\",\"t\":[\"npm init\"]},\"16\":{\"h\":\"2.安装依赖\",\"t\":[\"npm install electron --save-dev \",\"或\",\"yarn add electron\",\"或\",\"cnpm install --save-dev electron\"]},\"17\":{\"h\":\"3.修改package.json文件\",\"t\":[\"环境改为“devDependencies”，以及入口命令改为 \\\"electron .\\\"。\",\"\\\"scripts\\\": { \\\"start\\\": \\\"electron .\\\" } \"]},\"18\":{\"h\":\"4.新建入口文件main.js 和index.html\",\"t\":[\"main.js配置以下代码： const { app, BrowserWindow } = require('electron') const createWindow = () => { const win = new BrowserWindow({ width: 800, height: 600 }) win.loadFile('index.html') } app.whenReady().then(() => { createWindow() }) \"]},\"19\":{\"h\":\"5.启动应用\",\"t\":[\"npm run start\",\"这样就启动了一个简单的应用了。\"]},\"20\":{\"h\":\"打包步骤\",\"t\":[\"官方打包工具需要node最低版本是14x，不然导入打包工具时会报错。以下是node的各个版本地址，下载指定版本安装即可完成升级或降级：\",\"安装打包工具\",\"npm install --save-dev @electron-forge/cli\",\"npx electron-forge import\",\"打包命令\",\"npm run make\"]},\"21\":{\"h\":\"\"},\"22\":{\"h\":\"java基础知识\"},\"23\":{\"h\":\"1.java数据类型\",\"t\":[\"1.基本类型 8个：数字（整数，小数），字符，布尔 整数：byte( -2^8 ~ 2^8-1 ),short( -2^15 ~ 2^15-1 ) ,int( -2^31 ~ 2^31-1 ) ,long( -2^64 ~ 2^64-1 ) 小数：float,double 字符: char 布尔: boolean 2.引用类型 无限个（可以自定义 []数组 class 类 interface 接口 enum 枚举 @interface 注解 \",\"java 判断数据类型使用 instanceof 。\",\"String str = \\\"hi java\\\"; System.out.println(str instanceof String); \"]},\"24\":{\"h\":\"2.运算类型转换\",\"t\":[\"隐式转换: 由小到大\",\"强制转换: 由大到小\",\"数字类型由小到大排序： byte < short < char < int < long < float < double\",\"数字类型运算时，由小变大不报错，由大变小会报错（需要强转类型）！\",\"隐式：\",\"byte a1 = 10; byte a2 = 10; // 隐式结果输出是 int类型 System.out.println(a1 + a2); \",\"强制转换：\",\"int aaa = 10; byte bbb = 20; // 需要在右侧表达式前 限定值类型 (byte) byte ccc = (byte)( aaa + bbb) ; \",\"字符串运算：\",\"char + 数字/字符时，会把字符 转为asc11码值 再进行相加。\",\"char aa = 'a'; int bb = 3; // aa 对应asc码值：97，最后隐式转换为 int类型，输出100 System.out.println(aa + bb); \"]},\"25\":{\"h\":\"3.类实例化方法\",\"t\":[\"package test.app.varber2; public class VarF { String name = \\\"zhangSans\\\"; // 实例化方法 public void logName(){ System.out.println(this.name); } public static void main(String[] args) { // 实例化对象 VarF log = new VarF(); // 调用对象 log.logName(); } } \",\"实例化方法传参\",\"package test.app.varber2; public class VarF { String Name = \\\"zhangSans\\\"; public void logName(String name){ Name = name; System.out.println(Name); } public static void main(String[] args) { VarF log = new VarF(); // 传参 log.logName(\\\"LiSan\\\"); } } \"]},\"26\":{\"h\":\"4.修饰符使用\"},\"27\":{\"h\":\"访问修饰符\",\"t\":[\"public 公有的（默认修饰符），对所有类可见。\",\"private 私有的，同一类内可见。\",\"protected 受保护的，同包内的类和所有子类可见。\",\"定义变量的隐式声明：public static final ，默认方法访问权限是 public 。\",\"访问控制和继承\",\"父类中声明为 public 的方法在子类中也必须为 public。\",\"父类中声明为 protected 的方法在子类中要么声明为 protected，要么声明为 public。不能声明为 private。\",\"父类中声明为 private 的方法，不能够被继承。\",\"class AudioPlayer { protected boolean openSpeaker(Speaker sp) { // 实现细节 } } class StreamingAudioPlayer extends AudioPlayer { boolean openSpeaker(Speaker sp) { // 实现细节:父类protected 方法，继承子类修饰符不能为 private } } \"]},\"28\":{\"h\":\"非访问修饰符\",\"t\":[\"static 修饰符，用来创建类方法和类变量。\",\"final 修饰符，用来修饰类、方法和变量，final 修饰的类不能够被继承，修饰的方法不能被继承类重新定义，修饰的变量为常量，是不可修改的。\",\"abstract 修饰符，用来创建抽象类和抽象方法。一个类不能同时被 abstract 和 final 修饰。\",\"synchronized 和 volatile 修饰符，主要用于线程的编程。\"]},\"29\":{\"h\":\"5.对象和类\",\"t\":[\"java中的对象是一个个的功能模块，可以相互调用。\"]},\"30\":{\"h\":\"变量\",\"t\":[\"变量类型由局部变量、实例变量、类变量。\",\"局部变量：类方法中的变量。\",\"实例变量：独立于方法之外的变量，不过没有 static 修饰。\",\"类变量：独立于方法之外的变量，用 static 修饰。\",\"public class Variable{ static int allClicks=0; // 类变量/静态变量 String str=\\\"hello world\\\"; // 实例变量 public void method(){ int i =0; // 局部变量 } } \",\"static 静态属性和方法\",\"在类里面使用关键字 static定义静态属性和方法。\"]},\"31\":{\"h\":\"构造函数\",\"t\":[\"每个类都有构造方法。构造方法的名称必须与类同名，如果没有java编译器会自动提供一个默认的构造方法。\",\"public class Puppy{ public Puppy(String name){ // 这个构造器仅有一个参数：name } } \"]},\"32\":{\"h\":\"创建对象\",\"t\":[\"对象是类的实例化，通过关键字new实现。创建对象需要三步：\",\"声明：声明一个对象，包括对象名称和对象类型。\",\"实例化：使用关键字 new 来创建一个对象。\",\"初始化：使用 new 创建对象时，会调用构造方法初始化对象。\",\"public class Puppy{ public Puppy(String name){ //这个构造器仅有一个参数：name System.out.println(\\\"Puppy Name is :\\\" + name ); } public static void main(String []args){ // 下面的语句将创建一个Puppy对象 Puppy myPuppy = new Puppy( \\\"tommy\\\" ); } } \"]},\"33\":{\"h\":\"6.循环结构\",\"t\":[\"java的循环结构有3种：\",\"while循环\",\"do…while循环\",\"for循环\",\"while循环\",\"只要满足条件就一直循环：\",\"package test.app.doIt; public class doit { public static void add(){ int n = 0; int s = 0; while (n<10){ n++; s= s+n; } System.out.println(\\\"求和结果：\\\"+s); } public static void main(String[] args) { doit ss = new doit(); doit.add(); } } \",\"do...while循环\",\"先执行一次，后判断，满足条件继续执行，直到不满足条件。\",\"public static void dowhilefn(){ int n = 0; int s = 0; do{ n++; s= s+n; }while (n<10); System.out.println(\\\"求和结果：\\\"+s); } \",\"for循环\",\"public static void forfn(){ int s = 0; int i = 0; for ( i =0;i<=10;i++){ s = s + i; } System.out.println(\\\"求和结果：\\\"+s); } \",\"数组增强for循环\",\"Java5引入了一种主要用于数组的增强型for循环。语法如下：\",\"for(类型 item : arrays){ } \",\"public static void forArr(){ // 定义数组 int [] numbers = {10,20,25,40}; int s=0; for (int item : numbers){ s = s + item; } System.out.println(\\\"求和结果：\\\"+s); } \",\"break关键字\",\"break用于在循环语句和switch语句中，跳出循环。\",\"continue关键字\",\"continue关键字用于循环语句中，结束本次循环，继续下一次循环。\"]},\"34\":{\"h\":\"7.条件语句\",\"t\":[\"Java有两种分支结构：\",\"if语句\",\"switch语句\",\"switch(expression){ case value : //语句 break; //可选 case value : //语句 break; //可选 //你可以有任意数量的case语句 default : //可选 //语句 } \"]},\"35\":{\"h\":\"8.数组结构\",\"t\":[\"定义数组有2种方式，【】可以放到变量名前后，首选放到类型和变量之间。\",\"double[] myList; // 首选的方法 或 double myList[]; // 效果相同，但不是首选方法 \",\"创建数组有两种方式：\",\"dataType[] arrayRefVar = new dataType[arraySize]\",\"int data[] = new int[3]; /*开辟了一个长度为3的数组*/ data[0] = 10; // 第一个元素 data[1] = 20; // 第二个元素 data[2] = 30; // 第三个元素 \",\"dataType[] arrayRefVar = {value0, value1, ..., valuek}\",\"int[] myList = {10, 20, 30}; \",\"Arrays数组操作方法\",\"给数组赋值：通过 fill 方法。\",\"int[] ints = new int[5];//定义一个一维数组，含有五个数，默认值为0 Arrays.fill(ints,8);//替换数组的元素，值为8 \",\"对数组排序：通过 sort 方法,按升序。\",\"int [] numbers = {100,10,20,25,40}; Arrays.sort(numbers); System.out.println(Arrays.toString(numbers) ); \",\"比较数组：通过 equals 方法比较数组中元素值是否相等。\",\"int [] numbers = {100,10,20,25,40}; int [] numbers2 = {100,10,20,25,40}; System.out.println(Arrays.equals(numbers, numbers2)); // true \",\"查找数组元素：通过 binarySearch 方法能对排序好的数组进行二分查找法操作。\",\"int [] numbers = {100,10,20,25,40}; int index = Arrays.binarySearch(numbers,20);// 2 \"]},\"36\":{\"h\":\"9.String类\",\"t\":[\"创建字符串\",\"String str = \\\"hi java\\\"; String str2 = new String(\\\"hahhah\\\"); \",\"获取字符串长度 length方法\",\"str2.length(); \",\"拼接字符串 a.concat(b)\",\"String str = \\\"hi java\\\"; String str2 = new String(\\\"还可以！\\\"); String str1 = str.concat(str2); \",\"其他方法：\",\"trim() 去除首尾空格\",\"toUpperCase() 转换为大写\",\"toLowerCase() 转换为小写\",\"valueOf() 删除头尾空白符的字符串\",\"toString() 返回此对象本身\",\"toCharArray() 将字符串转换为字符数组\",\"substring(start,end) 字符串切片\",\"startsWith() 用于检测字符串是否以指定的前缀开始，返回布尔值\",\"split() 拆分字符串\",\"replace(old,new) 返回替换后的新字符串\",\"replaceAll(reg,new) 替换所有匹配的字符串\"]},\"37\":{\"h\":\"10.charactor类\",\"t\":[\"Character 类是Java 语言为内置数据类型 char 提供了包装类。\",\"创建一个 Character 类：\",\"Character ch = new Character('a'); \",\"其他方法：\",\"isLetter() 是否是一个字母\",\"isDigit() 是否是一个数字字符\",\"isWhitespace() 是否一个空格\",\"isUpperCase() 是否是大写字母\",\"isLowerCase() 是否是小写字母\",\"toUpperCase() 指定字母的大写形式\",\"toLowerCase() 指定字母的小写形式\",\"toString()  返回字符的字符串形式，字符串的长度仅为1\"]},\"38\":{\"h\":\"\"},\"39\":{\"h\":\"JFrame类\",\"t\":[\"package test.app.jisuanqi; // 引入基础类 import javax.swing.*; public class Jisuanqi { public static void main(String[] args) { // 1.创建窗口 JFrame frame = new JFrame(\\\"我的计算器\\\"); // 2.创建画布 JPanel panel = new JPanel(); // 2.绘制元素 JTextField one = new JTextField(10); JTextField two = new JTextField(10); JTextField res = new JTextField(10); JButton add = new JButton(\\\"+\\\"); // 4.布局 panel.setLayout(null); // 清除默认布局 one.setBounds(20,20,240,30); two.setBounds(20,50,240,30); add.setBounds(20,90,100,30); res.setBounds(20,130,240,30); // 5.将画布填充元素 panel.add(one); panel.add(two); panel.add(add); panel.add(res); // 6.注册事件 add.addActionListener(e->{ int n1 = Integer.parseInt(one.getText()); int n2 = Integer.parseInt(two.getText()); res.setText(String.valueOf(n1 + n2)); }); // 7.画布关联窗口 frame.add(panel); // 8.显示窗口 frame.setBounds(500,260,300,260); frame.setVisible(true); // 9.设置左上角默认关闭最小化按钮 frame.setDefaultCloseOperation(3); } } \"]},\"40\":{\"h\":\"\"},\"41\":{\"h\":\"Scanner类的使用\",\"t\":[\"package test.app.ScannerDemo; // 包名 // 1.导入Scanner依赖 import java.util.Scanner; // 创建类入口与包名一致 public class ScannerDemo { public static void main(String[] args) { // 2.实例化Scanner对象 Scanner sc = new Scanner(System.in); // 控制台输出 System.out.println(\\\"请输入：\\\"); // 3.获取控制台输入的值 int number1 = sc.nextInt(); System.out.println(\\\"您输入了：\\\"+number1); System.out.println(\\\"请继续输入：\\\"); // 4.获取控制台输入的值 int number2 = sc.nextInt(); System.out.println(\\\"您输入了：\\\"+number2); } } \"]},\"42\":{\"h\":\"\"},\"43\":{\"h\":\"HTTP知识\"},\"44\":{\"h\":\"1.HTTP协议概述\",\"t\":[\"HTTP（Hypertext Transfer Protocol）是一种用于传输超文本的应用层协议。它基于客户端-服务器模型，客户端发起请求，服务器返回响应。\",\"HTTP是无状态协议，每个请求都是独立的，服务器不会保留任何客户端的状态信息。\"]},\"45\":{\"h\":\"2.HTTP请求方式有哪些？8个\",\"t\":[\"HTTP1.0定义了三种请求方法： GET（获取）, POST（更新） 和 HEAD（检查资源）方法\",\"HTTP1.1新增了五种请求方法：OPTIONS（预检）, PUT（新增）, DELETE（删除）, TRACE（诊断） 和 CONNECT（隧道）\"]},\"46\":{\"h\":\"3.这些请求方式具体的作用是什么？\",\"t\":[\"HEAD 请求：用于向服务器请求获取某个资源的头部信息，通常用于检查资源是否存在、获取资源的元数据（文件大小）等场景。只返回请求头，减轻服务器压力和节省流量资源。\",\"TRACE 请求：回显服务器收到的请求，主要用于测试或诊断。\",\"CONNECT 请求：用于建立隧道连接，允许客户端通过代理服务器与目标服务器建立一条直接的TCP连接，用于传输非HTTP协议的数据。\",\"**OPTIONS 请求：**用于检测服务器允许的 http 方法，又称“预检请求”，常用于CORS跨域资源请求中。\",\"**DELETE 请求：**用于删除指定资源。\",\"**PUT 请求：**用于上传指定资源，或更新指定资源。\",\"**POST 请求：**用于表单提交数据，将数据更新到服务器。\",\"**GET 请求：**用于获取服务器数据。\",\"另外还有一种 patch请求\",\"PATCH请求: 用于部分数据修改\"]},\"47\":{\"h\":\"4.GET和POST有什么区别？\",\"t\":[\"1>传输方式不同：get通过url传递数据，post通过请求体传递\",\"2>安全性不同：post数据在请求体中更加安全，get请求参数通过url能获取到不安全\",\"3>数据类型不同：get只允许ASCII字符，post无限制\",\"4>是否重复提交：get刷新回退是无害了，post可能引入重复提交表单。\",\"5>特性不同: get是安全且幂等（执行一次和多次效果一样），post是非幂等的。\"]},\"48\":{\"h\":\"5.PUT和POST都是给服务器发送新增资源，有什么区别？\",\"t\":[\"post和put都可以新增、更新资源，区别在于特性不同：\",\"put是幂等的，url指向单一资源；\",\"post是非幂等，url指向资源集合。\"]},\"49\":{\"h\":\"6.PUT和PATCH都是给服务器发送修改资源，有什么区别？\",\"t\":[\"PATCH请求，用于对已知资源的部分数据修改，可以修改具体某个字段。\",\"PUT请求，一般是覆盖数据，修改某个字段的话，其他的字段也需要带着。\"]},\"50\":{\"h\":\"7.聊一聊HTTP的状态码有哪些？\"},\"51\":{\"h\":\"\",\"t\":[\"200 OK，表示从客户端发来的请求在服务器端被正确处理\",\"201 Created 请求已经被实现，而且有一个新的资源已经依据请求的需要而建立\",\"202 Accepted 请求已接受，但是还没执行，不保证完成请求\",\"204 No content，表示请求成功，但响应报文不含实体的主体部分\",\"206 Partial Content，进行范围请求\"]},\"52\":{\"h\":\"\",\"t\":[\"301 moved permanently，永久性重定向，表示资源已被分配了新的 URL\",\"302 found，临时性重定向，表示资源临时被分配了新的 URL\",\"303 see other，表示资源存在着另一个 URL，应使用 GET 方法丁香获取资源\",\"304 not modified，表示服务器允许访问资源，但因发生请求未满足条件的情况\",\"307 temporary redirect，临时重定向，和302含义相同\"]},\"53\":{\"h\":\"\",\"t\":[\"400 bad request，请求报文存在语法错误\",\"401 unauthorized，表示发送的请求需要有通过 HTTP 认证的认证信息\",\"403 forbidden，表示对请求资源的访问被服务器拒绝\",\"404 not found，表示在服务器上没有找到请求的资源\",\"408 Request timeout, 客户端请求超时\",\"409 Confict, 请求的资源可能引起冲突\"]},\"54\":{\"h\":\"5XX 服务器错误\",\"t\":[\"500 internal sever error，表示服务器端在执行请求时发生了错误 ✨\",\"501 Not Implemented 请求超出服务器能力范围，例如服务器不支持当前请求所需要的某个功能，或者请求是服务器不支持的某个方法\",\"503 service unavailable，表明服务器暂时处于超负载或正在停机维护，无法处理请求\",\"505 http version not supported 服务器不支持，或者拒绝支持在请求中使用的 HTTP 版本\"]},\"55\":{\"h\":\"8.同样是重定向307，303，302的区别？\",\"t\":[\"302：是http1.0的协议状态码，http1.1版本细化出了303，307。\",\"303：表示客户端应当采用get方法获取资源，他会把POST请求变为GET请求进行重定向。\",\"307：遵照浏览器标准，不会从post变为get。\"]},\"56\":{\"h\":\"9.HTTP的keep-alive是干什么的？\",\"t\":[\"keep-alive是客户端和服务器保持一种长连接状态。在请求头加上：Connection: keep-alive，就可以重用上次的连接。\",\"在http1.0早起阶段，每次http请求都需要创建一个连接，使用之后再关闭连接（HTTP是短连接），创建连接的过程又比较消耗资源和时间。为了节省资源和缩短时间，http1.1就加入了 keep-alive，在请求时告诉服务器不关闭TCP连接，继续用这个连接交互。\",\"keep-alive优点：\",\"较少的CPU和内存的使用\",\"降低拥堵 （TCP连接减少了）\",\"缩短请求时间（无需再进行握手）\"]},\"57\":{\"h\":\"10.为什么有了HTTP为什么还要HTTPS？\",\"t\":[\"数据安全性和完整性：http协议的数据都是明文进行传输的，不安全；HTTPS在HTTP的基础上增加了一层安全层，即SSL（安全套接字层）或TLS（传输层安全性）协议，对传输的数据进行加密。\",\"身份验证：HTTPS通过数字证书和公钥基础设施（PKI）来实现身份验证机制，确保通信双方的身份真实可信。\",\"隐私保护：对于涉及个人隐私和敏感信息的传输，HTTPS能够确保这些信息在传输过程中得到保护，不会被第三方截获。\"]},\"58\":{\"h\":\"11.HTTP缓存的了解\",\"t\":[\"HTTP 缓存分为两种：\",\"强缓存，强制直接使用缓存。不发服务器请求，从缓存读取资源。状态码200。\",\"请求头和响应头都需要配置：Expires（过期时间）、Catch-Control、Pragma 这三个属性。\",\"协商缓存，和服务器协商确认下这个缓存能不能用。先向服务器发送一个请求，请求头命中协商缓存就返回304状态码，从缓存读取数据。\",\"请求头配置：If-None-Match 、If-Modified-Since 这2个属性；响应头配置：Etag 、Last-Modified 这2个属性。\",\"具体细节：\",\"Catch-Control属性可以设置很多属性值：\",\"max-age=315360000 最大周期，超过就过期失效。\",\"public 可以被任何对象缓存 、private只能单用户缓存 、no-cache 不使用缓存\",\"Last-Modified、If-Modified-Since 值都是 GMT 格式的时间字符串，表示文件的最后修改时间。这个时间匹配不上，http1.1就推出了Etag，优先级高于最后修改时间。\",\"Etag 都是服务器为每份资源生成的唯一标识，每个资源都是唯一的。If-None-Match 是上次请求资源的Etag值，如何服务器发现唯一标识不一致，就返回状态码：200，需要更新缓存资源；唯一标识一致，就返回304，从缓存读取。\"]},\"59\":{\"h\":\"12.说一下TCP三次握手，四次挥手\",\"t\":[\"三次握手是指，建一个TCP连接需要客户端和服务器发送3个报文。（客->服->客->服）最终校验ACK=1，就建立连接。\",\"第一次握手，客户端51323端口号向服务器端80号端口发起连接，此时标志位flags=S，即SYN=1标志，表示向服务端发起连接的请求，同时生成序列号seq=84689409\",\"第二次握手，服务端标志位flags=[S.]，即SYN+ACK标志位设置为1，表示对上一个请求连接的报文进行确认，同时设置ack=seq+1=184689410，生成序列号seq=1893430205\",\"第三次握手，客户端对服务端的响应进行确认，所以此时标志位是[.]即ACK=1，同时返回对上一个报文的seq的确认号，ack=1893430206\",\"四次挥手是指断开一个TCP连接，需要发送4个包才能确认连接已经断开。（客->服->客，服->客->服）第2,3次是服务器向客户端发送的包。\",\"第一次挥手： Client端发起挥手请求，向Server端发送标志位是FIN报文段，设置序列号seq，此时，Client端进入FIN_WAIT_1状态，这表示Client端没有数据要发送给Server端了。\",\"第二次分手：Server端收到了Client端发送的FIN报文段，向Client端返回一个标志位是ACK的报文段，ack设为seq加1，Client端进入FIN_WAIT_2状态，Server端告诉Client端，我确认并同意你的关闭请求。\",\"第三次分手： Server端向Client端发送标志位是FIN的报文段，请求关闭连接，同时Client端进入LAST_ACK状态。\",\"第四次分手 ： Client端收到Server端发送的FIN报文段，向Server端发送标志位是ACK的报文段，然后Client端进入TIME_WAIT状态。Server端收到Client端的ACK报文段以后，就关闭连接。此时，Client端等待2MSL的时间后依然没有收到回复，则证明Server端已正常关闭，那好，Client端也可以关闭连接了。\"]},\"60\":{\"h\":\"13.输入一个url，浏览器发生什么？\",\"t\":[\"1>浏览器地址栏输入 URL 并回车\",\"2>浏览器查找当前 URL 是否存在缓存，并比较缓存是否过期\",\"3>DNS 解析 URL 对应的 IP\",\"4>根据 IP 建立 TCP 连接（三次握手）\",\"5>发送 http 请求\",\"6>服务器处理请求，浏览器接受 HTTP 响应\",\"7>浏览器解析并渲染页面\",\"8>关闭 TCP 连接（四次挥手）\"]},\"61\":{\"h\":\"\"},\"62\":{\"h\":\"数据库和数据表创建\"},\"63\":{\"h\":\"数据库操作：\",\"t\":[\"show databases - 显示指定数据库的所有表\",\"create database 数据库名 - 创建数据库\",\"drop database 数据库名 - 删除数据库\",\"use 数据库名 - 切换到指定数据库\"]},\"64\":{\"h\":\"数据表操作：\",\"t\":[\"create table(字段 字段类型) - 创建数据表：\",\"create table user( id INT, name VARCHAR(100), sex INT, age INT, date DATETIME, ) \",\"desc 表名 - 查看表结构都有哪些字段\",\"alter table 使用\",\"alter table 表名 modify colmn 字段 字段类型 - 修改表结构：\",\"ALTER table user MODIFY COLUMN name VARCHAR(200); \",\"alter table 表名 rename colmn 字段名 to 新字段名 - 修改表字段名：\",\"ALTER table user RENAME COLUMN name to nick_name; \",\"alter table 表名 add colmn 字段 字段类型 - 新增字段：\",\"ALTER table user ADD COLUMN level INT; \",\"alter table 表名 drop colmn 字段 - 删除字段\",\"ALTER table user DROP COLUMN level ; \",\"alter table 表名 modify colmn 字段 字段类型 default 值 - 设置默认值：\",\"ALTER table user MODIFY COLUMN level INT DEFAULT 1; \",\"​\"]},\"65\":{\"h\":\"\",\"t\":[\"insert into 表名 （字段1，字段2）values (值1，值2) - 插入一条数据：\",\"INSERT INTO user (id,name) VALUES (1,'zhansan'); \",\"select * from 表名 - 查询数据\",\"select * from user; select id,name,sex from user; \",\"update 表名 set 字段=值 where name=值 - 更新数据\",\"// 使用 where 条件语句 更新 张三的等级为1 UPDATE user set level = 1 where name = 'zhangsan'; // 所有用户的等级改为1 --- 非常危险 UPDATE user set level = 1 ; \",\"delete from 表名 where 字段条件 - 删除指定条数据\",\"delete from user where id = 1; \"]},\"66\":{\"h\":\"\",\"t\":[\"导出到指定文件：\",\"mysqldump -u 用户 -p 表名 > 文件名.sql\",\"// 使用root用户 输入密码 导出user数据表 到user.sql文件中 mysqldump -u root -p user > user.sql \",\"导入指定文件：\",\"mysql -u 用户 -p 表名 < 文件名.sql\",\"mysql -u root -p user < user.sql \"]},\"67\":{\"h\":\"\"},\"68\":{\"h\":\"where 条件语句\",\"t\":[\"select * from user where level = 1; select * from user where level > 1 and sex = 1 ; select * from user where level > 1 and sex = 1 or age > 30 ; \",\"关键字 优先级：not > and > or\",\"可以使用括号改变条件语句的优先级：\",\"select * from user where level > 1 and (sex = 1 or age > 30) ; \"]},\"69\":{\"h\":\"关键字 in 限定指定值类型\",\"t\":[\"// 查找等级 1,3,4的用户 select * from user where level in (1,3,4); \"]},\"70\":{\"h\":\"关键字 between ... and ... 指定范围\",\"t\":[\"// 查询等级 1-4 的用户，包括1和4 select * from user where level BETWEEN 1 and 4; // 等价于 select * from user where level >= 1 and level <= 4; \",\"not可以加到任何一个条件语句中\",\"// 不在 1到4范围内的 select * from user where level NOT BETWEEN 1 and 4; \"]},\"71\":{\"h\":\"关键字 like 模糊查询\",\"t\":[\"// 查询名字带第一个是“王”字的，%代表任意字 select * from user where name LIKE '王%'; // 名字中包含 “王”字的用户 select * from user where name LIKE '%王%'; // _ 一个表示一个任意字：查询名字为2个字姓王的用户 select * from user where name LIKE '王_'; // 查询名字为3个字姓王的用户 select * from user where name LIKE '王__'; \"]},\"72\":{\"h\":\"is null 判断\",\"t\":[\"sql里面的null和任何都不相等，同样也不和自己相等。\",\"// 查询性别为 null的用户 select * from user where sex is null; // 查询性别不为 null的用户 select * from user where sex is not null; \",\"使用等号 查找 字段为空 - 有值空白符，注意sql中 空和\\\"\\\"不一样！\",\"select * from user where sex = \\\"\\\"; \"]},\"73\":{\"h\":\"使用 order by 进行排序\",\"t\":[\"desc 降序排列\",\"asc 升序排列\",\"// 按等级降序排列 select * from user ORDER BY level desc; // 按等级降序排列的基础上，额外的再按 年龄降序排列 select * from user ORDER BY level desc, age; // 按等级降序排列的基础上，额外的再按 年龄升序排列 select * from user ORDER BY level desc, age ASC; \"]},\"74\":{\"h\":\"\",\"t\":[\"limit n 限制查询n条记录\",\"limit n offset m 限制从第m+1条 开始查询n条记录，等效于低版本的 limit m,n\",\"// 从第6条开始，获取3条记录 select * from user limit 3 offset 5; \",\"分页公式：\",\"select * from 表名 limit (currentPage-1)*pageSize,pageSize; select * from 表名 limit pageSize offset (currentPage-1)*pageSize; \"]},\"75\":{\"h\":\"as 别名\",\"t\":[\"字段别名\",\"select id as u_id ,name as u_name from user; \",\"表别名\",\"select * from user as u where u.id = 10; \"]},\"76\":{\"h\":\"聚合函数\",\"t\":[\"AVG() 返回集合平均值\",\"COUNT() 返回集合数量\",\"MAX() 返回最大值\",\"MIN() 返回最小值\",\"SUM 求和\",\"// 统计用户数量 select coun(*) from user ; // 求等级的平均值 select AVG(level) from user ; \",\"分组 group by\",\"// 通过分组，统计性别分别对应的数量 SELECT sex, COUNT(*) FROM user GROUP BY sex; \",\"分组过滤 having\",\"// 分组统计不同级别的数量，仅显示统计数量大于4的 SELECT level, COUNT(level) FROM user GROUP BY level having COUNT(level) > 4; \",\"去重 distinct\",\"SELECT DISTINCT sex FROM use; \",\"并集查询 union\",\"// 等级在1~4 和 性别不为null 的并集 select * from user where level BETWEEN 1 and 4 UNION select * from user where sex is not null; \",\"union 默认会去重：2个条件都满足会合并成一条。如需不去重，使用 union all 。\",\"交集查询 intersect\",\"// 等级在1~4 且 性别不为null 的交集 select * from user where level BETWEEN 1 and 4 INTERSECT select * from user where sex is not null; \",\"差集查询 except\",\"// 等级在1~4 且 性别不为0 的差集 select * from user where level BETWEEN 1 and 4 EXCEPT select * from user where sex ='0'; \"]},\"77\":{\"h\":\"子查询\",\"t\":[\"一个查询的结果是另一个查询的条件，这个时候就用到子查询。\",\"// 求平均等级 select AVG(level) from user; // 查询 大于平均等级的数据 select * from user where level > (select AVG(level) from user); // 新建一个表，数据为查询小于5的数据 create table new_user select * from user where level < 5 // 将大于6的数据插入到新表中 insert into new_user select * from user where level > 6 \",\"exists 查询结构判断，返回查询结果的数量\",\"// 查询等级大于100的数据是否存在，返回0，不存在 select exists (select * from user where level > 100) \"]},\"78\":{\"h\":\"表关联\",\"t\":[\"一个表的主键是另一个表的外键，这样就可以把2个不同表关联起来。\",\"内连接：inner join 返回2个表都有的数据\",\"select * from user inner join article on user.id = artical.uid \",\"左连接：left join 返回左表所有记录，即便右表没有记录使用null填充\",\"select * from user left join article on user.id = artical.uid \",\"右连接：right join 返回右表所有记录，即便左表没有记录使用null填充\",\"select * from user right join article on user.id = artical.uid \"]},\"79\":{\"h\":\"索引\",\"t\":[\"索引可以大大提高MySQL的检索速度，提高运行效率。\",\"为某个字段 创建索引\",\"// 为user的name字段添加索引 CREATE INDEX indexName ON user(name); \",\"通过修改表结构添加索引\",\"alter table user add index indexName(name) \",\"删除索引\",\"DROP INDEX indexName ON user; \"]},\"80\":{\"h\":\"视图\",\"t\":[\"视图是虚拟存在的数据表。会根据查询语句保存在数据字段中，会根据表数据的修改而修改。\",\"创建视图\",\"// 创建一个视图：存放user表等级前10的用户 creat view top10 as select * from user order by level desc limit 10 \"]},\"81\":{\"h\":\"\"},\"82\":{\"h\":\"Mysql基础知识\"},\"83\":{\"h\":\"1.数据类型\",\"t\":[\"Mysql 数据类型大致分三类：数值、日期/时间 和字符类型\",\"**数值类型：**严格数值类型（INTEGER、SMALLINT、DECIMAL 和 NUMERIC ）；近似数值数据类型( FLOAT、REAL 和 DOUBLE PRECISION ）\",\"类型\",\"大小\",\"范围（有符号）\",\"范围（无符号）\",\"用途\",\"TINYINT\",\"1 字节\",\"(-128，127)\",\"(0，255)\",\"小整数值\",\"SMALLINT\",\"2 字节\",\"(-32 768，32 767)\",\"(0，65 535)\",\"大整数值\",\"MEDIUMINT\",\"3 字节\",\"(-8 388 608，8 388 607)\",\"(0，16 777 215)\",\"大整数值\",\"INT或INTEGER\",\"4 字节\",\"(-2 147 483 648，2 147 483 647)\",\"(0，4 294 967 295)\",\"大整数值\",\"BIGINT\",\"8 字节\",\"(-9 233 372 036 854 775 808，9 223 372 036 854 775 807)\",\"(0，18 446 744 073 709 551 615)\",\"极大整数值\",\"FLOAT\",\"4 字节\",\"(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)\",\"0，(1.175 494 351 E-38，3.402 823 466 E+38)\",\"单精度 浮点数值\",\"DOUBLE\",\"8 字节\",\"(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)\",\"0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)\",\"双精度 浮点数值\",\"DECIMAL\",\"对DECIMAL(M,D) ，如果M>D，为M+2否则为D+2\",\"依赖于M和D的值\",\"依赖于M和D的值\",\"小数值\",\"**日期类型：**DATETIME、DATE、TIMESTAMP、TIME 和 YEAR\",\"类型\",\"大小 (字节)\",\"范围\",\"格式\",\"用途\",\"DATE\",\"3\",\"1000-01-01/9999-12-31\",\"YYYY-MM-DD\",\"日期值\",\"TIME\",\"3\",\"'-838:59:59'/'838:59:59'\",\"HH:MM:SS\",\"时间值或持续时间\",\"YEAR\",\"1\",\"1901/2155\",\"YYYY\",\"年份值\",\"DATETIME\",\"8\",\"1000-01-01 00:00:00/9999-12-31 23:59:59\",\"YYYY-MM-DD HH:MM:SS\",\"混合日期和时间值\",\"TIMESTAMP\",\"4\",\"1970-01-01 00:00:00/2038 结束时间是第 2147483647 秒，北京时间 2038-1-19 11:14:07，格林尼治时间 2038-1-19 03:14:07\",\"YYYYMMDD HHMMSS\",\"混合日期\",\"**字符类型：**CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM 和 SET\",\"类型\",\"大小\",\"用途\",\"CHAR\",\"0-255字节\",\"定长字符串\",\"VARCHAR\",\"0-65535 字节\",\"变长字符串\",\"TINYBLOB\",\"0-255字节\",\"不超过 255 个字符的二进制字符串\",\"TINYTEXT\",\"0-255字节\",\"短文本字符串\",\"BLOB\",\"0-65 535字节\",\"二进制形式的长文本数据\",\"TEXT\",\"0-65 535字节\",\"长文本数据\",\"MEDIUMBLOB\",\"0-16 777 215字节\",\"二进制形式的中等长度文本数据\",\"MEDIUMTEXT\",\"0-16 777 215字节\",\"中等长度文本数据\",\"LONGBLOB\",\"0-4 294 967 295字节\",\"二进制形式的极大文本数据\",\"LONGTEXT\",\"0-4 294 967 295字节\",\"极大文本数据\",\"类型总结：\",\"int 整型 - java的int\",\"bigint 整型- java的long\",\"float 浮点型\",\"double 浮点型\",\"datetime 日期类型\",\"timestamp 日期类型,可存时间戳\",\"char 定长字符，不足会补空格\",\"varchar 不定长字符\",\"text 大文本\",\"blob  存储图片，音频等文件类型\"]},\"84\":{\"h\":\"\"},\"85\":{\"h\":\"Ajax 请求\"},\"86\":{\"h\":\"1.什么是Ajax ?\",\"t\":[\"就是使用 XMLHttpRequest 对象与服务器通信。\"]},\"87\":{\"h\":\"2.Ajax优缺点\",\"t\":[\"优点：\",\"页面无需刷新与服务端进行通信\",\"可以实现局部刷新功能\",\"缺点：\",\"存在跨域问题\",\"对SEO不友好\"]},\"88\":{\"h\":\"3.实现XHR请求数据的步骤\",\"t\":[\"创建 XMLHttpRequest 对象\",\"通过 XMLHttpRequest 对象的 open() 方法与服务端建立连接\",\"构建请求所需的数据内容，并通过 XMLHttpRequest 对象的 send() 方法发送给服务器端\",\"通过 XMLHttpRequest 对象提供的 readystatechange、loadend 事件监听服务器端的通信状态\",\"接受并处理服务端向客户端响应的数据结果\",\"将处理结果更新到 HTML页面中\",\"var xhr = new XMLHttpRequest(); xhr.open(\\\"GET\\\", \\\"http://example.com/data.json\\\"); xhr.send(); xhr.onreadystatechange = function() { if(xhr.readyState == 4 ) { if(xhr.status >= 200 && xhr.status < 300){ var data = JSON.parse(xhr.responseText); } } } \"]},\"89\":{\"h\":\"XHR Open方法\",\"t\":[\"xhr.open(method, url, [async][, user][, password]) \",\"method请求方法\",\"GET\",\"获取数据\",\"POST\",\"数据提交\",\"PUT\",\"修改数据(全部)\",\"DELETE\",\"删除数据\",\"PATCH\",\"修改数据(部分)\"]},\"90\":{\"h\":\"onreadystatechange 状态\",\"t\":[\"0：请求未初始化\",\"1：服务器连接已建立\",\"2：请求已接收\",\"3：请求处理中\",\"4：请求已完成，且响应已就绪\"]},\"91\":{\"h\":\"setRequestHeader 设置请求类型\",\"t\":[\"xhr.open(\\\"POST\\\",\\\"/ajax/demo.php\\\",true) xhr.setRequestHeader(\\\"Content-type\\\",\\\"application/x-www-form-urlencoded\\\") xhr.send() \"]},\"92\":{\"h\":\"Content-Type 类型\",\"t\":[\"application/json：用于传输 JSON 格式的数据\",\"application/xml：用于传输 XML 格式的数据\",\"text/plain：纯文本格式，通常用于普通文本文件\",\"text/html：用于传输 HTML 格式的数据\",\"image/jpeg, image/png, image/gif：用于传输图像数据\",\"multipart/form-data：通常用于上传文件，表单数据会被编码成一系列的部分\",\"application/x-www-form-urlencoded：通常用于发送表单数据，数据会被编码为键值对的形式（表单默认的提交数据的格式）\"]},\"93\":{\"h\":\"取消请求\",\"t\":[\"xhr.abort() \"]},\"94\":{\"h\":\"数组原型方法学习\",\"t\":[\"之前总是使用数组的一些常用的方法，例如：push,slice,shift，unshift,pop...，根本没去观察数组原型上自带的方法都有哪些，今天无意中打印了一个空Array数组，发现其原型Array下面有将近35个方法和一个length属性。\"]},\"95\":{\"h\":\"arr.at()\",\"t\":[\"定义：获取访问指定索引的元素值，可以接受负数，从尾部开始索引。\",\"let arr = [\\\"1\\\",3,\\\"4\\\",\\\"苹果\\\"] console.log(arr.at(2)); //4 console.log(arr.at(-2)); //4 \",\"at()方法虽然新颖，但是很多人会问，这不是和属性访问器 arr[2] 效果一样嘛？为什么还新增一个方法？ 答案是肯定的，属性访问方法不接收负值，当我们需要从尾部获取时，就很不方便了，at()方法恰好解决了这样的问题。\"]},\"96\":{\"h\":\"arr.cancat(arr1,arr2,arr3)\",\"t\":[\"定义：连接多个数组，返回一个组合后的数组。\",\"let arr1 = [1]; let arr2 = [1,3,4,\\\"a\\\"]; let arr3 = arr1.concat(arr2);//[1, 1, 3, 4, 'a'] \",\"这样我们就实现数组拼接组合，当然若拼接的第一个数组是[]空数组，就实现了一个数组拷贝，这也是数组拷贝的一个方法，而且是深拷贝哦。\"]},\"97\":{\"h\":\"arr.constructor()\",\"t\":[\"定义：属性返回对创建此对象的数组函数的引用。\",\"let arr = [1,2]; let res = arr.constructor();// [] \",\"注意，这里的constructor()是数组的引用，并不是指向构造函数constructor，一个带括号一个不带。 所有数组的constructor()引用值都是 \\\"[]\\\"。\"]},\"98\":{\"h\":\"arr.copyWithin(target,start,end)\",\"t\":[\"定义：用于从数组的指定位置拷贝元素到数组的另一个指定位置中。\",\"let arr = [1,2,3,4,5,6,7,8]; let res = arr.copyWithin(2,0);// [1, 2, 1, 2, 3, 4, 5, 6] let res = arr.copyWithin(2,0,2);// [1, 2, 1, 2, 5, 6, 7, 8] \",\"注意：copyWithin会导致原数组变化，返回被改变后的数组，而不是新数组。 理解这个方法也简单，target参数时插入指定位置，start是拷贝开始位置，end是拷贝截止，不设置end就从start到默认最后。\"]},\"99\":{\"h\":\"arr.entries()\",\"t\":[\"定义：返回一个数组的迭代对象，该对象包含数组的键值对 (key/value)，通过next().value 方法获取迭代的键值对。\",\"let arr = [\\\"1\\\",\\\"2\\\",\\\"3\\\",\\\"4\\\",\\\"5\\\",\\\"6\\\",\\\"7\\\",\\\"8\\\"]; let res = arr.entries(); // Array Iterator {} console.log(res.next().value);//[0, '1'] console.log(res.next().value);//[0, '2'] console.log(res.next().value);//[0, '3'] \"]},\"100\":{\"h\":\"arr.every()\",\"t\":[\"定义：用于检测数组所有元素是否都符合指定条件，返回布尔值。\",\"let arr = [\\\"1\\\",\\\"2\\\",\\\"3\\\",\\\"4\\\",\\\"5\\\",\\\"6\\\",\\\"7\\\",\\\"8\\\"]; let res = arr.every(item =>{ return Number(item) > 0 }); // true \"]},\"101\":{\"h\":\"arr.fill(val,start,end)\",\"t\":[\"定义：用于使用固定值填充数组。\",\"let arr = [\\\"1\\\",\\\"2\\\",\\\"3\\\",\\\"4\\\",\\\"5\\\",\\\"6\\\",\\\"7\\\",\\\"8\\\"]; let res = arr.fill(0,2);//['1', '2', 0, 0, 0, 0, 0, 0] let res = arr.fill(0,2,6); //['1', '2', 0, 0, 0, 0, '7', '8'] \",\"注意：end默认是到最后位置，省略之后就填充到最后。\"]},\"102\":{\"h\":\"arr.filter()\",\"t\":[\"定义：返回数组中符合条件的元素。\",\"let arr = [\\\"1\\\",\\\"2\\\",\\\"3\\\",\\\"4\\\",\\\"5\\\",\\\"6\\\",\\\"7\\\",\\\"8\\\"]; let res = arr.filter(item =>{ return Number(item) > 6 }); // ['7', '8'] \"]},\"103\":{\"h\":\"arr.find()\",\"t\":[\"定义：返回数组中满足条件的第一个元素，如果没有符合条件的元素返回 undefined\",\"let arr = [\\\"1\\\",\\\"2\\\",\\\"3\\\",\\\"4\\\",\\\"5\\\",\\\"6\\\",\\\"7\\\",\\\"8\\\"]; let res = arr.find(item =>{ return Number(item) > 6 }); // 7 \",\"注意：不是返回所有满足元素，二是第一个，后面可能还有第二个...\"]},\"104\":{\"h\":\"arr.findIndex()\",\"t\":[\"定义：返回数组中满足条件的第一个元素索引值，如果没有符合条件的元素返回 -1\",\"let arr = [\\\"1\\\",\\\"2\\\",\\\"3\\\",\\\"4\\\",\\\"5\\\",\\\"6\\\",\\\"7\\\",\\\"8\\\"]; let res = arr.findIndex(item =>{ return Number(item) > 6 }); // 6 \"]},\"105\":{\"h\":\"arr.flat(number)\",\"t\":[\"定义：所有元素与遍历到的子数组中的元素合并为一个新数组返回。俗称，拍扁数组。 number是深度，默认是1，也就是二维数组。任意深度用Infinity\",\"let arr = [1, 2, [3, 4]]; arr.flat();//[1, 2, 3, 4] let arr1 = [1, 2, [3, 4, [5, 6]]]; arr1.flat(Infinity);//[1, 2, 3, 4, 5, 6] \",\"注意，flat()默认只能拍扁二维数组，更深的就会拍扁失败。就需要改变number的值。\"]},\"106\":{\"h\":\"arr.flatMap()\",\"t\":[\"定义：映射每个元素，然后将结果压缩成一个新数组。有点类似map，对比如下：\",\"let arr = [1,3,5,7] let res =arr.map(x => [x * 2]); console.log(res);//[[2],[6],[10],[14]] let res1 =arr.flatMap(x => [x * 2]) console.log(res1);//[2, 6, 10, 14] \"]},\"107\":{\"h\":\"arr.forEach()\",\"t\":[\"定义：遍历循环数组每一项，然后执行回调。\",\"let arr = [\\\"1\\\",\\\"2\\\",\\\"3\\\",\\\"4\\\",\\\"5\\\",\\\"6\\\",\\\"7\\\",\\\"8\\\"]; arr.forEach(function (item,index){ arr[index] = item * 2 }); // [2, 4, 6, 8, 10, 12, 14, 16] \",\"注意：forEach没有返回值，不能用表达式方式，表达式会得到undefined\"]},\"108\":{\"h\":\"arr.from()\",\"t\":[\"定义：用于通过拥有 length 属性的对象或可迭代的对象来返回一个数组。\",\"let arr = Array.from(\\\"study\\\");//['s', 't', 'u', 'd', 'y'] let arr1 = Array.from(new Set([1,2,4]));//[1,2,4] \",\"注意：必须是带length属性的对象，使用之前可以判断length是否存在。\"]},\"109\":{\"h\":\"arr.includes()\",\"t\":[\"定义：用来判断一个数组是否包含一个指定的值，返回布尔值。\",\"let arr = [1,2,5,\\\"a\\\"]; console.log(arr.includes(5)); //true \",\"可以用来优化if多条件判断语句，避免多个||或语句判断。\"]},\"110\":{\"h\":\"arr.indexOf()\",\"t\":[\"定义：返回数组中某个指定的元素位置。不存在返回 -1\",\"let arr = [1,2,5,\\\"a\\\"]; console.log(arr.indexOf(5)); // 2 \",\"可以用来判断是否包含一个元素\"]},\"111\":{\"h\":\"arr.isArray()\",\"t\":[\"定义：判断是否是数组，返回布尔值。\",\"let arr = [1,2,5,\\\"a\\\"]; console.log(Array.isArray(arr)); // true \"]},\"112\":{\"h\":\"arr.join(separator)\",\"t\":[\"定义：用于把数组中的所有元素转换一个字符串。separator是分隔符，可为空。\",\"let arr = [\\\"Banana\\\", \\\"Orange\\\", \\\"Apple\\\", \\\"Mango\\\"]; let res = arr.join(\\\"|\\\"); // Banana|Orange|Apple|Mango \"]},\"113\":{\"h\":\"arr.keys()\",\"t\":[\"定义：创建一个数组迭代对象， 该对象包含了数组的键。\",\"let arr = [\\\"Banana\\\", \\\"Orange\\\", \\\"Apple\\\", \\\"Mango\\\"]; let res = arr.keys(); // Array Iterator console.log(res.next().value); // 0 console.log(res.next().value); // 1 console.log(res.next().value); // 2 \"]},\"114\":{\"h\":\"arr.lastIndexOf()\",\"t\":[\"定义：返回一个指定的元素在数组中最后出现的位置。没有找到返回 -1\",\"let arr = [1,2,5,\\\"a\\\"]; console.log(arr.lastIndexOf(5)); // 1 \"]},\"115\":{\"h\":\"arr.map()\",\"t\":[\"定义：返回一个每一项被处理过的新数组。\",\"let arr = [\\\"Banana\\\", \\\"Orange\\\", \\\"Apple\\\", \\\"Mango\\\"]; let res = arr.map((item,index)=>{ return item+\\\"_\\\"+index; });// ['Banana_0', 'Orange_1', 'Apple_2', 'Mango_3'] \"]},\"116\":{\"h\":\"arr.pop()\",\"t\":[\"定义：删除数组最后一项，并返回这个元素。\",\"let arr = [\\\"Banana\\\", \\\"Orange\\\", \\\"Apple\\\", \\\"Mango\\\"]; let res = arr.pop(); console.log(arr);//['Banana', 'Orange', 'Apple'] console.log(res);//Mango \",\"注意，原数组已经被改变！！！返回的结果是删除的部分。\"]},\"117\":{\"h\":\"arr.push()\",\"t\":[\"定义：向数组的末尾添加一个或多个元素，并返回新的长度。\",\"let arr = [\\\"Banana\\\", \\\"Orange\\\", \\\"Apple\\\", \\\"Mango\\\"]; let res = arr.push(\\\"橘子\\\",\\\"柚子\\\"); console.log(arr);//['Banana', 'Orange', 'Apple', 'Mango', '橘子', '柚子'] console.log(res);//6 \"]},\"118\":{\"h\":\"arr.reduce(function(total, currentValue, currentIndex, arr), initialValue)\",\"t\":[\"定义：接收一个函数作为累加器，数组中的每个值（从左到右）开始缩减，最终计算为一个值。\",\"回调函数参数：total——累计值 currentValue-当前元素 currentIndex-当前元素的索引 arr—— 当前数组 initialValue——total的初始值\",\"let arr = [1,2,3,4,5]; let res = arr.reduce((total,item)=>{ return total+item; }); // 15 let res1 = arr.reduce((total,item)=>{ return total+item; },10); // 25 \",\"reduce()多用于数组求和，求乘积。\"]},\"119\":{\"h\":\"arr.reduceRight(function(total, currentValue, currentIndex, arr), initialValue)\",\"t\":[\"定义：和 reduce() 功能是一样的，不同的是 reduceRight() 从数组的末尾向前将数组中的数组项做累加。\",\"回调函数参数：total——累计值 currentValue-当前元素 currentIndex-当前元素的索引 arr—— 当前数组 initialValue——total的初始值\",\"let arr = [1,2,3,4,5]; let res = arr.reduceRight((total,item)=>{ return total-item; }); // -5 let res1 = arr.reduceRight((total,item)=>{ return total-item; },100); // 85 \"]},\"120\":{\"h\":\"arr.reverse()\",\"t\":[\"定义：颠倒数组中元素的顺序。\",\"let arr = [1,2,3,4,5]; let res = arr.reverse(); //[5, 4, 3, 2, 1] \"]},\"121\":{\"h\":\"arr.shift()\",\"t\":[\"定义：删除数组的第一个元素，并返回这个元素。\",\"let arr = [\\\"Banana\\\", \\\"Orange\\\", \\\"Apple\\\", \\\"Mango\\\"]; let res = arr.shift(); console.log(arr);//['Orange', 'Apple', 'Mango'] console.log(res);//Banana \"]},\"122\":{\"h\":\"arr.slice(start,end)\",\"t\":[\"定义：截取数组中的一部分，并返回这部分，不改变原数组。\",\"let arr = [\\\"Banana\\\", \\\"Orange\\\", \\\"Apple\\\", \\\"Mango\\\"]; let res = arr.slice(1,3);//['Orange', 'Apple'] let res = arr.slice(-2);;//['Apple', 'Mango'] \"]},\"123\":{\"h\":\"arr.some()\",\"t\":[\"定义：判断数组中是否有满足条件的任意一项。返回布尔值，有一个满足就返回true。\",\"let arr = [1,2,3,4,5]; let res = arr.some(item =>{ return item >=5 });//true \"]},\"124\":{\"h\":\"arr.sort()\",\"t\":[\"定义：用于对数组的元素进行排序。\",\"let arr = [1,2,11,20,3,4,5]; let res = arr.sort((a,b) =>{ return a-b;//升序 });//[1, 2, 3, 4, 5, 11, 20] let res1 = arr.sort((a,b) =>{ return b-a;//降序 });//[20, 11, 5, 4, 3, 2, 1] \"]},\"125\":{\"h\":\"arr.splice(index,number,item1,item2)\",\"t\":[\"定义：用于添加或删除数组中的元素。删除时候并返回删除的内容。 参数：index - 添加删除位置 number - 删除数量 item —— 添加的元素\",\"let arr = [1,2,3,4,5,6,7,8]; //删除 let res = arr.splice(2,6); console.log(arr);// [1, 2] console.log(res);// [3, 4, 5, 6, 7, 8] //删除并新增 let res = arr.splice(2,1,30,100); console.log(arr);// [1, 2, 30, 100, 4, 5, 6, 7, 8] console.log(res);//[3] \"]},\"126\":{\"h\":\"arr.toString()\",\"t\":[\"定义：数组转字符串，以\\\",\\\"分割。\",\"let arr = [1,2,3,4,5,6,7,8]; let res = arr.toString(); console.log(res);//1,2,3,4,5,6,7,8 \"]},\"127\":{\"h\":\"arr.unshift()\",\"t\":[\"定义：向数组的开头添加一个或更多元素，并返回新的长度。\",\"let arr = [\\\"Banana\\\", \\\"Orange\\\", \\\"Apple\\\", \\\"Mango\\\"]; let res = arr.unshift(\\\"Lemon\\\",\\\"Pineapple\\\"); console.log(arr);// ['Lemon', 'Pineapple', 'Banana', 'Orange', 'Apple', 'Mango'] console.log(res);// 6 \"]},\"128\":{\"h\":\"arr.values()\",\"t\":[\"定义：用于从数组创建一个包含数组值的可迭代对象。和keys一样，不过是以value值组成的数组。\",\"let arr = [\\\"Banana\\\", \\\"Orange\\\", \\\"Apple\\\", \\\"Mango\\\"]; let res = arr.values();// Array Iterator console.log(res.next().value);// Banana console.log(res.next().value);// Orange console.log(res.next().value);// Apple \"]},\"129\":{\"h\":\"arr.length\",\"t\":[\"定义：数组的长度，空数组length为0。\",\"以上就是数组的全部方法了，目前截止到ES6，扩展到了35个方法，死记硬背也不好弄，关键还是理解，这些方法比较灵活。 例如：\",\"转字符串：toString 或 join\",\"获取数组：at 或 属性访问器\",\"添加删除数组：pop,push,slice,shift,unshift,splice\",\"拷贝数组：concat,copyWithin\",\"遍历数组：some,map,filter,reduce,reduceRight,every,forEach\",\"排序倒序：sort,reverse\",\"查找元素：find,indexOf,includes,lastIndexOf,findIndex\",\"可迭代：keys,values,entries\",\"其他方法：fill,flat,flatMap,from,isArray\",\"好了，继续复习吧！希望大家都不要依靠框架，还是以基础为主，前端目前都开始卷框架了，已经偏离了方向。吾日三省吾身，不进则退！—— 陈小知\"]},\"130\":{\"h\":\"\"},\"131\":{\"h\":\"Canvas基础知识\",\"t\":[\"Canvas，是html5新增的一个标签。用于展示通过 JS在这个标签上绘制各种图案。\"]},\"132\":{\"h\":\"一.canvas和svg的区别\",\"t\":[\"语言不通，canvas是通过js绘制的2D图像，svg使用xml描述2D图形；\",\"svg是矢量图形，不依赖分辨率，不适合做游戏等大型渲染的程序；Canvas依赖分辨率，用于开发图形秘籍类的游戏。\"]},\"133\":{\"h\":\"二.canvas使用\",\"t\":[\"在html中添加canvas标签:\",\"<canvas id=\\\"cas\\\" width=\\\"300\\\" height=\\\"300\\\" > 你的浏览器不支持canvas </canvas> \",\"在js中创建canvas画布进行绘制。\",\"var cv = document.getElementById(\\\"cas\\\");//获取canvas画布渲染盒子 if(!cv.getContext) return;//检测是否支持画布 var ctx = cv.getContext(\\\"2d\\\");//创建二维画布 \"]},\"134\":{\"h\":\"1.画矩形 fillRect\",\"t\":[\"fillStyle 填充颜色样式\",\"fillRect 绘制矩形\",\"strockRect 绘制描边矩形\",\"clearRect 清除矩形区域的内容\",\"function draw(){//简单的canvas绘制矩形的方法 var cv = document.getElementById(\\\"cas\\\");//获取canvas画布渲染盒子 if(!cv.getContext) return;//检测是否支持画布 var ctx = cv.getContext(\\\"2d\\\");//创建二维画布 ctx.fillStyle = \\\"#000000\\\";//绘制样式 ctx.fillRect(10,10,10,10);//绘制形状，填充矩形fillRect(x轴位置,y轴位置,宽度,高度); //描边矩形strockRect(x, y, width, height)； //清除矩形区域clearRect(x, y, widh, height) } draw(); \"]},\"135\":{\"h\":\"2.画直线\",\"t\":[\"画直线步骤：开始创建路径beginPath => 移动到起点moveTo => 绘制终点lineTo => 绘制线宽lineWidth => 结束路径closePath => 路径描边stroke。\",\"function draw(){//绘制线段 var cv = document.getElementById(\\\"cas\\\");//获取canvas画布渲染盒子 if(!cv.getContext) return;//检测是否支持画布 var ctx = cv.getContext(\\\"2d\\\");//创建二维画布 ctx.beginPath();//绘制路径开始 ctx.moveTo(0,0);//绘制路径起点 ctx.lineTo(300,150);//绘制路径的结束点 ctx.lineWidth= 5;//线宽，默认是1.0 ctx.closePath();//闭合路径 ctx.stroke();//绘制线段,默认为黑色 } draw(); \"]},\"136\":{\"h\":\"3.画三角形\",\"t\":[\"绘制三角形方法和绘制直线一样，需要通过路径创建形状，然后填充颜色或者描边。\",\"function draw(){//填充三角形 var cv = document.getElementById(\\\"cas\\\");//获取canvas画布渲染盒子 if(!cv.getContext) return;//检测是否支持画布 var ctx = cv.getContext(\\\"2d\\\");//创建二维画布 ctx.beginPath();//绘制路径开始 ctx.moveTo(10,10);//绘制第一个顶点 ctx.lineTo(50,150);//绘制第二个顶点 ctx.lineTo(150,80);//绘制第三个顶点 ctx.closePath();//闭合路径 ctx.fill();//绘制线段,默认为黑色 // 也可以使用stroke绘制描边三角形 ctx.stroke();//绘制线段,默认为黑色 } draw(); \"]},\"137\":{\"h\":\"4.画圆形\",\"t\":[\"通过 arc 方法绘制闭合路径：\",\"arc(x, y, r, startAngle, endAngle, anticlockwise):\",\"以(x, y)为圆心，以r为半径，从 startAngle弧度开始到endAngle弧度结束。anticlosewise是布尔值，true表示逆时针，false表示顺时针。(默认是顺时针)\",\"function draw(){//简单的canvas绘制矩形的方法 var cv = document.getElementById(\\\"cas\\\");//获取canvas画布渲染盒子 if(!cv.getContext) return;//检测是否支持画布 var ctx = cv.getContext(\\\"2d\\\");//创建二维画布 ctx.beginPath(); ctx.arc(150,150,50,0,2*Math.PI); ctx.fillStyle= \\\"red\\\"; ctx.fill();//填充 } draw(); \"]},\"138\":{\"h\":\"5.画弧线\",\"t\":[\"绘制弧线有2个方法，一种是arc方法，另外一种是使用arcTo方法实现。\",\"arcTo(x,y,m,n,r)\",\"以控制点1（x,y) 和控制点2（m,n) r是弧线半径。\",\"function draw(){//填充圆弧 var cv = document.getElementById(\\\"cas\\\");//获取canvas画布渲染盒子 if(!cv.getContext) return;//检测是否支持画布 var ctx = cv.getContext(\\\"2d\\\");//创建二维画布 ctx.beginPath();//绘制路径开始 ctx.arc(50, 50, 40, 0, 2*Math.PI , false); ctx.arcTo(50,50,5,100,100); ctx.stroke();//绘制线段,默认为黑色 } draw(); \"]},\"139\":{\"h\":\"6.贝塞尔曲线\",\"t\":[\"quadraticCurveTo 绘制贝塞尔一次二次曲线\",\"bezierCurveTo 绘制贝塞尔三次曲线\",\"无论绘制贝塞尔任何曲线，都需要先移动到起点位置，再创建控制点。如果没有起点，quadraticCurveTo 绘制成直线。\",\"绘制步骤：beginPath =>moveTo => quadraticCurveTo =>stroke\",\"function draw(){//贝塞尔一次，二次曲线quadraticCurveTo var cv = document.getElementById(\\\"cas\\\");//获取canvas画布渲染盒子 if(!cv.getContext) return;//检测是否支持画布 var ctx = cv.getContext(\\\"2d\\\");//创建二维画布 ctx.beginPath();//绘制路径开始 ctx.moveTo(10,10);//绘制第一个顶点，没有起点，贝塞尔曲线是一次直线 ctx.quadraticCurveTo(50, 20, 10, 60);//贝塞尔曲线 ctx.stroke();//绘制线段,默认为黑色 } draw(); \",\"function draw(){//贝塞尔三次次曲线bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)： var cv = document.getElementById(\\\"cas\\\");//获取canvas画布渲染盒子 if(!cv.getContext) return;//检测是否支持画布 var ctx = cv.getContext(\\\"2d\\\");//创建二维画布 ctx.beginPath();//绘制路径开始 ctx.moveTo(10,10);//绘制第一个顶点，可以4个点控制 var cp1x = 5,cp1y= 8;//控制点1 var cp2x = 50,cp2y= 46;//控制点2 var x = 180,y= 46;//控制点2 ctx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);//至少三个点 ctx.stroke();//绘制线段,默认为黑色 } draw(); \"]},\"140\":{\"h\":\"7.虚线\",\"t\":[\"canvas 通过 setLineDash 设置 实线长度和间隔 和lineDashOffset设置偏移量，最后使用描边绘制形状。就得到了对应虚线的形状了。\",\"function draw(){//虚线 var cv = document.getElementById(\\\"cas\\\");//获取canvas画布渲染盒子 if(!cv.getContext) return;//检测是否支持画布 var ctx = cv.getContext(\\\"2d\\\");//创建二维画布 ctx.setLineDash([20, 5]); // [实线长度, 间隙长度] ctx.lineDashOffset = -10;//lineDashOffset属性设置起始偏移量 ctx.strokeRect(50, 50, 210, 210); } draw(); \"]},\"141\":{\"h\":\"8.画文字\",\"t\":[\"canvas使用 fillText绘制文字。\",\"fillText(text, x, y [, maxWidth])\",\"在指定的(x,y)位置填充指定的文本，绘制的最大宽度是可选的.\",\"strokeText(text, x, y [, maxWidth])\",\"在指定的(x,y)位置绘制描边文字，绘制的最大宽度是可选的\",\"文字样式可选属性：\",\"font 文字大小和样式\",\"textAlign 对齐方式:center,left,right。\",\"textBaseline 基线对齐方式：top, hanging, middle, alphabetic, ideographic, bottom。\",\"direction 文本方向：ltr, rtl, inherit。默认值是 inherit。\",\"function draw(){//虚线 var cv = document.getElementById(\\\"cas\\\");//获取canvas画布渲染盒子 if(!cv.getContext) return;//检测是否支持画布 var ctx = cv.getContext(\\\"2d\\\");//创建二维画布 ctx.font = \\\"20px sans-serif\\\"; // 文字样式 ctx.textAlign = \\\"center\\\"; // 对齐方式 ctx.fillText(\\\"天若有情\\\", 10, 100);// } draw(); \"]},\"142\":{\"h\":\"9.移动 translate\",\"t\":[\"translate坐标原点移动\",\"function draw(){/ var cv = document.getElementById(\\\"cas\\\");//获取canvas画布渲染盒子 if(!cv.getContext) return;//检测是否支持画布 var ctx = cv.getContext(\\\"2d\\\");//创建二维画布 ctx.save(); //保存坐原点平移之前的状态 ctx.translate(100, 100); ctx.strokeRect(0, 0, 100, 100) ctx.restore(); //恢复到最初状态 ctx.translate(220, 220); ctx.fillRect(0, 0, 100, 100) } draw(); \"]},\"143\":{\"h\":\"10.旋转 rotate\",\"t\":[\"使用 rotate 旋转坐标轴旋转的角度(angle)，它是顺时针方向的，以弧度为单位的值。旋转的中心是坐标原点。\",\"function draw(){ var cv = document.getElementById(\\\"cas\\\");//获取canvas画布渲染盒子 if(!cv.getContext) return;//检测是否支持画布 var ctx = cv.getContext(\\\"2d\\\");//创建二维画布 ctx.fillStyle = \\\"red\\\"; ctx.fillRect(0, 0, 50, 50) ctx.save(); ctx.translate(100, 100); ctx.rotate(Math.PI / 180 * 45); ctx.fillStyle = \\\"blue\\\"; ctx.fillRect(0, 0, 100, 100); ctx.restore(); ctx.save(); ctx.translate(0, 0); ctx.restore(); } draw(); \"]},\"144\":{\"h\":\"11.变形 transform\",\"t\":[\"transform变形矩阵\",\"function draw(){ var cv = document.getElementById(\\\"tou\\\");//获取canvas画布渲染盒子 if(!cv.getContext) return;//检测是否支持画布 var ctx = cv.getContext(\\\"2d\\\");//创建二维画布 ctx.transform(1, 1, 0, 1, 0, 0); ctx.fillRect(0, 0, 100, 100); } draw(); \"]},\"145\":{\"h\":\"12.裁剪 clip\",\"t\":[\"clip()把已经创建的路径转换成裁剪路径。\",\"裁剪路径的作用是遮罩。只显示裁剪路径内的区域，裁剪路径外的区域会被隐藏。\",\"function draw(){// var cv = document.getElementById(\\\"tou\\\");//获取canvas画布渲染盒子 if(!cv.getContext) return;//检测是否支持画布 var ctx = cv.getContext(\\\"2d\\\");//创建二维画布 ctx.beginPath(); ctx.arc(20,20, 100, 0, Math.PI * 2); ctx.clip(); ctx.fillStyle = \\\"pink\\\"; ctx.fillRect(50, 20, 100,100); } draw(); \"]},\"146\":{\"h\":\"13.形状合成 globalCompositeOperation\",\"t\":[\"接收参数：\",\"source-over(default)这是默认设置，新图像会覆盖在原有图像。\",\"source-in 仅仅会出现新图像与原来图像重叠的部分，其他区域都变成透明的。(包括其他的老图像区域也会透明)\",\"source-out仅仅显示新图像与老图像没有重叠的部分，其余部分全部透明。(老图像也不显示)\",\"source-atop新图像仅仅显示与老图像重叠区域。老图像仍然可以显示。\",\"destination-over新图像会在老图像的下面。\",\"destination-in 仅仅新老图像重叠部分的老图像被显示，其他区域全部透明。\",\"destination-out仅仅老图像与新图像没有重叠的部分。 注意显示的是老图像的部分区域。\",\"destination-atop 老图像仅仅仅仅显示重叠部分，新图像会显示在老图像的下面。\",\"lighter 新老图像都显示，但是重叠区域的颜色做加处理\",\"darken 保留重叠部分最黑的像素。(每个颜色位进行比较，得到最小的)blue: #0000ff red: #ff0000 所以重叠部分的颜色：#000000\",\"lighten 保证重叠部分最量的像素。(每个颜色位进行比较，得到最大的)blue: #0000ff red: #ff0000 所以重叠部分的颜色：#ff00ff\",\"xor 重叠部分会变成透明\",\"copy 只有新图像会被保留，其余的全部被清除(边透明)\",\"function draw(){//globalCompositeOperation 合成 var cv = document.getElementById(\\\"tou\\\");//获取canvas画布渲染盒子 if(!cv.getContext) return;//检测是否支持画布 var ctx = cv.getContext(\\\"2d\\\");//创建二维画布 ctx.fillStyle = \\\"blue\\\"; ctx.fillRect(0, 0, 200, 200); ctx.globalCompositeOperation = \\\"source-in\\\"; //全局合成操作 ctx.fillStyle = \\\"red\\\"; ctx.fillRect(100, 100, 200, 200); } draw(); \"]},\"147\":{\"h\":\"14.颜色\",\"t\":[\"fillStyle - 填充颜色\",\"strokeStyle - 描边颜色\",\"ctx.fillStyle = \\\"red\\\"; \"]},\"148\":{\"h\":\"15.渐变颜色\"},\"149\":{\"h\":\"线性渐变：createLinearGradient(x1,y1,x2,y2)\",\"t\":[\"根据 2个坐标点 决定线性渐变的方向。\",\"通过addColorStop 增加渐变的控制点颜色。\",\"ctx.beginPath() // 使用 Path2D 代理路径 let arx = new Path2D() arx.arc(300,200,50,0,Math.PI * 2,true) ctx.lineWidth = '5' // 定义渐变色 ctx.createLinearGradient(x,y, x2, y2) let linnerColor = ctx.createLinearGradient(200,200,400,200) linnerColor.addColorStop(0,'red') linnerColor.addColorStop(1,'blue') ctx.strokeStyle = linnerColor ctx.stroke(arx) ctx.closePath() \"]},\"150\":{\"h\":\"径向渐变：createRadialGradient(x,y,r, x2, y2,r2)\",\"t\":[\"根据2个圆绘制径向渐变。\",\"通过addColorStop 增加渐变颜色。\",\"let RadialrColor = ctx.createRadialGradient(300,200,5,300,200,100) RadialrColor.addColorStop(0,'red') RadialrColor.addColorStop(1,'blue') ctx.fillStyle = RadialrColor ctx.fillRect(200,100,200,200) \"]},\"151\":{\"h\":\"16.背景填充 createPattern\",\"t\":[\"context.createPattern(image,\\\"repeat|repeat-x|repeat-y|no-repeat\\\");\",\"该方法用于 刮奖效果\",\"let img = document.createElement(\\\"img\\\") img.src = \\\"../hd.png\\\" img.onload = function(){ var pat= ctx.createPattern(img,\\\"repeat\\\"); ctx.rect(0,0,600,400) // 缩放 scale(横比例，纵比例) ctx.scale(0.1,0.1) // 填充 ctx.fillStyle = pat ctx.fill() } \"]},\"152\":{\"h\":\"\"},\"153\":{\"h\":\"为什么叫ES6？\",\"t\":[\"ECMAScript是TC39（浏览器厂商：谷歌，苹果，火狐等）推出的js的版本。\",\"es5 => 2009年\",\"es6 => 2015年\",\"es7 => 2016年\",\"...\",\"es10 => 2019年\",\"esnext => 最新版\"]},\"154\":{\"h\":\"ES6 新特性\"},\"155\":{\"h\":\"1.let声明变量及特性\",\"t\":[\"变量不能重复声明\",\"块级作用域\",\"不存在变量提升\",\"不影响作用域链\"]},\"156\":{\"h\":\"2.const声明常量\",\"t\":[\"必须有初始值\",\"常量不能修改\",\"块级作用域\",\"一般常量使用大写（潜规则-不是必须的）\"]},\"157\":{\"h\":\"3.解构赋值\",\"t\":[\"按照一定模式从数组和对象中取值\",\"// 解构数组 const F3 = ['a','b','c'] let [a,b,c] = F3 // 解构对象 const obj = { name:\\\"张三\\\", age:20, say(){} } let {name,age,say} = obj \"]},\"158\":{\"h\":\"4.模板字符串\",\"t\":[\"模板字符串用 `` 表示，模板字符串中使用 ${变量} 语法替换动态变量。\",\"let aa = '张三' let str = `${aa}是最帅的！` \"]},\"159\":{\"h\":\"5.对象简化写法\",\"t\":[\"ES6对对象进行了简化处理，写起来更简单。\",\"let name = '张三'; let change = function(){} // 简化写法 - 推荐 const obj = { name, change, fn(){} } // 传统写法 let obj = { name:name, change:change, fn:function(){} } \"]},\"160\":{\"h\":\"6.箭头函数\",\"t\":[\"简写：单个参数可以省略小括号()，单条执行语句可以省略花括号{}和return\",\"let aa = (a,b)=>a+b; \",\"箭头函数的this始终指向函数声明时所在作用域的this\",\"不能作为构造函数\",\"不能使用argument变量\"]},\"161\":{\"h\":\"7.函数参数设置默认值\",\"t\":[\"形参初始值\",\"function (a=2){} \"]},\"162\":{\"h\":\"8.rest参数\",\"t\":[\"rest参数 通过 ...args 获取参数的参数集合（数组格式）\",\"function date(...args){} date('12','333','43') // ['12','333','43'] \",\"rest 参数必须放到最后（多个参数）\",\"function aaa(a,b,...args){} aaa(1,2,3,4,5) // a:1,b:2,c:[3,4,5] \"]},\"163\":{\"h\":\"9.扩展运算符\",\"t\":[\"[...]将数组转换为逗号分割的参数序列\",\"let aa = [1,2,3] function ccc(){ console.log(arguments) } ccc(...aa) // a,b,c \",\"扩展运算符的应用：\",\"数组合并\",\"let a = [1],b = [2,3] let c = [...a,...b] \",\"数组克隆\",\"let d = [...c] \",\"将伪数组转成数组\",\" const div = document.querySelectorAll('div') let arrr = [...div] \"]},\"164\":{\"h\":\"10.数据类型symbol\",\"t\":[\"es6 引入了新的原始数据类型symbol。\",\"特点：\",\"Symbol值唯一\",\"Symbol值不能进行运算、比较\",\"Symbol定义的对象不能用for循环，但是可以用Reflect.ownKeys获取对象的所有key名。\",\"// 创建Symbol let s = Symbol() let s1 = Symbol('稀罕三') let s2 = Symbol('稀罕三') // s1 !== s2 // 通过Symbol.for 创建 let s3 = Symbol.for('稀罕三') let s4 = Symbol.for('稀罕三') // s3 === s4 \"]},\"165\":{\"h\":\"11.迭代器 iterator\",\"t\":[\"迭代器iterator是一种接口（对象的一个属性 Symbol.iterator），数据结构只要有这个结果就可以进行遍历操作。以下：Array,Arguments,Set,Map,String,TypedArray,NodeList 都可以进行for of遍历。\",\"工作原理：\",\"创建一个指针对象，指向当前数据结构的起始位置。\",\"第一次调用next方法，指针知道指向第一个成员。每次返回一个包含value和done属性的对象\",\"接下来每次调用next方法，指针都会一直往后移动，直到最后一个（最后一个done返回true，表示结束）。\",\"let arrr = [1,2,3,4] let iterator = arrr[Symbol.iterator]() // 调用对象的next方法 console.log(iterator.next()) \",\"应用场景：自定义遍历数据\",\"const obj = { name:\\\"一班\\\", students:[ 'xiaoming','xiaohong','xiaoli' ], // 通过自定义迭代器实现对象数组属性可迭代 [Symbol.iterator](){ let index = 0; let that = this; return{ next:function(){ if(index < that.students.length){ index++; return { value: that.students[index], done: false } }else{ return { value: undefined, done: true } } } } } } // 返回结果是 obj的students每次的成员 for(let v of obj){ console.log(v) } \"]},\"166\":{\"h\":\"12.生成器 generator\",\"t\":[\"生成器是一个特殊的函数（可迭代）。在function和函数名之间使用 *，函数里面通过关键字 yield 分割迭代层次，然后通过next()方法调用。\",\"function * gen(){ yield '第1次'; yield '第2次'; yield '第3次'; } let iteror = gen() iteror.next(); // 第1次 iteror.next(); // 第2次 iteror.next(); // 第3次 \",\"迭代器可以传参，在调用next时执行参数。next(arg)方法可以传入实参，作为上一次的返回结果(next参数影响上次的结果）。\",\"function * gen(arg){ console.log(arg); let one = yield '第1次'; yield '第2次'; yield '第3次'; } let iteror = gen('AAA') iteror.next(); // 第1次 iteror.next('BBB'); // 第2次 one会被改成BBB ，同时返回‘第2次’ \",\"生成器实例- 解决回调地狱问题\",\"函数调用生成器next方法，执行下一次调用，避免函数嵌套函数的情况出现\",\"function getuser(){ console.log(111); iteror.next('user'); // 函数调用生成器next方法，执行下一次调用，避免函数嵌套函数的情况出现 } function getorder(){ console.log(222); iteror.next('order'); } function getGoods(){ console.log(333); iteror.next('goods'); } function * gen(){ let users = yield getuser(); let order = yield getorder(); let goods = yield getGoods(); } let iteror = gen() iteror.next(); \"]},\"167\":{\"h\":\"13.Promise\",\"t\":[\"Promise是ES6引入的解决异步编程的新方法。用于解决回调地狱的问题。\",\"Promise 函数的状态有：pending(初始化状态)，fulfilled(已成功)和rejected(已失败)\",\"let p = new Promise((resolve,reject)=>{ // 默认状态是 pending try{ resolve('成功') // resolve将状态修改为fulfilled }catch(e){ reject('失败') // reject将状态修改为rejected } }) // 调用promise对象的then方法 p.then(function(res){ console.log(res); },function(e){ console.log(e); }) \",\"then()方法接收2个函数，第一个函数是成功回调（resolve时触发），第二个参数是失败回调（reject时触发）。\",\"then返回结果：返回结果是Promise对象，对象的状态由函数执行的结果决定。\",\"then如果返回结果是非Promise，如：“123”，那么返回值是对象成功的值\",\"返回结果是一个Promise，then的返回值是Promise的返回值\",\"如果then抛出了错误，then的返回值就是抛出的错误值\",\"//node 获取文件内容异步 import fs form 'fs'; let p =new Promise((resolve,reject)=>{ fs.readFile('./1.txt',(err,data)=>{ if(err) reject(err) resolve(data) }) }) p.then(val=>{ console.log(val.tostring()) },err=>{ console.error(err) }) \"]},\"168\":{\"h\":\"14.集合 Set\",\"t\":[\"ES6新增的数据结构 Set集合，集合中元素不能有重复（会自动去重）。\",\"属性方法\",\"size 集合元素长度\",\"add 新增元素\",\"delete 删除元素\",\"has 检测是否含有元素\",\"clear 清空集合\",\"let s = new Set([1,2,3,4,2]) // Set[1,2,3,4] s.size // 4 s.add(31) s.delete(31) s.clear() \",\"集合用法\",\"数组去重\",\"let arr = [...new Set([1,2,3,2])] \"]},\"169\":{\"h\":\"15.Map\",\"t\":[\"ES6新增的数据结构 Map，保存数据是键值对集合。但是“键值”可以是任何类型的值（包括对象）。\",\"Map原型也有interator接口，所以也可以使用扩展运算符和for of循环。\",\"size 返回Map的元素长度\",\"set 增加新元素并返回当前Map\",\"get 返回键名对应的值\",\"has 检测是否函数某个元素\",\"delete 删除指定键值对\",\"clear 清空集合\",\"let m = new Map(); m.set('name','七娃')； m.set({name:'七娃'},function(){}) // key和value都可以是任意类型 m.get('name') m.delete('name') m.clear() \"]},\"170\":{\"h\":\"16.Class 类\",\"t\":[\"ES6的类class就是一个语法糖，能实现ES5的类各种功能，只是看起来更像一个面向对象编程的类。这种写法更接近于传统语言(java,c)。\",\"class 类名{ constructor(参数){ this.参数 = 参数 } 方法(){} } \"]},\"171\":{\"h\":\"构造函数\",\"t\":[\"每个类都有自己的构造函数 constructor，但是也可以省略不写。\",\"class Phone{ get name(){ return 'zhangsan' } set name(){ } } \"]},\"172\":{\"h\":\"静态成员\",\"t\":[\"静态成员，通过 static 关键词定义静态成员。静态成员及方法只能通过类获取，不能通过类实例化对象获取。\",\"class Phone{ // 静态属性 static price = '5000' constructor(name){ this.name = name } // 静态方法 static change(){ } } // 获取静态属性和方法 Phone.price Phone.change() \"]},\"173\":{\"h\":\"类继承\",\"t\":[\"通过关键字 extends 继承父类属性和方法。\",\"class Phone{ constructor(name){ this.name = name } call(){ console.log('打电话') } } // 子类继承 class xiaomi extends Phone{ constructor(name,size){ super(name) this.size = size } photo(){} } \",\"子类内方法名和父类方法名一致，就是方法重写。重写后子类方法生效，父类无效！\"]},\"174\":{\"h\":\"类的getter和seter方法\",\"t\":[\"类的getter,setter方法用于监听类属性读取和改变时\",\"class Phone{ get name(){ return 'zhangsan' } set name(){ } } \"]},\"175\":{\"h\":\"17.ES6数值扩展\"},\"176\":{\"h\":\"Number.EPSILON-数值最小精度\",\"t\":[\"Number.EPSILON属性值接近于 2.22044604...E-16 ，我们可以用它解决js精度丢失的问题。\",\"// 0.1+0.2 !== 0.3 function equal(a,b){ if(Math.abs(a-b) < Number.EPSILON){ return true }else{ return false } } equal(0.1+0.2,0.3) // ture \",\"####Number.isFinite-判断是否是有限数\",\"console.log(Number.isFinite(100)) // ture console.log(Number.isFinite(10/3)) // false \"]},\"177\":{\"h\":\"Number.isNaN-判断数值是否是NaN\",\"t\":[\"Number.isNaN(3) // false \"]},\"178\":{\"h\":\"Number.parseInt 和Number.parseFloat\",\"t\":[\"Number.parseInt 和es5的parseInt 是一样(都是将字符串转成整数），就是放到了Number对象下面。\",\"console.log(Number.parseInt('213123looosss')) // 213123 会截取到后面的字母，保留数值 console.log(Number.parseFloat('10.2looooos')) // 10.2 \"]},\"179\":{\"h\":\"Number.isInteger - 判断是否是整数\",\"t\":[\"Number.isInteger(3) // true \"]},\"180\":{\"h\":\"Math.truc - 抹掉小数部分\",\"t\":[\"Math.trunc(3.5) //3 \"]},\"181\":{\"h\":\"Math.sign - 判断数值是正数（1），负数（-1），还是0\",\"t\":[\"Math.sign(100) // 1 Math.sign(-100) // -1 Math.sign(0) // 0 \"]},\"182\":{\"h\":\"18.ES6对象扩展\"},\"183\":{\"h\":\"Object.is - 判断2个值是否完全相等\",\"t\":[\"判断对象返回false\",\"判断的值1负1正就返回false\",\"// NaN === NaN false Object.is(NaN,NaN) // true \"]},\"184\":{\"h\":\"Object.assign - 对象合并\",\"t\":[\"对象合并时，如果属性重复，后面对象的属性会覆盖前面的属性。\",\"let obj = { name:'zhangsn' } let obj1 = { name:'zhangsn2', sex:'男' } let obj2 = Object.assign(obj,obj1) \",\"####Object.setPrototypeOf - 设置对象的原型对象\",\"setPrototypeOf 方法可以更改对象的原型对象，也可以理解为，在对象原型链之间插入一个原型。\",\"let school = {name:\\\"hi\\\"} let city = { list:[’北京‘] } Object.setPrototypeOf(school,city) // school 的原型 指向了city Object.getPrototypeOf(school) // 获取对象的原型 city \"]},\"185\":{\"h\":\"19.ES6模块化\",\"t\":[\"模块化是将一个大工程文件拆分成许多小文件，然后由小文件组合起来。\",\"模块化优点：\",\"防止命名冲突\",\"代码复用\",\"高维护\",\"ES6之前模块化规范：\",\"CommonJS => nodejs\",\"AMD => requireJS\",\"CMD => seaJS\",\"ES6模块化语法\",\"模块功能主要有export和import构成。\",\"// m1.js 文件 export let school = \\\"张三\\\"; export function say(){} \",\"使用的时候使用 import 导入。导入的时候可以用 as 取别名。\",\"浏览器使用模块化需要在 script 上加 type=\\\"module\\\"。\",\"<script type=\\\"module\\\"> import * as m1 from \\\"./src/m1.js\\\"; </script> \",\"export暴露数据的方式：\",\"// 分别暴露 export let school = \\\"张三\\\"; export function say(){} \",\"// 统一暴露 let school = \\\"张三\\\"; function say(){} export { school,say} \",\"// 默认暴露 - 使用时需要使用 .default.school 才能访问到 export default{ school = \\\"张三\\\", say(){} } \",\"import导入数据的方式：\",\"// 通用导入 import * as m1 from \\\"./src/m1.js\\\"; \",\"// 解构赋值 import { school, say} from \\\"./src/m1.js\\\"; import { school as school2, change} from \\\"./src/m2.js\\\"; // as 别名避免同名 import { default as m3} from \\\"./src/m3.js\\\"; // 默认暴露，可以把default直接给别名 \",\"// 针对default默认暴露，可以直接简写 import m3 from \\\"./src/m3.js\\\"; // 默认暴露，export default {} \",\"使用babel对ES6模块化代码转换步骤：\",\"安装node插件 babel-cli babel-preset-env browserify(打包工具)\",\"npx babel src/js -d dist/js\",\"打包 npx browserify dist/js/app.js -o dist/bundle.js\",\"这样浏览器都可以支持bundle.js这个文件了。\"]},\"186\":{\"h\":\"ES7 新特性\"},\"187\":{\"h\":\"1.Array.includes - 是否包含某个元素\",\"t\":[\"const ss = [1,\\\"2\\\"] ss.includes('2') // true ss.includes(1) // false \"]},\"188\":{\"h\":\"2.幂运算**\",\"t\":[\"ES7新增** 标识幂运算\",\"let c = 2 ** 10 // 1024 // 等效于 let d = Math.pow(2,10) // 1024 \"]},\"189\":{\"h\":\"ES8 新特性\"},\"190\":{\"h\":\"1.async 和 await\",\"t\":[\"异步编程解决方案：生成器，promise，async await\",\"async 函数的返回值是一个promise对象，promise对象的解构由async函数执行返回值决定：\",\"返回一个非promise对象，如字符串，那么async的返回promise对象的状态是成功，值是该字符串；如果抛出了异常，那么返回promise对象的状态是失败，值是异常报错。\",\"返回promise对象，结果就是promise的结果。\",\"注意事项：\",\"await 必须写在 async里面\",\"await 右侧表达式 一般是promise对象\",\"await 返回值是promise的成功值\",\"await的返回值失败就会抛异常，需要通过 try catch 捕获异常。\",\"// 发送ajax function ajax(url){ return new Promise((resolve,reject)=>{ // 1.创建对象 let x = new XMLHttpRequest(); // 2.初始化 x.open('GET',url); // 3.发送 x.send(); // 4.事件绑定 x.onreadystatechange = function(){ if(x.readyState === 4){ if(x.status>= 200 && x.status <200){ resolve(x.response) }else{ reject(x.status) } } } }) } // then 获取返回结果 ajax(\\\"http://api.tianqi.com/api\\\").then(val=>{ console.log(val) },err=>{ console.log(err) }) // 使用await async function main(){ let res = await ajax(\\\"http://api.tianqi.com/api\\\"); // 只返回成功结果 } main() \"]},\"191\":{\"h\":\"2.ES8 对象方法扩展\"},\"192\":{\"h\":\"Object.keys 和Object.values\",\"t\":[\"Object.keys 获取对象key的键值集合（数组）\",\"Object.values 获取对象value值集合（数组）\",\"let obj = { name:\\\"sss\\\", age:19, sex:1 } Object.keys(obj) // ['name','age','sex'] Object.values(obj) // ['sss',19,1] \"]},\"193\":{\"h\":\"Object.entries - 对象转成键值对的集合\",\"t\":[\"Object.entries 用于创建Map，返回的是一个数组\",\"let obj = { name:\\\"sss\\\", age:19, sex:1 } const m = new Map(Object.entries(obj)) \"]},\"194\":{\"h\":\"Object.getOwnPropertyDescriptors - 获取对象所有属性的描述\",\"t\":[\"Object.getOwnPropertyDescriptors(obj) 获取对象所有属性的描述\",\"Object.getOwnPropertyDescriptor(obj,'name') 获取对象的某个对象的属性描述\",\"let obj = { name:\\\"sss\\\", age:19, sex:1 } Object.getOwnPropertyDescriptors(obj) // age:{value: 19, writable: true, enumerable: true, configurable: true} // name:{value: 'sss', writable: true, enumerable: true, configurable: true} // sex:{value: 1, writable: true, enumerable: true, configurable: true} \",\"声明对象描述：\",\"var obj = new Object(); Object.defineProperty(obj, 'name', { configurable: false, writable: true, // 是否可以被赋值 enumerable: true, // 是否可枚举 value: '李明' }) \"]},\"195\":{\"h\":\"ES9 新特性\"},\"196\":{\"h\":\"1.扩展运算符和rest参数\",\"t\":[\"es6的...只能用在数组上，es9把这个用法扩展到了对象上。\",\"let obj = { name:'张三' } let obj2 = { sex:1 } let obj3 = { age:19 } // 使用扩展运算符合并对象 let ooo = {...obj,...obj2,...obj3} // {name:'张三',sex:1,age:19} main(ooo) // rest 获取剩余参数，这里面的剩余参数会自动合并成一个对象 function main({a,...b}){ } \"]},\"197\":{\"h\":\"2.正则捕获分组\"},\"198\":{\"h\":\"3.正则反向断言\",\"t\":[\"根据内容的前后进行识别，从而获取需要的数据。\",\"正向断言：通过需要的字符后面的字符获取前面的数据。语法：(?=所需字符后面的字符)\",\"let str = ’js2131231你是555啦啦啦' // 目标获取555 const reg = /\\\\d+(?=啦)/; \",\"反向断言：通过需要的字符前面的字符获取后面所需的数据。语法：(?<=所需字符前面的字符)\",\"let str = ’js2131231你是555啦啦啦' // 目标获取555 const reg = /(?<=是)\\\\d+/; \"]},\"199\":{\"h\":\"ES10 新特性\"},\"200\":{\"h\":\"1.Object.fromEntries - 将二维数组或Map类型转成对象\",\"t\":[\"const res = Object.fromEntries([ ['name','zss'], ['sex','19'] ]) // {name: 'zss', sex: '19'} \",\"Object.entries 是将对象转成二维数组(ES8)\",\"const res = Object.entries ({ name:'shangsan' }) // [['name','shangsan']] \"]},\"201\":{\"h\":\"2.trimStart与trimEnd\",\"t\":[\"trimStart 去除左侧空白符\",\"trimEnd 去除右侧空白符\"]},\"202\":{\"h\":\"3.flat - 将多维数组转低维数组\",\"t\":[\"let arr = [1,2,3,[4,5]] arr.flat() // [1,2,3,4,5] // 将多维转1维，需要给flat传参维度n-1 // 例如：将3维转1维 let arr = [1,2,3,[4,5,[6,7]]] arr.flat(2) // [1,2,3,4,5,6,7] \",\"flatMap是flat和map方法的结合，又降维又遍历。\"]},\"203\":{\"h\":\"4.Symbol.description - 获取Symbolde描述\",\"t\":[\"Symbolde描述其实就是symbol的值。\",\"let s = Symbol('张三') s.description() // '张三' \"]},\"204\":{\"h\":\"ES11 新特性\"},\"205\":{\"h\":\"1.类的私有属性\",\"t\":[\"私有属性只能在类里面定义和调用，外部不能调用。\",\"class Person{ name; #age; // 私有属性 #weight; // 私有属性 constructor(name,age,weight){ this.name = name; this.#age = age; this.#weight = weight; } init(){ console.log(this.#age) } } let gir = new Person('lili',20,'120kg') \"]},\"206\":{\"h\":\"2.Promise.allSettled\",\"t\":[\"Promise.allSettled([p1,p2]) 用于处理多个promise的返回结果，它永远是成功的，即便其中一个是失败的，但不影响其他的promise返回结果。\",\"Promise.all 是所有的promise的返回结构都成功，才有返回成功，不然就失败。\"]},\"207\":{\"h\":\"3.可选链操作符\",\"t\":[\"用 ?. 表示可选链操作符，应用场景：去深层级的属性\",\"function main(config){ // 目标获取host属性 // 传统写法 且短路写法 let host = config && config.db && config.db.host; // 使用可选链操作符 let host2 = config?.db?.host; } main({ db:{ host:\\\"20.32.18.95\\\" } }) \"]},\"208\":{\"h\":\"4.动态导入import\",\"t\":[\"ES6在文件头部import导入文件的方式被称作静态导入；ES11引入了动态导入的概念，在用的时候导入，并返回一个promise对象，导入成功，文件对象就是返回值。\",\"btn.onclick = function(){ // 动态导入js模块 import('./hello.js').then(module =>{ // 导入成功的返回值module就是 动态文件抛出的对象 module.hello() }) } \"]},\"209\":{\"h\":\"5.BigInt数据类型\",\"t\":[\"ES11引入了新的数据类型BigInt，用于表示大整型的数字（不能是小数）\",\"定义BigInt类型：\",\"方式1：在数字后面+n ，类型变成 BigInt\",\"let n = 123n \",\"方式2：使用BigInt定义\",\"let n = BigInt(123) \",\"应用场景：大数值运算。\",\"js支持最大的数值是 Number.MAX_SAFE_INTEGER - 9007199254740991 ，也就是说超过这个值进行运算就会失效，这时就需要使用BigInt。\",\"let max = Number.MAX_SAFE_INTEGER; let cc = BigInt(max) + BigInt(2) \"]},\"210\":{\"h\":\"6.globalThis - 特殊变量\",\"t\":[\"globalThis 永远指向 全局环境。浏览器永远指向 window对象。\"]},\"211\":{\"h\":\"\"},\"212\":{\"h\":\"JS模块化\"},\"213\":{\"h\":\"1.模块化背景\",\"t\":[\"CommonJS，2009年Mozilla工程师提出的CommonJS规范，同年Nodejs基于CommonJS应用而生。（Node端同步方案）\",\"AMD，2010年美国程序员开发了Require.js，并发布了AMD规范。（浏览器端异步方案，为了解决JS加载顺序先后导致异常问题）\",\"CMD，2011年支付宝前端玉伯开发了 Sea.js，并发布了CMD规范。浏览器端异步方案，写法更优雅。\",\"ES6模块化，2015年EMCScript官方发布了ES6模块化及其规范。Node和浏览器端都支持（需要通过babel转换）！\",\"无论是CommonJS，AMD还是CMD 都是为了前端模块化的发展做了贡献，如同JQuery一样，倒逼着官方进步。正是由于它们的存在，前端发展才更加完善。随着前端三剑客（react,vue,angular)的出现，无论是AMD还是CMD，还是JQuery都成为了历史。\"]},\"214\":{\"h\":\"2.CommonJS规范\",\"t\":[\"基于Node环境，代码案例：\",\"// math.js 模块文件 function add(a,b){ return a+b; } function sub(a,b){ return a-b; } // CommonJS 导出规范 module.exports = { add,sub } \",\"引入及使用模块文件：\",\"const math = require('./math.js') let res = math.add(1,2) \"]},\"215\":{\"h\":\"3.AMD 规范\",\"t\":[\"浏览器端使用 require.js(https://requirejs.org/) ，常用于多页面应用，代码案例：\",\"a.html页面引入requirejs\",\"<!DOCTYPE html> <html> <head> <title>My Sample Project</title> <!-- data-main 需要加载的AMDjs文件 --> <script data-main=\\\"scripts/main\\\" src=\\\"js/require.js\\\"></script> </head> <body> <h1>My Sample Project</h1> </body> </html> \",\"b.main入口文件配置\",\"// main.js require.config({ baseUrl: \\\"/js\\\", // 入口目录 paths: { // 相对于js目录的位置及文件名，不需要加js后缀 \\\"jquery\\\": \\\"../lib/jquery.min\\\" }, }); // 引入js模块文件 require(['index.js']) \",\"c.定义模块\",\"// js模块定义 define(['jquery'],function($){ // jquery加载完之后，执行函数 $('btn').click(function(){ alert(\\\"AMD\\\") }) }) \"]},\"216\":{\"h\":\"4.CMD 规范\",\"t\":[\"浏览器端，使用sea.js （https://seajs.github.io/seajs/docs/）代码实例：\",\"a.页面引入\",\"<!doctype html> <html> <head> <meta charset=\\\"utf-8\\\"> <title>Hello Sea.js</title> </head> <body> <script src=\\\"../sea-modules/seajs/seajs/2.2.0/sea.js\\\"></script> <script> // Set configuration seajs.config({ base: \\\"../sea-modules/\\\", alias: { \\\"jquery\\\": \\\"jquery/jquery/1.10.1/jquery.js\\\" } }); // 使用文件 seajs.use(\\\"examples/hello/1.0.0/main\\\"); </script> </body> </html> \",\"b.main定义模块\",\"// 所有模块都通过 define 来定义 define(function(require, exports, module) { // 通过 require 引入依赖 var $ = require('jquery'); var Spinning = require('./spinning'); // 通过 exports 对外提供接口 exports.doSomething = ... // 或者通过 module.exports 提供整个接口 module.exports = ... }); \"]},\"217\":{\"h\":\"5.ES6模块化\",\"t\":[\"目前无论node端还是浏览器端，使用ES6模块化都需要将js进行babel转换成es5的写法，环境才可正常运行。\"]},\"218\":{\"h\":\"postMessage 页面间通信\",\"t\":[\"postMessage 是window对象的一个方法，用于同源策略不同页面间通信。\",\"语法：\",\"otherWindow.postMessage(message, targetOrigin, [transfer]); \",\"otherWindow 其他窗口的引用，比如：iframe ,执行 window.open返回的窗口对象\",\"message 需要传递的数据\",\"targetOrigin 指定哪些窗口可以接收消息。目标窗口协议/主机地址/端口 任意不一致都会导致跨域，无法通信。\",\"注意：用于接收消息的任何事件监听器必须首先使用origin和source属性来检查消息的发送者的身份。\"]},\"219\":{\"h\":\"postMessage 实现父子页面通信\",\"t\":[\"父页面使用 iframe:\",\"<iframe src=\\\"http://127.0.0.1:8020/HelloHBuilder/postMessage2.html\\\" width=\\\"\\\" comment=\\\"接收页面\\\"></iframe> <script type=\\\"text/javascript\\\"> let iframe = document.querySelector(\\\"iframe\\\") let str = \\\"aqwieuqwiu\\\" iframe.onload = function(){ iframe.contentWindow.postMessage('aqwieuqwiu','*'); } </script> \",\"子页面：\",\"let app = document.getElementById(\\\"app\\\") window.addEventListener('message',function(event){ let or = event.origin // 安全检查 if(or == 'http://127.0.0.1:8020'){ let res = event.data app.textContent = res } }) \"]},\"220\":{\"h\":\"postMessage 如何实现跨域？\",\"t\":[\"postMessage 本身不能实现跨域通信，因为它是window对象的一个方法，用于同源策略不同页面间通信。\",\"跨域可以通过一个服务器作为中间人转发消息。例如：服务器通过node和soclet.io实现转发广播。跨域页面也通过soclet方法接收。\",\"// 安装socket.io // npm install socket.io const http = require('http'); const socketIO = require('socket.io'); // 创建服务器 const server = http.createServer((req, res) => { res.end('Socket server is running.'); }); // 初始化socket.io const io = socketIO(server); // 监听客户端连接 io.on('connection', (socket) => { console.log('Client connected'); // 监听客户端发来的消息 socket.on('message', (data) => { console.log('Received message:', data); // 将消息广播给所有客户端 socket.broadcast.emit('message', data); }); }); // 监听3000端口 server.listen(3000, () => { console.log('Server is running on port 3000'); }); \",\"页面：\",\"// 引入socket.io-client // <script src=\\\"https://cdn.socket.io/socket.io-version/socket.io.min.js\\\"></script> const socket = io('http://localhost:3000'); // 监听服务器发来的消息 socket.on('message', (data) => { console.log('Received message:', data); }); // 发送消息到服务器 socket.emit('message', { message: 'Hello from client!' }); \"]},\"221\":{\"h\":\"\"},\"222\":{\"h\":\"WebSocket是什么？\",\"t\":[\"WebSocket是一种协议，用于提供低延迟/全双工/长连接的客户端与服务器通信方式。\",\"**半双工：**通信双方不能同时发消息，只能等待一方发完，另一方才能发送消息。\",\"全双工：通信的双方可以同时发送和接收消息，不需要等待对方相应和传输完成。\",\"应用场景：\",\"即时通讯\",\"游戏\"]},\"223\":{\"h\":\"客户端网络信息\",\"t\":[\"响应码：101\",\"响应头：\",\"// Upgrade连接 Connection:Upgrade // 提供基础的防护，减少恶意连接 Sec-Websocket-Accept:PXw5jD28Z2rpv/HTi51a1KS2HtI= // Upgrade类型：websocket Upgrade:websocket \",\"响应体：\",\"显示客户端和服务器发送的消息记录\"]},\"224\":{\"h\":\"对比传统方法\",\"t\":[\"传统实现即时通讯的方法：\",\"轮询：定期向服务器发送请求，频繁请求服务器；\",\"长轮询：客户端发送请求后，保持连接打开，等待新数据相应后再关闭连接；请求还是比较频繁。\",\"comet：保持长连接，在往返请求后继续保持连接打开，它是基于http模型，模拟的长连接；\",\"传统实现双向通信的方法缺点：\",\"用的轮询长轮询，缺点会产生大量的请求和响应，造成不必要的网络开销和延迟\"]},\"225\":{\"h\":\"WebSocket的缺点\",\"t\":[\"不提供加密功能。如需保证数据安全，需要设置白名单或SSL协议。\",\"不支持IE10以前浏览器。采用ajax替代。\",\"需要不断的维护优化长连接，不然会过度消耗服务器资源。\"]},\"226\":{\"h\":\"WebSocket事件方法有：\",\"t\":[\"onopen 开启通信\",\"onmessage 接收消息\",\"onerror 发生错误时触发\",\"onclose 连接关闭时触发\",\"WebSocket方法\",\"send 发送消息\",\"close 关闭连接\"]},\"227\":{\"h\":\"客户端与服务器使用WebSocket通信案例\",\"t\":[\"WebSocket通信的最小单位是：帧。\",\"服务端采用nodejs：\",\"const express = require('express'); const WebSocket = require('ws'); // 2.创建服务器的实例对象 const app = express(); // WebSocket配置开始端口服务 const wss = new WebSocket.Server({ port: 8080 }); wss.on('connection', function connection(ws) { console.log('恭喜你，连上客户端了！'); ws.on('message', function incoming(message) { console.log('服务端接收: %s', message); }); // 服务端发送至客户 ws.send('你好啊，用户!'); }); app.listen(3000, () => console.log('Example app listening on port 3000!')) \",\"客户端使用js接收消息：\",\"// 客户端需要通过 WebSocket 创建连接，连接开头是ws+服务端的地址 let ws = new WebSocket('ws://localhost:8080'); // 开启通信 ws.onopen = function () { console.log('ws onopen'); // 发送消息 ws.send('ws真好用！'); }; // 接收消息 ws.onmessage = function (e) { console.log('ws onmessage'); console.log('服务端传回: ' + e.data); }; \"]},\"228\":{\"h\":\"WebSocket的心跳机制：为什么WebSocket需要心跳机制？\",\"t\":[\"为了保持WebSocket稳定的长连接，服务器和客户端之间通过心跳包来保持连接状态。以房子长时间没有数据传输而被切断。\",\"**心跳包：**一种特殊的数据帧包（空数据），定期发送，确保连接有效不中断！\",\"改造客户端代码：\",\"const socket = new WebSocket('ws://localhost:8080'); // WebSocket 建立连接 const heartCheck = initHeartCheck()；// 初始化心跳检测对象 // WebSocket建立连接成功 socket.addEventListener('open', function (event) { heartCheck.start();// 启动心跳检测 socket.send('Hello Server!'); }); // WebSocket接受到服务端消息 socket.addEventListener('message',function(event){ heartCheck.start();// 启动心跳检测 }) // WebSocket 连接被关闭 socket.addEventListener('close',function(event){ heartCheck.reset();// 启动心跳检测 }) // WebSocket 连接因错误而关闭 socket.addEventListener('error',function(event){ heartCheck.reset();// 启动心跳检测 }) function initHeartCheck() { return { timeout: 2 * 1000, // 每2s向服务端发送一次消息 serverTimeout: 10 * 1000, // 10s收不到服务端消息算超时 timer: null, serverTimer: null, reset() { // 心跳检测重置 clearTimeout(this.timer); clearTimeout(this.serverTimer); this.timer = null; this.serverTimer = null; return this; }, start() { // 心跳检测启动 this.reset(); this.timer = setTimeout(() => { socket.send('ping'); // 定时向服务端发送消息 if (!this.serverTimer) { this.serverTimer = setTimeout(() => { // 关闭连接触发重连 console.log(new Date().toLocaleString(), \\\"not received pong, close the websocket\\\"); socket.close(); //关闭websocket或根据业务需求去重连 }, this.serverTimeout); } }, this.timeout); }, } } \"]},\"229\":{\"h\":\"\"},\"230\":{\"h\":\"Worker对象\",\"t\":[\"worker用于创建子线程，不会阻塞主线程，互不干涉。它是一种网络接口，不能直接访问window和dom元素。\",\"self 是线程js的当前对象。\"]},\"231\":{\"h\":\"应用场景：\",\"t\":[\"处理超大数据\",\"分析视频、音频、pdf等文件\"]},\"232\":{\"h\":\"使用\",\"t\":[\"父页面和线程js通过postMessage传递消息；\",\"通过onmessage 接收数据。\",\"错误通过onerror捕获。\"]},\"233\":{\"h\":\"关闭线程\",\"t\":[\"线程开启之后需要手动关闭，不然一直在。\",\"主线程关闭子线程\",\"work.terminate() \",\"子线程关闭当前线程\",\"self.close() \"]},\"234\":{\"h\":\"案例：\",\"t\":[\"主线程 - 父页面\",\"var work = new Worker(\\\"./a.js\\\") var arr = [3,5,6,2,1] // 父页面传递数据 work.postMessage(arr) // 父页面接收子线程处理后的数据 work.onmessage = function(e){ console.error(e.data) } \",\"子线程 - js文件\",\"// 接收消息 self.onmessage = function(e){ // 处理数据 let arr2 = sort(e.data) // 向主线程发送消息 self.postMessage(arr2) // 关闭子线程 self.close() } function sort(arr){ return arr.sort((a,b) => a - b) } \",\"子线程不能使用以下\",\"window 对象\",\"document 对象\",\"parent 对象\",\"alert 和 confirm\"]},\"235\":{\"h\":\"\"},\"236\":{\"h\":\"事件循环\"},\"237\":{\"h\":\"1.进程和线程\"},\"238\":{\"h\":\"什么是进程？\",\"t\":[\"程序运行需要有它自己专属的内存空间，可以把这块内存空间简单的理解为进程。\"]},\"239\":{\"h\":\"什么是线程？\",\"t\":[\"一个进程至少有一个线程，所以在进程开启后会自动创建一个线程来运行代码，该线程称之为主线程。\"]},\"240\":{\"h\":\"2.浏览器进程\",\"t\":[\"浏览器启动之后，会自动多个进程。\",\"浏览器进程主要有三部分组成：浏览器进程，网络进程，渲染进程。\",\"浏览器进程 ，主要负责界面显示，用户交互，子进程管理等。浏览器进程内部会启动多个线程处理不同的任务\",\"网络进程，负责加载网络资源。网络进程内部启动多个线程来处理不同的网络任务。\",\"渲染进程，启动之后会启动一个渲染主线程，负责执行 HTML/CSS/JS代码。\",\"默认情况下，浏览器会为每个标签页开启一个渲染进程，保证不同标签页之间互不影响。\",\"渲染进程主要处理以下内容：解析HTML/CSS，计算样式和布局，执行js代码等。\",\"渲染进程为了解决同一时间的事件冲突提出了排队—— 消息队列（事件队列）。\",\"浏览器启动，渲染主线程会进入一个无限循环。\",\"渲染主线程会每次从消息队列去一个任务去执行，执行完成之后，再拿下一个任务。直到任务处理完进入休眠状态。\",\"其他线程随时添加新任务到消息队列尾部。如果主线程处于休眠状态就先唤醒继续循环拿任务。\",\"整个渲染主线程处理任务的过程，被称作事件循环。\"]},\"241\":{\"h\":\"3.什么是异步？\",\"t\":[\"代码在执行的过程中，会遇到不能立即执行的任务，例如计时器（setTimeout)，网络请求(xhr,fetch)，监听事件（addEventListener)。为了不阻塞渲染进程，浏览器采用了异步的方法解决问题。\"]},\"242\":{\"h\":\"单线程是异步产生的原因\"},\"243\":{\"h\":\"\",\"t\":[\"js是一门单线程的语言，它运行在浏览器的渲染主线程中，渲染主线程只有一个。\",\"渲染主线程承担着渲染页面，执行js等工作，如果使用同步方法会导致主线程阻塞，从而导致消息队列中的其他任务无法执行。这样就造成浪费主线程时间，页面无法正常渲染卡顿等现象出现。\",\"所有浏览器采用异步方法，把不能立即执行的任务交给其他线程处理，主线程继续执行下一任务。其他线程把计时器网络请求等包装成任务，并放到消息队列尾部等待主线程执行。\",\"这种模式下，浏览器永不阻塞，从而保证了单线程的流畅运行。\",\"任务没有优先级，只能在消息队列排队（先进先出）。消息队列可以有多个，但是消息队列有优先级！！！\",\"消息队列可以有多个：\",\"延时队列，用于存放计时器达到后的回调任务，优先级中\",\"交互队列， 用户存放用户操作后产生的事件处理任务，优先级高\",\"微队列，用户存放需要最快执行的任务，优先级最高 （Promise.then 和MutationObserver)\"]},\"244\":{\"h\":\"事件循环式异步的实现方法\"},\"245\":{\"h\":\"什么是js的事件循环？\",\"t\":[\"事件循环又叫消息队列，是浏览器渲染主线程的工作方式。\",\"在浏览器源码中，它开启一个不会结束的for循环，每次循环从消息队列去第一个任务执行，其他线程把任务加入到消息队列尾部等待执行。\",\"过去把消息队列分为宏队列和微队列，这种说法已经无法满足复杂的浏览器环境，现在采用更灵活的处理方式：\",\"根据W3C官方的解释，每个任务有不同类型，同类型任务必须在同一个队列，不同任务可以属于不同的队列（微队列，交互队列，延时队列）。在一次事件循环中，不同队列有不同的优先级，但必须有一个微队列，优先级最高。\"]},\"246\":{\"h\":\"js中的计时器能做到精确计时吗？\",\"t\":[\"不能。\",\"1.计算机硬件没有原子钟，无法做到精确计时；\",\"2.操作系统的计时函数本事就有少量偏差，由于js调用操作系统的函数，因此也会有偏差；\",\"3.按照w3c的标准，浏览器实现计时器时，如果嵌套超过5级，最小调用时间就会变成4毫秒，又造成了偏差。\",\"4.受事件循环影响，计时器的回调函数只能在主线程空闲的时候执行，因此也会有一定偏差。\"]},\"247\":{\"h\":\"\"},\"248\":{\"h\":\"Object 对象描述操作\",\"t\":[\"对象的属性描述由6部分组成：\",\"value 值\",\"writable 是否能重写\",\"enumerable 是否可遍历\",\"configurable 描述是否可修改\",\"另外每个对象都有自己的获取器和修改器：\",\"getter 函数\",\"setter 函数\",\"###getOwnPropertyDescriptor 获取对象属性的描述\",\"Object.getOwnPropertyDescriptor(obj,'a') \"]},\"249\":{\"h\":\"getOwnPropertyDescriptors 获取对象的描述\",\"t\":[\"Object.getOwnPropertyDescriptors(obj) \"]},\"250\":{\"h\":\"defineProperty 设置属性描述符\",\"t\":[\"Object.defineProperty(obj,a,{ writable:false, enumerable: false }) \"]},\"251\":{\"h\":\"freeze 对象冻结\",\"t\":[\"冻结之后属性不可新增，删除，修改。\",\"Object.freeze(this) // 冻结原型，不允许新增原型 Object.freeze(GOOD.prototype) \"]},\"252\":{\"h\":\"seal 对象封闭\",\"t\":[\"封闭的对象不允许添加和删除属性！但是已有属性可以修改。\",\"Object.seal(this) \"]},\"253\":{\"h\":\"\"},\"254\":{\"h\":\"渲染原理\",\"t\":[\"浏览器渲染：简单的说就是将 html字符串渲染成像素。\"]},\"255\":{\"h\":\"浏览器是如何渲染页面的？从输入网址到页面正常展示，浏览器做了什么？\",\"t\":[\"当浏览器的网络线程通过网络通信收到HTML文档后，会产生一个渲染任务，并将其传递给渲染主线程的消息队列中，在事件循环机制作用下，渲染主线程取出消息队列的渲染任务进行渲染。\",\"整个渲染阶段分为8部分：html解析，样式计算，布局，分层，绘制，分块，光栅格，画。最后生成浏览器显示屏的像素点。\"]},\"256\":{\"h\":\"1.HTML解析\",\"t\":[\"html解析（parse Html），将字符串转换成 DOM树对象；遇到CSS代码，浏览器启动一个预解析器 转成css树对象 。\",\"##### 为什么css不会阻塞html解析？ 如何线程解析到link为止，此时外部的css文件还没下载好，主线程不会等待，会继续解析后续的html。因为下载和解析CSS的工作是在预解析线程中进行的，不是同一个线程。 ##### html解析遇到js代码会怎么处理？ 渲染进程遇到js时，必须暂停一切行为，等待下载执行完成后才能继续解析html。因为js代码有可能改动DOM树。在下载js时，预解析线程可以分摊js下载任务。 \"]},\"257\":{\"h\":\"2.样式计算\",\"t\":[\"主线程会遍历DOM树对象，一次为每个节点计算出它的最终样式，被称作 “computed style\\\"。在这一过程，相对单位会变成绝对单位（em变px)，很多预设值会变成绝对值(red变成rgb(255,0,0))。\",\"这一步完成之后会得到一个带有样式的DOM树。\",\"js 通过 getComputedStyle() 获取最终样式。\"]},\"258\":{\"h\":\"3.布局 - layout\",\"t\":[\"布局阶段会依次遍历 DOM 树的每一个节点，计算每个节点的几何信息。例如节点的宽高、相对包含块的位置。\",\"布局树和DOM树不一定一一对应，对于隐藏的dom节点，布局树不显示。\"]},\"259\":{\"h\":\"4.分层 - layer\",\"t\":[\"主线程会使用一套复杂的策略对整个布局树中进行分层。\",\"分层的好处在于，将来某一个层改变后，仅会对该层进行后续处理，从而提升效率。\",\"滚动条、堆叠上下文z-index、transform、opacity 等样式都会或多或少的影响分层结果，也可以通过will-change属性更大程度的影响分层结果。\",\".box{ /**/ 告诉浏览器需要分层 will-change: transform } \"]},\"260\":{\"h\":\"5.绘制\",\"t\":[\"为每一分层生成如何绘制的指令。渲染主线程的工作到此结束，剩下的交给其他线程完成。\"]},\"261\":{\"h\":\"6.分块 - Tiling\",\"t\":[\"分块会将每一层分成多个小的区域，分块工作会启动多个线程同时进行。\"]},\"262\":{\"h\":\"7.光栅化 - raster\",\"t\":[\"光删化，是将每个分块变成位图，优先处理靠近视口区域，此过程会用到GPU加速。\"]},\"263\":{\"h\":\"8.画 - Draw\",\"t\":[\"合成线程计算出每个位图在屏幕的位置，会生成一个个的指引信息（包含位图的位置，旋转，变形等信息），最后交于GPU进程，让GPU完成最终成像工作。\"]},\"264\":{\"h\":\"什么是回流（ reflow）？\",\"t\":[\"回流的本质是 重新计算布局(layout)树。当布局树发生改变之后，可能影响到分层及绘制等其他渲染阶段。\",\"未了避免布局树反复计算，浏览器会在js代码全部完成后再统一计算。所以，改动属性造成的回流reflow是异步的。这样也会造成js获取布局属性时，可能获取到的不是最新的布局信息。\"]},\"265\":{\"h\":\"什么是重绘（repaint）？\",\"t\":[\"重绘的本质是重新根据分层信息计算绘制指令。\",\"当改变可见样式后，就需要重新计算，触发重绘。\",\"由于元素的布局信息属于可见样式，所以回流一定会引起重绘！！！\"]},\"266\":{\"h\":\"为什么 transform效率那么高？\",\"t\":[\"1.因为transform 既不影响布局也不影响绘制，影响了渲染阶段的第八步画draw的阶段。\",\"2.画的阶段在合成线程中，transform 变化不会影响渲染主线程。同样的渲染主线程再卡顿也不会影响到 transform 属性的变化。\"]},\"267\":{\"h\":\"\"},\"268\":{\"h\":\"1.XSS 攻击 及防护\"},\"269\":{\"h\":\"什么是xss?\",\"t\":[\"Cross-Site Scripting（跨站脚本攻击）简称 XSS，是一种代码注入攻击。攻击者通过在目标网站上注入恶意脚本，使之在用户的浏览器上运行。利用这些恶意脚本，攻击者可获取用户的敏感信息如 Cookie、SessionID 等，进而危害数据安全。\"]},\"270\":{\"h\":\"XSS常见注入方法\",\"t\":[\"在 HTML 中内嵌的文本中，恶意内容以 script 标签形成注入。\",\"在内联的 JavaScript 中，拼接的数据突破了原本的限制（字符串，变量，方法名等）。\",\"在标签属性中，恶意内容包含引号，从而突破属性值的限制，注入其他属性或者标签。\",\"在标签的 href、src 等属性中，包含 javascript: (伪协议)等可执行代码。\",\"在 onload、onerror、onclick 等事件中，注入不受控制代码。\",\"在 style 属性和标签中，包含类似 background-image:url(\\\"javascript:...\\\"); 的代码（新版本浏览器已经可以防范）。\",\"在 style 属性和标签中，包含类似 expression(...) 的 CSS 表达式代码（新版本浏览器已经可以防范）。\"]},\"271\":{\"h\":\"XSS攻击类型\",\"t\":[\"根据攻击的来源，分为存储型、反射型和 DOM 型三种\",\"存储型 ，恶意代码被注入到数据库中，打开网站时从数据库携带出，并被浏览器执行，从而实现恶意代码窃取用户数据攻击网站的效果。\",\"反射性 ，恶意代码被隐藏在url路径中，当用户打开链接时，代码被拼接到浏览器中执行，最后实现攻击网站窃取数据。\",\"DOM型，恶意代码隐藏在前端、url、后端数据库，当DOM被解析执行时暴漏出来，开始攻击。\"]},\"272\":{\"h\":\"防御XSS方法\",\"t\":[\"输入框录入时数据校验，限制长度\",\"输入框录入时过滤JavaScript 特殊字段\",\"过滤不必要的事件：onclick,onerror,onfoucs\",\"对渲染内容编码转义\",\"将cookie设置成 http only\"]},\"273\":{\"h\":\"2.CSRF 跨站请求伪造\"},\"274\":{\"h\":\"什么是CSRF?\",\"t\":[\"跨站请求伪造（英语：Cross-site request forgery），也被称为 one-click attack 或者 session riding，通常缩写为 CSRF 或者 XSRF， 是一种挟制用户在当前已登录的 Web 应用程序上执行非本意的操作的攻击方法。\",\"要完成一次CSRF攻击，受害者必须依次完成两个步骤：\",\"1.登录受信任网站A，并在本地生成Cookie。\",\"2.在不登出A的情况下，访问危险网站B。\"]},\"275\":{\"h\":\"CSRF常见攻击类型\",\"t\":[\"Get请求，数据被拼在get请求的url中\",\"Post请求，页面会自动提交表单，将数据提交到危险网站\",\"链接，通过夸张的关键字，点击之后将数据携带到危险网站\"]},\"276\":{\"h\":\"防御CSRF方法\",\"t\":[\"新增验证码，提交数据需要输入验证码\",\"请求来源限制\",\"token，验证token是最佳CSRF的防御方案\"]},\"277\":{\"h\":\"\"},\"278\":{\"h\":\"跨域\"},\"279\":{\"h\":\"1.什么是跨域？\",\"t\":[\"跨域就是页面发送ajax或者加载资源文件时，由于受到浏览器同源策略（协议、域名、端口三者相同）的限制，导致加载失败的报错。\"]},\"280\":{\"h\":\"2.解决方案\",\"t\":[\"所有跨域的解决方案都需服务端配合\",\"跨域是浏览器限制，服务端和服务端之间通信是不受浏览器同源策略限制\"]},\"281\":{\"h\":\"JSONP方案\",\"t\":[\"jsonp的原理就是利用了script标签不受浏览器同源策略的限制，img和link标签也是不受浏览器同源策略限制。\",\"服务端（把数据和回调函数名称拼接成函数调用的方式返回）：\",\"server.on('request', (req, res) => { // 获取客户端传来的回调函数名称 const {callback} = url.parse(req.url, true).query // 把数据和回调函数名称拼接成函数调用的方式返回 const result = `${callback}(${JSON.stringify(data)})` res.end(result) }) \",\"客户端\",\"<script> function getJsonpData(data) { console.log(\\\"获取数据成功\\\") console.log(data) //{name:'tom'} } var btn = document.getElementById(\\\"btn\\\"); btn.onclick = function () { //创建script标签 var script = document.createElement(\\\"script\\\"); script.src = 'http://localhost:3000/user?callback=getJsonpData'; document.body.appendChild(script); script.onload = function () { document.body.removeChild(script) } } </script> \",\"优点：轻量，兼容性高。\",\"缺点：JSONP 仅支持get方法！接口异常无法监听！容易注入恶意脚本。\"]},\"282\":{\"h\":\"CORS方案\",\"t\":[\"CORS是跨域资源共享，是一种基于HTTP头的机制。\",\"服务端设置 Access-Control-Allow-Origin 指定域名或者 * 。\",\"const authOrigin = ['http://127.0.0.1:5500'] // 监听http请求 server.on('request', (req, res) => { const user = { // 模拟返回数据 id: 1, name: 'zhangsan', age: 12 } const origin = req.headers.origin if(authOrigin.includes(origin)) { // 添加响应头，实现cors // res.setHeader('Access-Control-Allow-Origin', '*') // 允许所有的地址跨域访问 res.setHeader('Access-Control-Allow-Origin', origin) // 只有白名单中的地址才可以跨域访问 } res.end(JSON.stringify(user)) }) \"]},\"283\":{\"h\":\"代理服务方法\",\"t\":[\"nginx反向代理\",\"server { listen 8080; // 客户端端口号相同 location /api { proxy_pass http://127.0.0.1:444; // 服务端地址 add_header Access-Control-Allow-Origin *; } } \"]},\"284\":{\"h\":\"代理转发\",\"t\":[\"vue的server使用的代理转发解决跨域。在 vue.config.js\",\"module.exports = { devServer: { proxy: 'http://localhost:4000' , // 接口跨域地址 } } \"]},\"285\":{\"h\":\"postMessage方案\",\"t\":[\"父页面：\",\" <iframe src=\\\"http://localhost:3000\\\" onload=\\\"load()\\\"></iframe> <script> window.addEventListener('message', ev => { const {data, origin, source} = ev if(origin !== 'http://localhost:3000') return console.log('接收iframe页面发送的消息：', data) }) function load() { iframe.contentWindow.postMessage(\\\"给iframe页面发送的消息\\\", \\\"http://localhost:3000\\\"); } </script> \",\"iframe嵌套页面\",\" window.addEventListener('message', ev => { const {data, origin, source} = ev if(origin !== 'http://127.0.0.1:5500') return console.log('接收到index页面发送的消息:', data) source.postMessage('给index页面发送的消息', origin) }) \"]},\"286\":{\"h\":\"websocket方案\",\"t\":[\"服务端:\",\"// WebSocket服务 const WebSocket = require(\\\"ws\\\"); const server = new WebSocket.Server({ port: 8081 }); server.on(\\\"connection\\\", function(socket) { // 监听客户端发送的消息 socket.on(\\\"message\\\", function(data) { console.log('clent data:', data) socket.send(data); // 向客户端发送消息 }); }); \",\"客户端：\",\"const ws = new WebSocket('ws://localhost:8081') // 当连接打开时，向服务器发送一些数据 ws.onopen = () => { ws.send('Hi!') // 使用send方法向服务端发送内容 } // 监听服务端发送的数据 ws.onmessage = e => { console.log('Server: ' + e.data); }; \"]},\"287\":{\"h\":\"\"},\"288\":{\"h\":\"1.深拷贝需要注意哪些问题？\",\"t\":[\"常见的深拷贝方法：assign，递归全赋值，JSON.parse(JSON.stringify())，函数返回等\",\"Object.assign 只能深拷贝顶层属性和值，深层属性也是浅拷贝\",\"...扩展运算符 同上只能深拷贝顶层属性和方法！\",\"JSON 实现深拷贝，不足：构造函数/function，属性值为undefined、function、symbol的也会丢失，Set和Map变成数组，Data变成String等\",\"函数返回，返回对象在函数内定义属于深拷贝，在函数外，算浅拷贝。\",\"递归循环是最完美的，但是需要考虑全数据类型，如：Map/Set。另外递归时\",\"深拷贝时除了要考虑特殊值处理，还要考虑递归时不能影响性能，或者没有终止条件造成内存泄漏。\",\"还要考虑深拷贝不能复制原型链上的方法和属性，还有getter和setter也是无法复制的。\"]},\"289\":{\"h\":\"\",\"t\":[\"D: - 切换盘d\",\"cd \\\\ 前往根目录\",\"cd - 进入到指定目录\",\"dir - 查看路径下的文件信息\",\"cls 清理cmd\",\"sudo -i 切换权限用户 sudo ps -ef|grep xfs 查看应用进程\",\"top 查看进程及内存使用情况 top k -输pid 按enter 杀掉进程 htop 查看进程及内存使用情况\",\"sudo skill pid          杀掉进程\\nmkdir files             新建文件夹、文件\\nrmdir files             删除文件夹、文件\"]},\"290\":{\"h\":\"\",\"t\":[\"查看镜像源 npm config get registry\",\"查看config信息 npm config list\",\"切换镜像源 npm config set registry http://registry.cnpmjs.org npm config set registry http://registry.npm.taobao.org npm config set registry https://registry.npmmirror.com\",\"清理缓存 npm cache clean --force\",\"取消ssl验证 npm config set strict-ssl false\",\"npm异常可以切换至cnpm或yarn\\nnpm install cnpm -g\"]},\"291\":{\"h\":\"\",\"t\":[\"在tsconfig.json文件中，可以指定不同的选项来告诉编译器如何编译当前项目。tsconfig.json文件所处位置是TypeScript项目的根目录。\",\"// 常用配置 { /* tsconfig.json是ts编译器的配置文件，ts可以根据它的信息来对待吗进行编译 可以再tsconfig中写注释 include : 用来指定哪些文件需要被编译 exclude : 用来指定哪些文件不需要被编译 ：默认node_module extends : 用来指定继承的配置文件 files : 用来指定被编译的文件列表，只有编译少量文件才使用 compilerOptions : 编译器的选项是配置文件中非常重要也是非常复杂的配置选项 */ \\\"include\\\":[ // ** : 任意目录 ， * : 任意文件 \\\"./src/**/*\\\" ], \\\"exclude\\\": [ \\\"./src/hello/**/*\\\" ], // \\\"extends\\\": \\\"./configs/base\\\", \\\"files\\\": [ \\\"1.ts\\\", // \\\"2.ts\\\" ], \\\"compilerOptions\\\": { // 用来指定 ES 版本 ESNext : 最新版。 'ES3', 'ES5', 'ES6'/'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ESNext' \\\"target\\\": \\\"ES2020\\\", // 指定要使用模块化的规范 : 'None', 'CommonJS', 'AMD', 'System', 'UMD', 'ES6'/'ES2015', 'ES2020' or 'ESNext' \\\"module\\\": \\\"ESNext\\\", // 用来指定项目中要使用的库 'ES5', 'ES6', 'ES2015', 'ES7', 'ES2016', 'ES2017', 'ES2018', 'ESNext', 'DOM', 'DOM.Iterable', // 'WebWorker', 'ScriptHost', 'ES2015.Core', 'ES2015.Collection', 'ES2015.Generator', 'ES2015.Iterable', // 'ES2015.Promise', 'ES2015.Proxy', 'ES2015.Reflect', 'ES2015.Symbol', 'ES2015.Symbol.WellKnown', // 'ES2016.Array.Include', 'ES2017.object', 'ES2017.Intl', 'ES2017.SharedMemory', 'ES2017.String', // 'ES2017.TypedArrays', 'ES2018.Intl', 'ES2018.Promise', 'ES2018.RegExp', 'ESNext.AsyncIterable', // 'ESNext.Array', 'ESNext.Intl', 'ESNext.Symbol' // 运行在浏览器中不用设置，运行在node或其他中才需要设置 // \\\"lib\\\":[]， // 用来指定编译后文件的存放位置 \\\"outDir\\\":\\\"./dist\\\", // 将代码合并为一个文件,设置之后所有的全局作用域中的代码会合并到同一个文件中 但是只能在 'amd' and 'system' 中才能使用 // \\\"outFile\\\": \\\"./dist/app.js\\\", // 是否对js文件进行编译，默认false \\\"allowJs\\\": false, // 是否检查js代码是否符合语法规范，默认false \\\"checkJs\\\": false, // 是否移除注释，默认false \\\"removeComments\\\":false, // 是否不生成编译后文件，默认false \\\"noEmit\\\": false, // 当有错误时是否生成文件，默认false \\\"noEmitOnError\\\": false, // 是否生成sourceMap，默认false 这个文件里保存的，是转换后代码的位置，和对应的转换前的位置。有了它，出错的时候，通过断点工具可以直接显示原始代码，而不是转换后的代码。 \\\"sourceMap\\\":false, // 所有的严格检查的总开关，默认false \\\"strict\\\": false, // 编译后的文件是否开启严格模式，默认false \\\"alwaysStrict\\\": false, // 不允许隐式的any，默认false(允许) \\\"noImplicitAny\\\": false, // 不允许隐式的this，默认false(允许) \\\"noImplicitThis\\\": false, // 是否严格的检查空值，默认false 检查有可能为null的地方 \\\"strictNullChecks\\\": true, // 是否严格检查bind、call和apply的参数列表，默认false 检查是否有多余参数 \\\"strictBindCallApply\\\":false, // 是否严格检查函数的类型， \\\"strictFunctionTypes\\\":false, // 是否严格检查属性是否初始化，默认false \\\"strictPropertyInitialization\\\":false, // 是否检查switch语句包含正确的break，默认false \\\"noFallthroughCasesInSwitch\\\":false, // 检查函数没有隐式的返回值，默认false \\\"noImplicitReturns\\\":false, // 是否检查检查未使用的局部变量，默认false \\\"noUnusedLocals\\\":false, // 是否检查未使用的参数，默认false \\\"noUnusedParameters\\\":false, // 是否检查不可达代码报错，默认false true，忽略不可达代码 false，不可达代码将引起错误 \\\"allowUnreachableCode\\\":false } } \"]},\"292\":{\"h\":\"\"},\"293\":{\"h\":\"1.安装Node\",\"t\":[\"下载地址：https://nodejs.org/dist/\"]},\"294\":{\"h\":\"2.安装TypeScript\",\"t\":[\"npm i -g typescript\"]},\"295\":{\"h\":\"3.创建ts格式文件\"},\"296\":{\"h\":\"4.使用tsc编译文件\",\"t\":[\"tsc main.ts\"]},\"297\":{\"h\":\"TS优势（相比与JS）\",\"t\":[\"1.便于发现问题，节省修复异常的时间；\",\"2.增强代码提示，增强开发体验；\",\"3.提高了代码的可维护性，重构更加简单；\",\"4.完全支持JS最新语法。\"]},\"298\":{\"h\":\"\"},\"299\":{\"h\":\"对象-类Class\",\"t\":[\"万物皆对象，面向对象编程。\"]},\"300\":{\"h\":\"定义类\",\"t\":[\"对象主要包含 属性和方法。\",\"class 类名{ 属性名: 类型; constructor(参数:类型){ this.属性名 = 参数; } 方法名(){ ... } } \",\"例如实现一个人的对象。\",\"class Person{ // 实例化属性 name: string; age: number; // 静态属性 static sex：string = '男' // 构造函数 constructor(name: string){ this.name = name; } sayHi(){ } // 静态方法 static say(){ } } \",\"静态属性和静态方法必须使用类获取，不能通过实例化方式获取。静态属性不可修改。\",\"Person.sex; Person.say(); \",\"默认实例化属性和实例化方法需要先实例化，再调用。\",\"let per = new Person(); per.name; per.sayHi(); \"]},\"301\":{\"h\":\"构造函数constructor\",\"t\":[\"每个对象都有一个constructor构造函数，用于初始化对象。\"]},\"302\":{\"h\":\"this指向\",\"t\":[\"类里面的this指向当前实例化的对象。\"]},\"303\":{\"h\":\"类继承\",\"t\":[\"类的继承通过关键字：extends 实现继承。子类继承父类的所有属性和方法。子类方法与父类方法同名，子类方法会重写改方法（子类方法生效）。\",\"class 子类 extends 父类{ } class Male extends Person{ sex:string; constructor(sex: string){ super(); this.sex = sex; } } \",\"子类通过关键字：super 继承父类的所有属性，同事可以在子类构造函数里新增自己的属性。\"]},\"304\":{\"h\":\"抽象类与抽象方法\",\"t\":[\"抽象类和抽象方法通过关键字：abstract 实现。在类前面就是抽象类，抽象方法必须在抽象类里面。\",\"abstract class Person{ name:string; constructor(name: string){ this.name = name; } // 抽象方法 abstract say(){ } } \"]},\"305\":{\"h\":\"TypeScript基本类型\",\"t\":[\"TypeScript 通过 TypeScript 编译器或 Babel 转译为 JavaScript 代码。Typescript 是JavaScript的超集，是微软对js的升级，弥补了js弱类型的缺陷，因此TypeScript是一种强类型语言。\",\"类型注解，为变量添加类型约束！ 变量后跟 “: 类型” ，这种写法就叫 类型注解。\"]},\"306\":{\"h\":\"1.数值类型 number\",\"t\":[\"与JavaScript一样，所有的数字在TypeScript中都是浮点数。\",\"let num: number = 5; \"]},\"307\":{\"h\":\"2.布尔类型 boolean\",\"t\":[\"boolean类型只可能是两种值。它们分别是true和false。\",\"let bool: boolean = true; \"]},\"308\":{\"h\":\"3.字符串类型 string\",\"t\":[\"使用字符串是将它们放在单引号或者双引号中间。\",\"let str: string = \\\"Hello, TypeScript\\\"; \"]},\"309\":{\"h\":\"4.数组类型 array\",\"t\":[\"array类型的声明有两种写法。\",\"第一种在数组元素的类型后面跟着[];\",\"第二种是使用泛型数组类型Array。\",\"let arr: number[] = [1, 2, 3]; let arr1: string[]; let arr2: array<number> = [1, 2, 3]; let arr3: array<any> = [1, \\\"123\\\", 3]; // 任意类型数组 let arr4: (number | string)[] = [1,'222']; // 联合类型数组，需要用括号包起来 \",\"类型别名，当一个复杂类型重复使用时，就可以使用类型别名简化类型。类型别名需要用 type 关键字声明。\",\"type ass = (number | string)[]; let arr4:ass = ['aaa',3,'1'] \"]},\"310\":{\"h\":\"5.元组 tuple\",\"t\":[\"元组tuple就是固定长度的数组，明确指定数组包含多少个元素，比如坐标元素。\",\"let job:[string,string] = ['送外卖','送快递'] \"]},\"311\":{\"h\":\"6.空类型 void\",\"t\":[\"void空类型一般用于函数无返回结果的场景。\",\"function fn(a:number):void{ console.log(a) } \"]},\"312\":{\"h\":\"7.枚举类型 enum\",\"t\":[\"enum枚举类型用于一些常量集合。数字枚举成员的值默认是从0自增的，当然也可以自定义值。字符串枚举每个对象都必须有值，数字枚举可以部分有值。\",\"enum Direction { Up = 0, Down = 1, Left = 2, Right = 3 }; // 枚举属性值未赋值会从0递增 enum Direction { Up,//0 Down,//1 Left,//2 Right//3 }; // 字符串枚举 enum Direction { Up = 'up', Down = 'down', Left = 'left', Right = 'right' }; \"]},\"313\":{\"h\":\"8.任意类型 any\",\"t\":[\"any类型可以表示任意JavaScript值。不推荐使用，原因是在赋值和使用任意类型变量时会导致相关的变量均污染成任意类型，失去了TS类型语言的意义。\"]},\"314\":{\"h\":\"9.未知类型 unknown\",\"t\":[\"unknown未知类型和any任意类型很接近，但是使用未知类型会类型报错，这时解决办法就是使用类型断言。\"]},\"315\":{\"h\":\"TS的类型断言有2种写法：关键字as || <类型>值\",\"t\":[\"let e:unknown = 10; let s:string = \\\"hi\\\"; // s = e 直接赋值就会类型报错 s = e as string s = <string>e // 不断言就无法获取到a元素的类型，获取href就会报不存在 let alink = document.getElementByID('link') as HTMLAnchorElement // HTMLAnchorElement 可以通过控制台 console.dir 打印改元素 \",\"TS除了类型断言，还有非空断言：! -当使用非空断言的时候就是表示告诉编辑器该变量不会为空。\",\"let msg = 'hi' + name!; \"]},\"316\":{\"h\":\"10.永远不会有返回值类型 never\",\"t\":[\"never一般用于报错函数的返回值类型：永远不会有返回值类型\",\"function fn():never{ throw new Error('失败了！') } \"]},\"317\":{\"h\":\"11.字面量类型\",\"t\":[\"字面量类型直接理解为限制的值，可与联合类型使用\",\"let sex:'男' | '女' | '未知' // sex 的值只能是男，女，和未知，其他都会报错 sex = '女' \"]},\"318\":{\"h\":\"12.对象 object\",\"t\":[\"TS里面定义对象通过 {} 进行对象属性类型声明，多个属性可以用 “；”或“，”分割。可选属性通过 ’?‘ 表示；多个未知任意属性通过 [xx:string]:any 表示。\",\"也可以用type先描述一个对象结构，再使用这个结构类型限制对象。\",\"let obj1:{name:string; age?:number} = {name:'张三'} let obj2:{name:string, age?:number, [propname:string]:any} = {name:'张三',sex:1}; // type 描述一个对象的类型 type mytype ={ name:string, age:number } let obj3:mytype = { name:'张三', age:40 } \"]},\"319\":{\"h\":\"13.函数表达式类型\",\"t\":[\"TS也可以在定义函数之前先声明函数参数及返回值的类型\",\"let add:(a:number,b:number)=>number; add = function(a,b):number{ return a+b; } \"]},\"320\":{\"h\":\"14.接口类型 interface\",\"t\":[\"接口用来定义一个类结构，用来定义类应该包含哪些属性和方法。同时，接口也可以当初类声明去使用，同type描述对象属性类型结构。也是简化重复使用的对象类型。\",\"接口只定义对象的结构，不关心实际值。\",\"用interface定义同一个接口名，里面属性不同，等效与属性组合在一起（合并）。\",\"interface myobj{ name:string, age:number } interface myobj{ sex:number } let obj:myobj = { name:\\\"aaa\\\", age:100, sex:1 } // 接口便于对象结构的复用 let obj2:myobj; \",\"接口第二个用法就是：继承接口，实现一个类。需要使用 interface 和 implements 关键字。接口就是用来 定义类的规范。\",\"// 声明类结构及方法 interface myint{ name:string; say():void; } class myclass implements myint{ name:string; // 需要增加一个构造函数定义初始属性 constructor(name:string){ this.name = name; } say(){ console.log(this.name) } } \",\"**接口继承，可以用extends 关键字实现接口继承。**两个接口有公共的属性就可以把公共的作为父类接口，其他属性通过子类继承实现。\",\"interface Mypoint{ x:number; y:number; } // 继承父类接口的所有属性，也可以新增子类自己的属性 interface Point3D extends Mypoint{ z:number } \"]},\"321\":{\"h\":\"15.泛型 Generics\",\"t\":[\"泛型是值在定义函数，接口或类时，遇到参数或返回值类型不明确时，需要用泛型表示参数和返回值的类型。\",\"定义时不确定类型，在函数调用执行时，才明确数据类型。\",\"泛型类型：由于是未知，因此可以用任意变量代替。一般常用T,K,U等作为泛型函数、类、接口的类型。\",\"泛型函数：\",\"function fn<T>(a:T):T{ return a } let res1 = fn(10) // 返回结果是数字 let res2 = fn('hi') // 返回值是字符串 \",\"泛型函数的也参数值可以是多个：\",\"function fn<T,K>(a:T,b:K):T{ console.log(b); return a; } let res1 = fn(10,'hi ts') // 返回结果是数字 \",\"泛型接口：\",\"interface FnInter{ <T>(arg: T): T } let Fn: FnInter = fn // 或 interface FnInter<T>{ (arg:T): T } let Fn: FnInter<string> = fn \",\"泛型约束：通过接口+extends 实现泛型约束。\",\"// 约束参数必须是带length属性的 interface Inter{ length:number } function fn<T extends Inter>(a:T): number{ return a.length; } \",\"泛型类：类里面使用泛型。\",\"class myclass<T>{ name:T; constructor(name:T){ this.name = name } } // 泛型由传进去的参数决定 const m = new myclass('hi') \"]},\"322\":{\"h\":\"16.联合类型\",\"t\":[\"联合类型表示变量的类型不固定，是多种类型。用 “|” 分割多个类型。\",\"let a: string | number | string[]; \"]},\"323\":{\"h\":\"17.交叉类型\",\"t\":[\"交叉类型也是多个类型，使用 “&” 分割多个类型，表示同时满足所有类型特性。\",\"type Person = { name: string; age: number; }; type Employee = { companyId: string; role: string; }; type PersonEmployee = Person & Employee; const personEmployee: PersonEmployee = { name: \\\"Alice\\\", age: 30, companyId: \\\"ABC123\\\", role: \\\"Manager\\\" }; \"]},\"324\":{\"h\":\"18.工具类型\",\"t\":[\"TS内置很多工具类型，例如：\",\"- Parameters<Type> 获取函数的参数类型，将每个参数类型放进一个元组中。 - ReturnType<Type> 获取函数的返回值类型。 - Awaited<Type> 获取`Promise`中的结果类型 - NonNullable<Type> 去除类型中的null,和undefined - Omit<Type, Keys> 移除一些属性, 用Omit<T, K>从T中取出除去K的，返回剩余的属性类型。 - Pick<Type, Keys> 从Type中选取一系列的属性, 用Pick, 构成新的类型。 - Required<Type> 将类型的所有属性变为必选。 - Partial<Type> 将类型的所有属性变为可选。 - Readonly<Type> 将数组或对象的属性值转换为只读的。 - Record<Type> 将对象所有属性都转换成指定类型。 \"]},\"325\":{\"h\":\"\"},\"326\":{\"h\":\"1.什么是TypeScript？\",\"t\":[\"TypeScript是微软公司为了弥补JS存在类型缺陷开源的一门语言。\",\"它是JS的超集，支持最新的所有JS。\",\"TS不能直接在各端运行，需要通过ts编译器或babel转成js后才能被浏览器等环境运行。\",\"TS扩展了类，静态类型，接口，模块等功能。\",\"特性：\",\"跨平台：TypeScript 编译器可以安装在任何操作系统上，包括 Windows、macOS 和 Linux。\",\"ES6 特性：TypeScript 包含计划中的 ECMAScript 2015 (ES6) 的大部分特性，例如箭头函数。\",\"面向对象的语言：TypeScript 提供所有标准的 OOP 功能，如类、接口和模块。\",\"静态类型检查：TypeScript 使用静态类型并帮助在编译时进行类型检查。因此，你可以在编写代码时发现编译时错误，而无需运行脚本。\",\"可选的静态类型：如果你习惯了 JavaScript 的动态类型，TypeScript 还允许可选的静态类型。\"]},\"327\":{\"h\":\"2.类型声明和类型推断的区别？\",\"t\":[\"类型声明时显式为变量指定类型；\",\"类型推断是变量不指定类型，直接赋值，TypeScript自动推断变量类型。\"]},\"328\":{\"h\":\"3.什么是联合类型和交叉类型？\",\"t\":[\"联合类型是，多种类型满足一种。\",\"交叉类型是，满足多种类型的所有特性。\"]},\"329\":{\"h\":\"4.枚举（enum）是什么，它的优势，应用案例。枚举和常量枚举的区别？\",\"t\":[\"枚举是将变量所有能出现的值都一一枚举出来，一般常见的有数字枚举（数字枚举的值默认从0自增，可以修改，可以为空），字符串枚举（字符串枚举值不能为空）。\",\"优势：增强代码可读性。\",\"枚举和常量枚举的区别：枚举会被编译成对象，常量枚举编译后会被删除。\"]},\"330\":{\"h\":\"5.什么是类型断言？\",\"t\":[\"类型断言，告诉编辑器变量类型按照某个类型执行。避免类型不一致报错的场景出现。\"]},\"331\":{\"h\":\"6.TypeScript中的可选参数和默认参数是什么？\",\"t\":[\"TS的可选参数用：a?:string ，默认参数不在？号。\"]},\"332\":{\"h\":\"7.什么是类型守卫，有什么作用？\",\"t\":[\"类型守卫是一种判断变量类型是否满足条件的检测方式。\",\"类型守卫作用：让代码更安全和可靠。\",\"interface Car { brand: string; model: string; } function isCar(obj: any): obj is Car { return obj && typeof obj.brand === 'string' && typeof obj.model === 'string'; } function printCarInfo(obj: any) { if (isCar(obj)) { console.log(`Brand: ${obj.brand}, Model: ${obj.model}`); } else { console.log('Invalid car object.'); } } \"]},\"333\":{\"h\":\"8. const和readonly的区别?\",\"t\":[\"const声明的常量一旦赋值就不能被修改。\",\"readonly 关键字用于标记类属性只读，不能被修改。只能在声明时和构造函数内赋值。\"]},\"334\":{\"h\":\"9.TypeScript数据类型都有哪些？\",\"t\":[\"基本类型：\",\"number: 表示数字，包括整数和浮点数。\",\"string: 表示文本字符串。\",\"boolean: 表示布尔值，即true或false。\",\"null、undefined: 分别表示null和undefined。\",\"symbol: 表示唯一的、不可变的值。\",\"复合类型：\",\"array: 表示数组，可以使用number[]或Array<number>来声明其中元素的类型。\",\"tuple: 表示元组，用于表示固定数量和类型的数组。\",\"enum: 表示枚举类型，用于定义具名常量集合。\",\"对象类型：\",\"object: 表示非原始类型，即除number、string、boolean、symbol、null或undefined之外的类型。\",\"interface: 用于描述对象的结构，并且可以重复使用。\",\"函数类型：\",\"function: 表示函数类型。\",\"void: 表示函数没有返回值。\",\"any: 表示任意类型。\",\"高级类型：\",\"union types: 表示一个值可以是几种类型之一。\",\"intersection types: 表示一个值同时拥有多种类型的特性。\"]},\"335\":{\"h\":\"10.interface可以给Function/Array/Class（Indexable)做声明吗？\",\"t\":[\"TypeScript中的interface可以被用来声明函数、数组和具有索引签名的类，从而帮助我们定义和限定这些数据结构的形式和行为。\",\"// 1.声明函数 interface MyFunc { (x: number, y: number): number; } let myAdd: MyFunc = function(x, y) { return x + y; }; // 2.声明数组 interface StringArray { [index: number]: string; } let myArray: StringArray; myArray = [\\\"Bob\\\", \\\"Alice\\\"]; // 3.声明类 interface StringDictionary { [index: string]: string; } let myDict: StringDictionary = { \\\"name\\\": \\\"John\\\", \\\"age\\\": \\\"30\\\" }; \"]},\"336\":{\"h\":\"11.TypeScript 中 any 类型的作用是什么，滥用会有什么后果?\",\"t\":[\"any类型用来不确定变量的类型的时候使用，但是不推荐使用any类型，因为它有以下副作用：\",\"存在潜在的运行类型错误（编译不报错）\",\"代码可读性下降\",\"污染后续使用该变量的函数和上下文\"]},\"337\":{\"h\":\"12.说说TypeScript中命名空间与模块的理解和区别？\",\"t\":[\"命名空间，主要解决命名冲突的问题（重名问题），有了命名空间后，命名都在各自的空间内互不干扰。\",\"模块，和ES的模块一样。每个模块都是单独的文件和上下文，抛出对象和函数需要用export，引入需要使用import。\"]},\"338\":{\"h\":\"13. TypeScript支持的类访问修饰符有哪些？\",\"t\":[\"公共（public）-默认，类的所有成员，其子类以及该类的实例都可以访问。\",\"受保护（protected），该类及其子类的所有成员都可以访问它们。 但是该类的实例无法访问。\",\"私有（private），只有类的成员可以访问它们。\",\"只读（readonly)，属性值只能读取，不能修改。\"]},\"339\":{\"h\":\"14.TypeScript中never和void的区别？\",\"t\":[\"void 表示没有任何类型（可以被赋值为 null 和 undefined）。\",\"never 表示一个不包含值的类型，即表示永远不存在的值。\"]},\"340\":{\"h\":\"15.TypeScript中any和unknown有什么区别？\",\"t\":[\"any 类型的值执行操作之前，我们不必进行任何检查。\",\"unknown 类型会更加严格：在对 unknown 类型的值执行大多数操作之前，我们必须进行某种形式的检查。\"]},\"341\":{\"h\":\"16.TypeScript中的泛型是什么？\",\"t\":[\"泛型是值在定义函数，接口或类时，遇到参数或返回值类型不明确时，需要用泛型表示参数和返回值的类型。\"]},\"342\":{\"h\":\"17.type和interface区别和相同点？\",\"t\":[\"相同点：\",\"都可以给对象指定类型，都是为了简化复用对象结构。\",\"都允许互相扩展extends\",\"不同点：\",\"接口interface 只能为对象指定类型；类型别名type 可以为任意类型指定别名。\",\"接口之间可以继承，类型别名不可以。\",\"同名接口属性可以合并，类型别名type不能。\",\"写法不同。接口写法类似定义类；类型别名类似 定义对象需要用到=号。\",\"接口写法：\",\"interface IPer { name:string, age:number } \",\"类型别名写法：\",\"type IPer = { name:string, age:number } \"]},\"343\":{\"h\":\"18.Omit 类型有什么作用？\",\"t\":[\"Omit 以一个类型为基础支持删除某些属性，然后返回一个新类型。\",\"interface Todo { title: string description: string completed: boolean createdAt: number } type TodoPreview = Omit<Todo, \\\"description\\\"> \"]},\"344\":{\"h\":\"19.TypeScript中什么是装饰器？\",\"t\":[\"装饰器（Decorator）是TypeScript提供的一个高级语法，它类似于一种特殊类型的声明，可以附加到类声明，方法，访问符，属性或参数上。\",\"装饰器主要以函数的形式出现，运行在编译阶段，以实现对所修饰对象的行为的修改或增强。\",\"装饰器分为：\",\"类装饰器： 可以观察、修改、或替换类定义。它在提供元编程能力方面特别有用，能够实现诸如依赖注入等高级概念。\",\"方法装饰器： 可以监视、修改或者替换类的方法定义。这对于日志记录、性能监控、以及某些应用程序级别的业务逻辑（如记录操作者信息）有巨大的用处。\",\"属性装饰器： 可以监视、修改或替换类的属性定义。比如实现类型检查，或者实现相关get/set方法等。\",\"参数装饰器： 对类方法中的参数进行注解。\",\"访问器装饰器: 用于装饰类的访问器，即类中的get与set方法。\",\"装饰器用法：\",\"谁使用就放到谁前面：@装饰器\",\"// 定义装饰器 function LogClass(target: Function) { console.log(`New instance of ${target.name} class created.`); } // 定义装饰器 function LogMethod(target: any, propertyKey: string, descriptor: PropertyDescriptor) { console.log(`Method ${propertyKey} of class ${target.constructor.name} is called.`); } // 使用装饰器修饰类 @LogClass class MyClass { constructor() { console.log(\\\"This is MyClass constructor\\\"); } // 使用装饰器修饰方法 @LogMethod myMethod() { console.log(\\\"This is myMethod\\\"); } } \",\"开启装饰器：\",\"在 tsconfig.json 文件中，有一个叫 experimentalDecorators 的属性，你需要将其设置为 true 。没有正式发布，需要手动开启装饰器。\",\"{ \\\"compilerOptions\\\": { \\\"target\\\": \\\"es5\\\", \\\"experimentalDecorators\\\": true, \\\"emitDecoratorMetadata\\\": true } } \"]},\"345\":{\"h\":\"20.TypeScript中什么是函数重载？\",\"t\":[\"函数重载是指函数根据传入不同的参数，返回不同类型的数据。\",\"同一个函数名，根据参数及返回值的不同声明多次，但是实现只有最下面的一次。调用的时候编辑器会提示该函数的多种用法。\",\"注意：JS不能实现函数重载，同名函数后面的会覆盖前面的函数。\",\"// 上边是声明 function add (arg1: string, arg2: string): string function add (arg1: number, arg2: number): number // 因为我们在下边有具体函数的实现，所以这里并不需要添加 declare 关键字 // 下边是实现 function add (arg1: string | number, arg2: string | number) { // 在实现上我们要注意严格判断两个参数的类型是否相等，而不能简单的写一个 arg1 + arg2 if (typeof arg1 === 'string' && typeof arg2 === 'string') { return arg1 + arg2 } else if (typeof arg1 === 'number' && typeof arg2 === 'number') { return arg1 + arg2 } } \"]},\"346\":{\"h\":\"21.keyof和typeof关键字的作用？\",\"t\":[\"keyof 索引类型查询操作符： 获取索引类型的属性名，最后构成联合类型。\",\"typeof： 获取一个变量或对象的类型。\"]},\"347\":{\"h\":\"22.declare有什么用？\",\"t\":[\"declare是用来定义全局变量、全局函数、全局命名空间。\",\"declare global为全局对象window增加新的属性。\",\"declare global { interface Window { csrf: string; } } \",\"在TS项目中引入第三方库，或图片，css等文件，如果找不到就需要用到 declare定义成全局变量。\"]},\"348\":{\"h\":\"\"},\"349\":{\"h\":\"Axios 请求\",\"t\":[\"Axios 是用于请求接口数据的一种异步解决方案。是一个Promise网络请求库。\",\"安装\",\"npm install axios \",\"引入\",\"import axios from 'axios'; \",\"用法\",\"axios(url[, config]) \",\"请求方法\"]},\"350\":{\"h\":\"axios.get(url[, config]) 查询\"},\"351\":{\"h\":\"axios.post(url[, data[, config]]) 新增\"},\"352\":{\"h\":\"axios.put(url[, data[, config]]) 修改\"},\"353\":{\"h\":\"axios.delete(url[, config]) 删除\"},\"354\":{\"h\":\"axios.request(config) 通用请求\",\"t\":[\"其他方法\",\"axios.head(url[, config])\",\"axios.options(url[, config])\",\"axios.patch(url[, data[, config]])\",\"axios.postForm(url[, data[, config]])\",\"axios.putForm(url[, data[, config]])\",\"axios.patchForm(url[, data[, config]])\",\"Get请求\",\"// 传参方式1 axios.get('/user?ID=12345') .then(function (response) { // handle success console.log(response); }) .catch(function (error) { // 捕获错误 error console.log(error); }) .finally(function () { // always executed }); // 传参2 axios.get('/user', { params: { ID: 12345 } }) .then(function (response) { console.log(response); }) .catch(function (error) { console.log(error); }) .finally(function () { // always executed }); \",\"另外一种写法：\",\"axios({ method: 'get', url: '/user?ID=12345', }) .then(function (response) { response.data.pipe(fs.createWriteStream('ada_lovelace.jpg')) }); \"]},\"355\":{\"h\":\"axios设置默认值\",\"t\":[\"默认值每个请求都会生效。\",\"axios.defaults.baseURL = 'https://api.example.com'; axios.defaults.headers.common['Authorization'] = AUTH_TOKEN; axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded'; \",\"另外一种写法\",\"// 创建实例时配置默认值 const instance = axios.create({ baseURL: 'https://api.example.com' }); // 创建实例后修改默认值 instance.defaults.headers.common['Authorization'] = AUTH_TOKEN; \"]},\"356\":{\"h\":\"axios请求体\",\"t\":[\"请求体只有url是必填的，其他属性可选。\",\"{ // `url` 是用于请求的服务器 URL url: '/user', // `method` 是创建请求时使用的方法 method: 'get', // 默认值 // `baseURL` 将自动加在 `url` 前面，除非 `url` 是一个绝对 URL。 // 它可以通过设置一个 `baseURL` 便于为 axios 实例的方法传递相对 URL baseURL: 'https://some-domain.com/api/', // `transformRequest` 允许在向服务器发送前，修改请求数据 // 它只能用于 'PUT', 'POST' 和 'PATCH' 这几个请求方法 // 数组中最后一个函数必须返回一个字符串， 一个Buffer实例，ArrayBuffer，FormData，或 Stream // 你可以修改请求头。 transformRequest: [function (data, headers) { // 对发送的 data 进行任意转换处理 return data; }], // `transformResponse` 在传递给 then/catch 前，允许修改响应数据 transformResponse: [function (data) { // 对接收的 data 进行任意转换处理 return data; }], // 自定义请求头 headers: {'X-Requested-With': 'XMLHttpRequest'}, // `params` 是与请求一起发送的 URL 参数 // 必须是一个简单对象或 URLSearchParams 对象 params: { ID: 12345 }, // `paramsSerializer`是可选方法，主要用于序列化`params` // (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/) paramsSerializer: function (params) { return Qs.stringify(params, {arrayFormat: 'brackets'}) }, // `data` 是作为请求体被发送的数据 // 仅适用 'PUT', 'POST', 'DELETE 和 'PATCH' 请求方法 // 在没有设置 `transformRequest` 时，则必须是以下类型之一: // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams // - 浏览器专属: FormData, File, Blob // - Node 专属: Stream, Buffer data: { firstName: 'Fred' }, // 发送请求体数据的可选语法 // 请求方式 post // 只有 value 会被发送，key 则不会 data: 'Country=Brasil&City=Belo Horizonte', // `timeout` 指定请求超时的毫秒数。 // 如果请求时间超过 `timeout` 的值，则请求会被中断 timeout: 1000, // 默认值是 `0` (永不超时) // `withCredentials` 表示跨域请求时是否需要使用凭证 withCredentials: false, // default // `adapter` 允许自定义处理请求，这使测试更加容易。 // 返回一个 promise 并提供一个有效的响应 （参见 lib/adapters/README.md）。 adapter: function (config) { /* ... */ }, // `auth` HTTP Basic Auth auth: { username: 'janedoe', password: 's00pers3cret' }, // `responseType` 表示浏览器将要响应的数据类型 // 选项包括: 'arraybuffer', 'document', 'json', 'text', 'stream' // 浏览器专属：'blob' responseType: 'json', // 默认值 // `responseEncoding` 表示用于解码响应的编码 (Node.js 专属) // 注意：忽略 `responseType` 的值为 'stream'，或者是客户端请求 // Note: Ignored for `responseType` of 'stream' or client-side requests responseEncoding: 'utf8', // 默认值 // `xsrfCookieName` 是 xsrf token 的值，被用作 cookie 的名称 xsrfCookieName: 'XSRF-TOKEN', // 默认值 // `xsrfHeaderName` 是带有 xsrf token 值的http 请求头名称 xsrfHeaderName: 'X-XSRF-TOKEN', // 默认值 // `onUploadProgress` 允许为上传处理进度事件 // 浏览器专属 onUploadProgress: function (progressEvent) { // 处理原生进度事件 }, // `onDownloadProgress` 允许为下载处理进度事件 // 浏览器专属 onDownloadProgress: function (progressEvent) { // 处理原生进度事件 }, // `maxContentLength` 定义了node.js中允许的HTTP响应内容的最大字节数 maxContentLength: 2000, // `maxBodyLength`（仅Node）定义允许的http请求内容的最大字节数 maxBodyLength: 2000, // `validateStatus` 定义了对于给定的 HTTP状态码是 resolve 还是 reject promise。 // 如果 `validateStatus` 返回 `true` (或者设置为 `null` 或 `undefined`)， // 则promise 将会 resolved，否则是 rejected。 validateStatus: function (status) { return status >= 200 && status < 300; // 默认值 }, // `maxRedirects` 定义了在node.js中要遵循的最大重定向数。 // 如果设置为0，则不会进行重定向 maxRedirects: 5, // 默认值 // `socketPath` 定义了在node.js中使用的UNIX套接字。 // e.g. '/var/run/docker.sock' 发送请求到 docker 守护进程。 // 只能指定 `socketPath` 或 `proxy` 。 // 若都指定，这使用 `socketPath` 。 socketPath: null, // default // `httpAgent` and `httpsAgent` define a custom agent to be used when performing http // and https requests, respectively, in node.js. This allows options to be added like // `keepAlive` that are not enabled by default. httpAgent: new http.Agent({ keepAlive: true }), httpsAgent: new https.Agent({ keepAlive: true }), // `proxy` 定义了代理服务器的主机名，端口和协议。 // 您可以使用常规的`http_proxy` 和 `https_proxy` 环境变量。 // 使用 `false` 可以禁用代理功能，同时环境变量也会被忽略。 // `auth`表示应使用HTTP Basic auth连接到代理，并且提供凭据。 // 这将设置一个 `Proxy-Authorization` 请求头，它会覆盖 `headers` 中已存在的自定义 `Proxy-Authorization` 请求头。 // 如果代理服务器使用 HTTPS，则必须设置 protocol 为`https` proxy: { protocol: 'https', host: '127.0.0.1', port: 9000, auth: { username: 'mikeymike', password: 'rapunz3l' } }, // see https://axios-http.com/zh/docs/cancellation cancelToken: new CancelToken(function (cancel) { }), // `decompress` indicates whether or not the response body should be decompressed // automatically. If set to `true` will also remove the 'content-encoding' header // from the responses objects of all decompressed responses // - Node only (XHR cannot turn off decompression) decompress: true // 默认值 } \"]},\"357\":{\"h\":\"axios响应体\",\"t\":[\"{ // `data` 由服务器提供的响应 data: {}, // `status` 来自服务器响应的 HTTP 状态码 status: 200, // `statusText` 来自服务器响应的 HTTP 状态信息 statusText: 'OK', // `headers` 是服务器响应头 // 所有的 header 名称都是小写，而且可以使用方括号语法访问 // 例如: `response.headers['content-type']` headers: {}, // `config` 是 `axios` 请求的配置信息 config: {}, // `request` 是生成此响应的请求 // 在node.js中它是最后一个ClientRequest实例 (in redirects)， // 在浏览器中则是 XMLHttpRequest 实例 request: {} } \"]},\"358\":{\"h\":\"axios同步请求\",\"t\":[\"同步请求多个接口，使用axios.all，多个返回结果可以通过axios.spread接收。\",\"axios.all([ axios.get('/user'), axios.get('/option'), axios.get('/name'), ]).then(res=>{ // res 是所有结果集合-数组类型 res[0] // 第1个接口返回结果 res[1] // 第2个接口返回结果 res[2] // 第3个接口返回结果 }) 使用spread获取 axios.all([ axios.get('/user'), axios.get('/option'), axios.get('/name'), ]).then( axios.spread( (res1,res2,res3) =>{ // 就得到了对应接口的结果 }) ) \"]},\"359\":{\"h\":\"axios拦截器\",\"t\":[\"axios通过使用interceptors.request.use 方法对接口请求进行拦截。通过 interceptors.response.use 方法对返回结果进行拦截\",\"// 添加请求拦截器 axios.interceptors.request.use(function (config) { // 在发送请求之前做些什么 return config; }, function (error) { // 对请求错误做些什么 return Promise.reject(error); }); // 添加响应拦截器 axios.interceptors.response.use(function (response) { // 2xx 范围内的状态码都会触发该函数。 // 对响应数据做点什么 return response; }, function (error) { // 超出 2xx 范围的状态码都会触发该函数。 // 对响应错误做点什么 return Promise.reject(error); }); \"]},\"360\":{\"h\":\"\"},\"361\":{\"h\":\"Pinia状态管理\"},\"362\":{\"h\":\"1.为什么使用pinia管理vue数据状态？\",\"t\":[\"Pinia 是 Vue 的专属状态管理库，它允许你跨组件或页面共享状态。\",\"搭配TS，支持TS类型推断，写法比vuex简单\",\"全局状态管理，修改数据比vuex更加方便灵活\",\"支持插件，例如：状态持久化插件\"]},\"363\":{\"h\":\"2.如何安装使用步骤\",\"t\":[\"安装\",\"npm install pinia \",\"入口文件 引入\",\"import { createPinia } from 'pinia' import { createApp } from 'vue' const app = createApp(App) // 创建使用pinia const pinia = createPinia() app.use(pinia) \",\"定义一个 useAlertsStore.js\",\"import { defineStore } from 'pinia' // 你可以对 `defineStore()` 的返回值进行任意命名，但最好使用 store 的名字，同时以 `use` 开头且以 `Store` 结尾。(比如 `useUserStore`，`useCartStore`，`useProductStore`) // 第一个参数是你的应用中 Store 的唯一 ID。 export const useAlertsStore = defineStore('alerts', { // 其他配置... }) \",\"页面使用时需要引入 useAlertsStore.js\",\"import { useAlertsStore } from 'useAlertsStore.js'; const ageStore = useAlertsStore(); \"]},\"364\":{\"h\":\"3.pinia状态管理store的核心组成？\",\"t\":[\"store是pinia数据存储的实体，它有三个核心内容：state、getter、action。\",\"state 类似vue2的data，返回一个包含所有初始数据状态的对象\",\"getter 类似vue2的计算属性，依赖state数据变化而改变，getter的this指向当前getter对象，无法获取state数据，因此getter的第一个参数默认就是state。\",\"action 类似vue2的methods，里面存放state的方法，action的this指向当前store存储对象。\",\"store创建有2种写法：默认写法和setup语法糖写法。\",\"默认写法，通过选项式将state,getter,action传入。\",\"// 定义option store规范： useID = defineStore(ID,store) export const useCounterStore = defineStore('counter', { state: () => ({ count: 0 }), getters: { double: (state) => state.count * 2, }, actions: { increment() { this.count++ }, }, }) \",\"setup语法糖写法，该写法会将 state => data , getters => computed , actions => methods 。\",\"export const useCounterStore = defineStore('counter', () => { const count = ref(0) const doubleCount = computed(() => count.value * 2) function increment() { count.value++ } return { count, doubleCount, increment } }) \"]},\"365\":{\"h\":\"4.如何获取响应式的store数据？\",\"t\":[\"我们直接通过解构得到的store与响应式数据断开了，响应式数据需要通过 storeToRefs() 转后再解构。对于getter和action不需要转。\",\"<script setup> import { storeToRefs } from 'pinia' const store = useCounterStore() // `name` 和 `doubleCount` 是响应式的 ref // 同时通过插件添加的属性也会被提取为 ref // 并且会跳过所有的 action 或非响应式 (不是 ref 或 reactive) 的属性 const { name, doubleCount } = storeToRefs(store) // 作为 action 的 increment 可以直接解构 const { increment } = store </script> \",\"如何使用state数据？\",\"import { defineStore } from 'pinia' const useStore = defineStore('storeId', { // 为了完整类型推理，推荐使用箭头函数 state: () => { return { // 所有这些属性都将自动推断出它们的类型 count: 0, isAdmin: true, } }, }) \",\"访问state\",\"const store = useStore(); store.count++ \",\"重置state - 恢复默认值\",\"const store = useStore(); store.$reset() \",\"变更state - $patch\",\"store.$patch({ count: store.count + 1, name: 'DIO', }) \"]},\"366\":{\"h\":\"\"},\"367\":{\"h\":\"Router路由\",\"t\":[\"前端路由一共有三种模式：hash，history，memory ，常用2种为： hash模式 和 history模式。\",\"安装 vue-router\",\"npm install vue-router@4 \"]},\"368\":{\"h\":\"router-link\",\"t\":[\"在vue项目里使用 router-link 替换a标签。\"]},\"369\":{\"h\":\"router-view\",\"t\":[\"router-view 用来显示动态切换的组件内容。显示的是对应router-link 的路由组件。\",\"// 1. 定义路由组件. // 也可以从其他文件导入 const Home = { template: '<div>Home</div>' } const About = { template: '<div>About</div>' } // 2. 定义一些路由 // 每个路由都需要映射到一个组件。 // 我们后面再讨论嵌套路由。 const routes = [ { path: '/', component: Home }, { path: '/about', component: About }, ] // 3. 创建路由实例并传递 `routes` 配置 // 你可以在这里输入更多的配置，但我们在这里 // 暂时保持简单 const router = VueRouter.createRouter({ // 4. 内部提供了 history 模式的实现。为了简单起见，我们在这里使用 hash 模式。 createWebHashHistory / createWebHistory history: VueRouter.createWebHashHistory(), routes, // `routes: routes` 的缩写 }) // 5. 创建并挂载根实例 const app = Vue.createApp({}) //确保 _use_ 路由实例使 //整个应用支持路由。 app.use(router) app.mount('#app') // 现在，应用已经启动了！ \"]},\"370\":{\"h\":\"指定路由模式\",\"t\":[\"vue3 使用 history 属性替代了vue2的mode属性，可选值如下：\",\"createWebHashHistory hash模式\",\"createWebHistory history模式\",\"creatMemoryHistory memory模式\",\"const router = VueRouter.createRouter({ history：createWebHashHistory }) \",\"vue2路由指定模式\",\"mode的可选值如下：hash，history，abstract（node环境强制开启模式）\",\"const router = new VueRouter({ mode: 'history', routes: [...] }) \"]},\"371\":{\"h\":\"带参数的动态路由\",\"t\":[\"动态参数写法 /:参数名\",\"{ path: '/users/:id', component: User }, \",\"获取动态参数\",\"$route.params.id \",\"路由可选参数 ？\",\"{ path: '/users/:userId?' }, \"]},\"372\":{\"h\":\"路由跳转 router.push\",\"t\":[\"点击 <router-link> 时，内部会调用这个方法，所以点击 <router-link :to=\\\"...\\\"> 相当于调用 router.push(...) 。\",\"声明式\",\"编程式\",\"<router-link :to=\\\"...\\\">\",\"router.push(...)\",\"// 字符串路径 router.push('/users/eduardo') // 带有路径的对象 router.push({ path: '/users/eduardo' }) // 命名的路由，并加上参数，让路由建立 url router.push({ name: 'user', params: { username: 'eduardo' } }) // 带查询参数，结果是 /register?plan=private router.push({ path: '/register', query: { plan: 'private' } }) // 带 hash，结果是 /about#team router.push({ path: '/about', hash: '#team' }) \"]},\"373\":{\"h\":\"路由替换 router.replace\",\"t\":[\"声明式\",\"编程式\",\"<router-link :to=\\\"...\\\" replace>\",\"router.replace(...)\",\"router.push({ path: '/home', replace: true }) // 相当于 router.replace({ path: '/home' }) \"]},\"374\":{\"h\":\"路由历史 router.go\",\"t\":[\"// 向前移动一条记录，与 router.forward() 相同 router.go(1) // 返回一条记录，与 router.back() 相同 router.go(-1) // 前进 3 条记录 router.go(3) // 如果没有那么多记录，静默失败 router.go(-100) router.go(100) \"]},\"375\":{\"h\":\"路由命名\",\"t\":[\"所有的路由命名都必须唯一。\",\"路由配置：\",\"const routes = [ { path: '/user/:username', name: 'user', component: User, }, ] \",\"跳转路由配置方式一：\",\"<router-link :to=\\\"{ name: 'user', params: { username: 'erina' }}\\\"> User </router-link> \",\"跳转路由配置方式二：\",\"router.push({ name: 'user', params: { username: 'erina' } }) \"]},\"376\":{\"h\":\"路由重定向 redirect\",\"t\":[\"router通过redirect重定向路由。\",\"const routes = [{ path: '/home', redirect: '/' }] const routes = [{ path: '/home', redirect: { name: 'homepage' } }] \"]},\"377\":{\"h\":\"路由别名 alias\",\"t\":[\"const routes = [{ path: '/', component: Homepage, alias: '/home' }] \"]},\"378\":{\"h\":\"路由守卫\"},\"379\":{\"h\":\"全局前置守卫 beforeEach，通过next方法放行。\",\"t\":[\"const router = createRouter({ ... }) router.beforeEach((to, from,next) => { // ... // 返回 false 以取消导航 return false }) \"]},\"380\":{\"h\":\"全局解析守卫 beforeResolve\",\"t\":[\"router.beforeResolve(async to => { if (to.meta.requiresCamera) { try { await askForCameraPermission() } catch (error) { if (error instanceof NotAllowedError) { // ... 处理错误，然后取消导航 return false } else { // 意料之外的错误，取消导航并把错误传给全局处理器 throw error } } } }) \"]},\"381\":{\"h\":\"全局后置守卫 afterEach\",\"t\":[\"router.afterEach((to, from, failure) => { if (!failure) sendToAnalytics(to.fullPath) }) \"]},\"382\":{\"h\":\"独享路由守卫\",\"t\":[\"直接在路由配置上定义 beforeEnter。\",\"const routes = [ { path: '/users/:id', component: UserDetails, beforeEnter: (to, from) => { // reject the navigation return false }, }, ] \"]},\"383\":{\"h\":\"组件守卫\",\"t\":[\"beforeRouteEnter\",\"beforeRouteUpdate\",\"beforeRouteLeave\",\"const UserDetails = { template: `...`, beforeRouteEnter(to, from) { // 在渲染该组件的对应路由被验证前调用 // 不能获取组件实例 `this` ！ // 因为当守卫执行时，组件实例还没被创建！ }, beforeRouteUpdate(to, from) { // 在当前路由改变，但是该组件被复用时调用 // 举例来说，对于一个带有动态参数的路径 `/users/:id`，在 `/users/1` 和 `/users/2` 之间跳转的时候， // 由于会渲染同样的 `UserDetails` 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。 // 因为在这种情况发生的时候，组件已经挂载好了，导航守卫可以访问组件实例 `this` }, beforeRouteLeave(to, from) { // 在导航离开渲染该组件的对应路由时调用 // 与 `beforeRouteUpdate` 一样，它可以访问组件实例 `this` }, } \"]},\"384\":{\"h\":\"路由懒加载\",\"t\":[\"// 将 // import UserDetails from './views/UserDetails.vue' // 替换成 const UserDetails = () => import('./views/UserDetails.vue') const router = createRouter({ // ... routes: [ { path: '/users/:id', component: UserDetails } // 或在路由定义里直接使用它 { path: '/users/:id', component: () => import('./views/UserDetails.vue') }, ], }) \"]},\"385\":{\"h\":\"404配置\",\"t\":[\"routes: [{ path: '/:pathMatch(.*)*', // vue2 path: '/:catchAll(.*)', // vue3 name: 'NotFound', component: NotFound }] \"]},\"386\":{\"h\":\"路由鉴权拦截\",\"t\":[\"对于需要登录查看的路由，或者一定等级能查看的鉴权功能，需要用到路由全局前置守卫和路由元信息meta。\",\"1.设置路由元信息：requiresAuth\",\"{ path: '/', name: 'home', component: HomeView, // 只有经过身份验证的用户才能创建帖子 meta: { requiresAuth: true } }, \",\"2.路由前置守卫\",\"// 路由鉴权守卫 router.beforeEach((to, from, next) => { if (to.meta.requiresAuth) { const flag = localStorage.getItem('loginSatus') // 登录标识假时就跳转到登录页面 if (flag === 'true') { next() } else { next('/login') } } else { next() } }) \"]},\"387\":{\"h\":\"\"},\"388\":{\"h\":\"VUE源码学习\"},\"389\":{\"h\":\"1.vue模板解析实现\",\"t\":[\"通过遍历根节点的子元素（childNodes） ，再根据节点类型nodeType 过滤模板变量符号{{}}，然后通过textContent替换对应文本的数据，元素类型递归编译模板。\",\"<div id=\\\"app\\\"> <h1>{{str}}</h1> <p>{{ss}}</p> </div> <script> class Que{ constructor(options){ // 跟元素 this.$el = document.querySelector(options.el) this.$data = options.data // 模板编译 this.complie(this.$el) } complie(nodes){ nodes.childNodes.forEach(item=>{ if(item.nodeType == 1 && item.childNodes.length>0){ // 节点类型为元素，且子元素存在开始递归 this.complie(item) } // 文本节点 if(item.nodeType == 3){ // 匹配模板正则 let reg = /\\\\{\\\\{(.*?)\\\\}\\\\}/g // 原始内容 let texts = item.textContent item.textContent = texts.replace(reg,(match,vmkey)=>{ // 去除模板变量的 左右空格 vmkey = vmkey.trim() return this.$data[vmkey] }) } }) } } // 实例化对象 new Que({ el:\\\"#app\\\", data:{ str:\\\"123\\\", ss:\\\"4354\\\" } }) </script> \"]},\"390\":{\"h\":\"2.vue生命周期实现\",\"t\":[\"vue页面每次都会执行前4个生命周期：beforeCreate， created， beforeMount，mounted。\",\"实现方式：在构造函数中，调用函数钩子并改变this指向到构造函数。data数据在created前解构，el元素和模板编译在mount之前完成。\",\"class Que{ constructor(options){ if(typeof options['beforeCreate'] == 'function'){ options['beforeCreate'].bind(this)() } // create 时能获取到data数据 this.$data = options.data if(typeof options['created'] == 'function'){ options['created'].bind(this)() } if(typeof options['beforeMount'] == 'function'){ options['beforeMount'].bind(this)() } // mounted阶段可以获取到跟元素 this.$el = document.querySelector(options.el) // 模板编译 this.complie(this.$el) if(typeof options['mounted'] == 'function'){ options['mounted'].bind(this)() } } complie(nodes){...} } // 实例化对象 new Que({ el:\\\"#app\\\", data:{ str:\\\"123\\\", }, beforeCreate(){ console.log(\\\"beforeCreate:\\\",this.$el,this.$data) }, created(){ console.log(\\\"created:\\\",this.$el,this.$data) }, beforeMount(){ console.log(\\\"beforeMount:\\\",this.$el,this.$data) }, mounted(){ console.log(\\\"mounted:\\\",this.$el,this.$data) } }) \"]},\"391\":{\"h\":\"3.vue事件添加实现\",\"t\":[\"vue的methods事件调用是在编译模板时获取到事件名，并创建事件监听函数放置到事件队列里面。\",\"通过 hasAttribute 判断元素节点是否有v-click的指令，有就用 getAttribute 获取到事件名，然后再创建监听click点击事件addEventListener，调用options里面methods里面的这个方法，并把点击事件的event事件传入到方法中。\",\"<div id=\\\"app\\\"> <h1>{{str}}</h1> <button @click=\\\"btnEvent\\\">点击</button> </div> <script> class Que{ constructor(options){ ... // 将参数备份 this.$options = options // 模板编译 this.complie(this.$el) if(typeof options['mounted'] == 'function'){ options['mounted'].bind(this)() } } complie(nodes){ nodes.childNodes.forEach(item=>{ if(item.nodeType == 1){ // 判断元素是否绑定有 @事件 if(item.hasAttribute('@click')){ // 获取事件名称 let vmEventKey = item.getAttribute('@click') vmEventKey = vmEventKey.trim() item.addEventListener('click',(event)=>{ this.eventfn = this.$options.methods[vmEventKey].bind(this) this.eventfn(event) }) } // 递归 if(item.childNodes.length>0){ this.complie(item) } } // 文本节点 if(item.nodeType == 3){ ... } }) } } new Que({ el:\\\"#app\\\", data:{ str:\\\"123\\\", ss:\\\"4354\\\" }, methods:{ btnEvent(e){ console.error(e) } } }) </script> \"]},\"392\":{\"h\":\"4.vue数据劫持\",\"t\":[\"vue2的数据劫持是通过 Object.defineProperty(this,key,{get,set}) 实现，复杂数据结构通过递归循环遍历进行数据劫持。\",\"proxyData(){ for(let key in this.$data){ Object.defineProperty(this,key,{ get(){ return this.$data[key] }, set(val){ this.$data[key] = val return ture } }) } } \",\"vue3的数据劫持是通过 new Proxy(target,handler)\"]},\"393\":{\"h\":\"5.vue双向绑定\",\"t\":[\"vue的双向绑定数据是在数据编译阶段对每一个模板变量创建一个监听器，当数据代理完成之后，执行一个数据监听的方法：如果发现数据触发了set，就去调用监听器的更新方法更改页面的数据。\",\" <div id=\\\"app\\\"> <h1>{{str}}</h1> <button @click=\\\"btnEvent\\\">点击</button> </div> <script> // 监听器 class Watch{ constructor(vm, key,node,attr){ // 对象 this.vm = vm // 属性名称 this.key = key // 节点 this.node = node // 改变文本内容的字符串 this.attr = attr } // 执行更新页面数据 updata(){ this.node[this.attr] = this.vm[this.key] } } class Que{ constructor(options){ this.$options = options this.$watchEvent = {} if(typeof options['beforeCreate'] == 'function'){ options['beforeCreate'].bind(this)() } // create 时能获取到data数据 this.$data = options.data // 数据代理 this.proxyData() // 数据监听 this.observe() if(typeof options['created'] == 'function'){ options['created'].bind(this)() } if(typeof options['beforeMount'] == 'function'){ options['beforeMount'].bind(this)() } // mounted阶段可以获取到跟元素 this.$el = document.querySelector(options.el) // 模板编译 this.complie(this.$el) if(typeof options['mounted'] == 'function'){ options['mounted'].bind(this)() } } // 代理函数 proxyData(){ ... } // 数据监听 observe(){ for(let key in this.$data){ let value = this.$data[key] let that = this // 数据劫持，发现数据更改就同步更新页面数据 Object.defineProperty(this.$data,key,{ get(){ return value }, set(val){ value = val if (that.$watchEvent[key]) { that.$watchEvent[key].forEach((item,index)=>{ item.updata() }) } } }) } } // 模板编译 complie(nodes){ nodes.childNodes.forEach(item=>{ if(item.nodeType == 1){ // 判断元素是否绑定有 @事件 if(item.hasAttribute('@click')){ // 获取事件名称 let vmEventKey = item.getAttribute('@click') vmEventKey = vmEventKey.trim() item.addEventListener('click',(event)=>{ this.eventfn = this.$options.methods[vmEventKey].bind(this) this.eventfn(event) }) } // 递归 if(item.childNodes.length>0){ this.complie(item) } } // 文本节点 if(item.nodeType == 3){ // 匹配模板正则 let reg = /\\\\{\\\\{(.*?)\\\\}\\\\}/g // 原始内容 let texts = item.textContent item.textContent = texts.replace(reg,(match,vmkey)=>{ // 去除模板变量的 左右空格 vmkey = vmkey.trim() let watch = new Watch(this,vmkey,item,'textContent') if(this.hasOwnProperty(vmkey)){ if(this.$watchEvent[vmkey]){ this.$watchEvent[vmkey].push(watch) }else{ // 第二次清空再push this.$watchEvent[vmkey] = [] this.$watchEvent[vmkey].push(watch) } } return this.$data[vmkey] }) } }) } } new Que({ el:\\\"#app\\\", data:{ str:\\\"123\\\", }, methods:{ btnEvent(){ this.str = \\\"122223\\\" } } }) </script> \"]},\"394\":{\"h\":\"6.vue表单数据的响应式\",\"t\":[\"v-model的数据响应式是在编译阶段捕获到 v-model 指令，从而创建了一个input的监听事件，并放置到了事件循环中。当页面输入框的值发生变化，就会更新修改data里面的数据。data的数据改变又触发了模板变量的监听器的updata方法，最后更新页面DOM元素的值。\",\"... // 模板编译 complie(nodes){ nodes.childNodes.forEach(item=>{ if(item.nodeType == 1){ // 判断元素是否绑定有 @事件 if(item.hasAttribute('@click')){ // 获取事件名称 let vmEventKey = item.getAttribute('@click') vmEventKey = vmEventKey.trim() item.addEventListener('click',(event)=>{ this.eventfn = this.$options.methods[vmEventKey].bind(this) this.eventfn(event) }) } // model双向绑定 if(item.hasAttribute('v-model')){ // 获取事件名称 let vmKey = item.getAttribute('v-model') vmKey = vmKey.trim() // 获取输入的值 if(this.hasOwnProperty(vmKey)){ item.value = this[vmKey] } // 创建事件监听 item.addEventListener('input',(event)=>{ this[vmKey] = item.value }) } // 递归 if(item.childNodes.length>0){ this.complie(item) } ... \",\"数据响应式：数据的变化会自动运行数据相关的函数，从而触发页面数据的更新。\"]},\"395\":{\"h\":\"\"},\"396\":{\"h\":\"1.VUE3环境安装篇\"},\"397\":{\"h\":\"安装vue脚手架 vue-cli\",\"t\":[\"npm install -g @vue/cli \",\"查看脚手架版本\",\"vue -V \",\"创建项目\",\"vue create 项目名 \",\"选择手动安装（同时选上 vuex,router,TS)，自动安装vue3只有vue3，不同选其他的vuex，路由等。\",\"目录说明\",\"node_modules 依赖模块\",\"public 公共静态资源\",\"src 源代码文件\",\"package.json 项目配置依赖\",\"安装axios出现异常报错：“code ERESOLVE，ERESOLVE could not resolve”。解决办法，安装命令后面加 -legacy-peer-deps，如下：\",\"npm install axios -legacy-peer-deps \"]},\"398\":{\"h\":\"\",\"t\":[\"在vue.config.js里面新增devServe属性，如下：\",\"const { defineConfig } = require('@vue/cli-service') module.exports = defineConfig({ transpileDependencies: true, devServer: { port: '8088', host: 'localhost' } }) \"]},\"399\":{\"h\":\"\",\"t\":[\"npm install element-plus --save -legacy-peer-deps \",\"使用elementplus\",\"在main.ts 加入\",\"import ElementPlus from 'element-plus' import 'element-plus/dist/index.css' createApp(App).use(ElementPlus).mount('#app') \"]},\"400\":{\"h\":\"\",\"t\":[\"npm install @element-plus/icons-vue --save -legacy-peer-deps \",\"在main.ts 加入\",\"import * as ElementPlusIconsVue from '@element-plus/icons-vue' const app = createApp(App) // 一定要在创建之后遍历添加组件 for (const [key, component] of Object.entries(ElementPlusIconsVue)) { app.component(key, component) } app.use(ElementPlus).use(store).use(router).mount('#app') \"]},\"401\":{\"h\":\"动态引入图片问题\",\"t\":[\"动态require引入图片时报错,vue3不能使用require引入图片，可以改成 import，如下：\",\"import Logo from '../assets/images/logo.png' \",\"并在shims-vue.d.ts 文件设置全局可识别\",\"// 解决TS不识别的文件类型 declare module '*.vue' { import type { DefineComponent } from 'vue' const component: DefineComponent<{}, {}, any> export default component } // 声明图片文件可使用 declare module '*.png' declare module '*.jpg' declare module '*.gif' \"]},\"402\":{\"h\":\"2.实战问题篇\"},\"403\":{\"h\":\"计算属性获取动态参数\",\"t\":[\"设置动态路由\",\"{ path: '/content/:name', name: 'content', component: () => import('../views/ContentView.vue') }, \",\"获取动态参数\",\"import { computed, defineComponent } from 'vue' import { useRoute } from 'vue-router' export default defineComponent({ name: 'ContentView', setup () { const route = useRoute() // 计算属性 箭头函数 const title = computed(() => { return route.params.name }) return { title } } }) \"]},\"404\":{\"h\":\"设置404路由\",\"t\":[\"{ path: '/:pathMatch(.*)*', name: 'NotFound', component: () => import('../views/NotFind.vue') } \"]},\"405\":{\"h\":\"异常报错：\",\"t\":[\"error Extra semicolon semi\",\"解决办法：检测是否有 分号存在\\\";\\\"\"]},\"406\":{\"h\":\"搜索框之外点击关闭\",\"t\":[\"修饰符 @click.prevent.self ，点击输入框不关闭，点击背景关闭\",\"<div class=\\\"LayerBoom\\\" @click.prevent.self=\\\"closeEvent\\\"> <div class=\\\"layer-center\\\" v-if=\\\"position == 'center'\\\"> <slot name=\\\"center\\\"></slot> </div> </div> \"]},\"407\":{\"h\":\"VUE3添加debugger无效，如何解决？\",\"t\":[\"vue.config.js 配置：\",\"configureWebpack: { // 加入如下配置 devtool: 'source-map' } \",\"如何代码加了debugger报错，在rules规则里面新增：\",\"\\\"rules\\\": { \\\"no-debugger\\\": \\\"off\\\" } \"]},\"408\":{\"h\":\"vue3嵌套路由配置之后，页面显示空白？\",\"t\":[\"嵌套路由的父页面需要使用 router-view组件进行渲染子路由的内容。\",\" <router-view></router-view> \"]},\"409\":{\"h\":\"vue3自定义ref 实现防抖\",\"t\":[\"import { customRef } from \\\"vue\\\"; export function debounceRef(value, duration = 1000) { let timer: number return customRef((track, trigger) => { return{ get() { // 收集依赖 track() return value }, set(values) { // 派发更新 clearTimeout(timer) timer = setTimeout(() => { trigger() value = values }, duration) } } }) } \"]},\"410\":{\"h\":\"\"},\"411\":{\"h\":\"组合式 Composition API\",\"t\":[\"组合式：使用导入的 API 函数来描述组件逻辑。Vue3 组合式 API 通常会与 <script setup>搭配使用。用函数的方式，让代码更加优雅，并且相关代码有序的组织在一起。\",\"<script setup> import { ref, onMounted } from 'vue' // 响应式状态 const count = ref(0) // 用来修改状态、触发更新的函数 function increment() { count.value++ } // 生命周期钩子 onMounted(() => { console.log(`The initial count is ${count.value}.`) }) </script> <template> <button @click=\\\"increment\\\">Count is: {{ count }}</button> </template> \",\"选项式（Options API）：通过对象的多个选项（对象属性和方法：data,methods...）描述组件（vue2x)。缺陷：修改一个功能或新增一个功能，分别需要在data,methods,computed等方法里新增代码，不便于维护和复用。\"]},\"412\":{\"h\":\"组合式函数\",\"t\":[\"“组合式函数”(Composables) 是一个利用 Vue 的组合式 API 来封装和复用有状态逻辑的函数。\",\"与组合式组件类似，组合式组件是在组件内使用vue组合式方法和属性。而组合式函数是将vue3的方法和属性直接定义到函数内部，便于多组件复用。\",\"组合式api写法：\",\"<script setup> import { ref, onMounted, onUnmounted } from 'vue' const x = ref(0) const y = ref(0) function update(event) { x.value = event.pageX y.value = event.pageY } onMounted(() => window.addEventListener('mousemove', update)) onUnmounted(() => window.removeEventListener('mousemove', update)) </script> <template>Mouse position is at: {{ x }}, {{ y }}</template> \",\"组合式函数写法：\",\"// mouse.js import { ref, onMounted, onUnmounted } from 'vue' // 按照惯例，组合式函数名以“use”开头 export function useMouse() { // 被组合式函数封装和管理的状态 const x = ref(0) const y = ref(0) // 组合式函数可以随时更改其状态。 function update(event) { x.value = event.pageX y.value = event.pageY } // 一个组合式函数也可以挂靠在所属组件的生命周期上 // 来启动和卸载副作用 onMounted(() => window.addEventListener('mousemove', update)) onUnmounted(() => window.removeEventListener('mousemove', update)) // 通过返回值暴露所管理的状态 return { x, y } } \",\"组合式函数 有点类似vue2里面的混入 mixins ，但是弥补了混入的以下缺点：\",\"不清楚数据来源\",\"命名空间冲突\",\"跨mixin数据耦合\"]},\"413\":{\"h\":\"基础知识\"},\"414\":{\"h\":\"1.模板语法\"},\"415\":{\"h\":\"文本插值\",\"t\":[\"跟vue2一样，都使用 2个花括号{{ }} 表示HTML模板。\",\"<span>Message: {{ msg }}</span> \"]},\"416\":{\"h\":\"HTML代码\",\"t\":[\"跟vue2一样，都使用v-html插入一段html代码。\",\"<div> <span v-html=\\\"rawHtml\\\"></span></div> <!-- 或 --> <div> <span :html=\\\"rawHtml\\\"></span></div> \"]},\"417\":{\"h\":\"属性绑定\",\"t\":[\"跟vue2一样，都使用v-指定绑定自定义属性。在绑定自定义属性时，绑定的值如果是null,undefined时，属性会自动移除。\",\"<div v-bind:id=\\\"dynamicId\\\"></div> <!-- 或 --> <div :id=\\\"dynamicId\\\"></div> \",\"布尔类型，同样的绑定值为假时，属性将会被忽略。\",\"<button :disabled=\\\"isButtonDisabled\\\">Button</button> \",\"多个属性绑定\",\"const objectOfAttrs = { id: 'container', class: 'wrapper' } <div v-bind=\\\"objectOfAttrs\\\"></div> \",\"动态参数\",\"<a v-bind:[attributeName]=\\\"url\\\"> ... </a> <!-- 简写 --> <a :[attributeName]=\\\"url\\\"> ... </a> \"]},\"418\":{\"h\":\"2.class和style\"},\"419\":{\"h\":\"动态class\",\"t\":[\"const isActive = ref(true) const hasError = ref(false) <div class=\\\"static\\\" :class=\\\"{ active: isActive, 'text-danger': hasError }\\\" ></div> \",\"也可以使用对象的形式绑定:\",\"const classObject = reactive({ active: true, 'text-danger': false }) <div :class=\\\"classObject\\\"></div> \",\"使用数组绑定多个class:\",\"const activeClass = ref('active') const errorClass = ref('text-danger') <div :class=\\\"[activeClass, errorClass]\\\"></div> <div :class=\\\"[isActive ? activeClass : '', errorClass]\\\"></div> \",\"在组件上使用动态class，单一根元素样式属性会在组件内最外层元素生效。多个根元素，需要通过 $attrs 接收样式。\",\"<!-- MyComponent 模板使用 $attrs 时 --> <p :class=\\\"$attrs.class\\\">Hi!</p> <span>This is a child component</span> <MyComponent class=\\\"baz\\\" /> \"]},\"420\":{\"h\":\"动态style\",\"t\":[\"绑定对象\",\"const activeColor = ref('red') const fontSize = ref(30) <div :style=\\\"{ color: activeColor, fontSize: fontSize + 'px' }\\\"></div> <div :style=\\\"{ 'font-size': fontSize + 'px' }\\\"></div> \",\"直接绑定对象\",\"const styleObject = reactive({ color: 'red', fontSize: '13px' }) <div :style=\\\"styleObject\\\"></div> \",\"样式多值的情况\",\"<div :style=\\\"{ display: ['-webkit-box', '-ms-flexbox', 'flex'] }\\\"></div> \"]},\"421\":{\"h\":\"属性透传 - attribute\",\"t\":[\"属性透传是指元素属性通过父组件传递进来，但是子组件没有声明定义这样的属性。透传的属性会与现有的属性合并。\",\"单个元素为根元素时，透传的 attribute 会自动被添加到根元素上。\",\"多个子元素为根元素时，可以通过 :class=\\\"$attrs.class\\\" 接收属性\",\"比仅仅属性可以透传，事件也可以透传到子组件内。如果不需要透传（inheritAttrs: false），可以在组件这样声明：\",\"<script setup> defineOptions({ inheritAttrs: false }) </script> \"]},\"422\":{\"h\":\"透传属性获取\",\"t\":[\"通过useAttrs方法获取透传属性。\",\"<script setup> import { useAttrs } from 'vue' const attrs = useAttrs() </script> // 或 export default { setup(props, ctx) { // 透传 attribute 被暴露为 ctx.attrs console.log(ctx.attrs) } } \"]},\"423\":{\"h\":\"3.条件和列表\"},\"424\":{\"h\":\"v-if、v-else、v-else-if\",\"t\":[\"条件渲染 通过v-if、v-else、v-else-if ,当满足条件后渲染。\",\"<div v-if=\\\"type === 'A'\\\"> A </div> <div v-else-if=\\\"type === 'B'\\\"> B </div> <div v-else-if=\\\"type === 'C'\\\"> C </div> <div v-else> Not A/B/C </div> \"]},\"425\":{\"h\":\"v-show\",\"t\":[\"v-show不能写在template上，v-if可以。因为v-show是通过元素的display属性控制显示隐藏的。\"]},\"426\":{\"h\":\"列表渲染\",\"t\":[\"v-for渲染数组\",\"const items = ref([{ message: 'Foo' }, { message: 'Bar' }]) <li v-for=\\\"(item, index) in items\\\"> {{ index }} - {{ item.message }} </li> \",\"v-for渲染对象\",\"const myObject = reactive({ title: 'How to do lists in Vue', author: 'Jane Doe', publishedAt: '2016-04-10' }) <ul> <li v-for=\\\"(value, key) in myObject\\\"> {{ key }}: {{ value }} </li> </ul> \",\"v-for 和v-if 为什么不同时在一个元素上？\",\"vue3 因为 v-if的优先级高于v-for ,这意味 v-if条件无法访问到v-for作用域的变量。\",\"// 这时会有报错：未定义 <li v-for=\\\"todo in todos\\\" v-if=\\\"!todo.isComplete\\\"> {{ todo.name }} </li> \",\"解决办法就是分到2个元素上。\",\"<template v-for=\\\"todo in todos\\\"> <li v-if=\\\"!todo.isComplete\\\"> {{ todo.name }} </li> </template> \"]},\"427\":{\"h\":\"4.事件处理\",\"t\":[\"与vue2一样，v-on（简写@）指令来监听DOM事件。\"]},\"428\":{\"h\":\"内联事件\",\"t\":[\"const count = ref(0) <button @click=\\\"count++\\\">Add 1</button> <p>Count is: {{ count }}</p> \"]},\"429\":{\"h\":\"方法事件\",\"t\":[\"function say(message) { alert(message) } <button @click=\\\"say('hello')\\\">Say hello</button> <button @click=\\\"say('bye')\\\">Say bye</button> \"]},\"430\":{\"h\":\"事件修饰符\",\"t\":[\"stop 停止传递\",\"prevent 阻止事件的默认行为\",\"self 元素本身的触发时生效\",\"capture\",\"once 仅触发一次\",\"passive 触摸事件监听，改善移动端滚动性能\"]},\"431\":{\"h\":\"按键修饰符\",\"t\":[\"<input @keyup.enter=\\\"submit\\\" /> <input @keyup.page-down=\\\"onPageDown\\\" /> // 组合键 <!-- Alt + Enter --> <input @keyup.alt.enter=\\\"clear\\\" /> <!-- Ctrl + 点击 --> <div @click.ctrl=\\\"doSomething\\\">Do something</div> <!-- .exact 修饰符：仅符合条件的时候才触发 --> <!-- 仅当按下 Ctrl 且未按任何其他键时才会触发 --> <button @click.ctrl.exact=\\\"onCtrlClick\\\">A</button> <!-- 仅当没有按下任何系统按键时触发 --> <button @click.exact=\\\"onClick\\\">A</button> \"]},\"432\":{\"h\":\"5.表单model\",\"t\":[\"<input v-model=\\\"message\\\" placeholder=\\\"edit me\\\" /> <textarea v-model=\\\"message\\\" placeholder=\\\"add multiple lines\\\"></textarea> <!-- 复选框 --> <input type=\\\"checkbox\\\" id=\\\"checkbox\\\" v-model=\\\"checked\\\" /> <label for=\\\"checkbox\\\">{{ checked }}</label> <!-- 单选框 --> <div>Picked: {{ picked }}</div> <input type=\\\"radio\\\" id=\\\"one\\\" value=\\\"One\\\" v-model=\\\"picked\\\" /> <label for=\\\"one\\\">One</label> <input type=\\\"radio\\\" id=\\\"two\\\" value=\\\"Two\\\" v-model=\\\"picked\\\" /> <label for=\\\"two\\\">Two</label> <!-- 选择器 --> <div>Selected: {{ selected }}</div> <select v-model=\\\"selected\\\"> <option disabled value=\\\"\\\">Please select one</option> <option>A</option> <option>B</option> <option>C</option> </select> \"]},\"433\":{\"h\":\"表单修饰符\",\"t\":[\"lazy - 在change事件后更新，而不是input之后\",\"number - 自动转数字，转失败返回原始值\",\"trim - 去除输入两端的空格\"]},\"434\":{\"h\":\"defineModel\",\"t\":[\"宏defineModel实现双向绑定。\",\"<!-- 子组件.vue --> <script setup> const model = defineModel() function update() { model.value++ } </script> <template> <div>parent bound v-model is: {{ model }}</div> </template> <!-- 父组件.vue --> <Child v-model=\\\"count\\\" /> \",\"以上写法在3.4之前如下：\",\"<script setup> const props = defineProps(['modelValue']) const emit = defineEmits(['update:modelValue']) </script> <template> <input :value=\\\"props.modelValue\\\" @input=\\\"emit('update:modelValue', $event.target.value)\\\" /> </template> \",\"定义必填和默认值：\",\"// 使 v-model 必填 const model = defineModel({ required: true }) // 提供一个默认值 const model = defineModel({ default: 0 }) \"]},\"435\":{\"h\":\"v-model接收参数\",\"t\":[\"// 父组件 v-model:参数名 <UserName v-model:first-name=\\\"first\\\" v-model:last-name=\\\"last\\\" /> // 子组件 defineModel(参数名) 获取 <script setup> const firstName = defineModel('firstName') const lastName = defineModel('lastName') </script> <template> <input type=\\\"text\\\" v-model=\\\"firstName\\\" /> <input type=\\\"text\\\" v-model=\\\"lastName\\\" /> </template> \"]},\"436\":{\"h\":\"自定义model修饰符\",\"t\":[\"// 父组件 - 实现输入框第一个字母大写功能 <MyComponent v-model.capitalize=\\\"myText\\\" /> // 子组件通过definedModel的setter方法实现自定义修饰符 <script setup> // 解构参数 const [model, modifiers] = defineModel({ set(value) { if (modifiers.capitalize) { return value.charAt(0).toUpperCase() + value.slice(1) } return value } }) </script> <template> <input type=\\\"text\\\" v-model=\\\"model\\\" /> </template> \"]},\"437\":{\"h\":\"6.模板引用\",\"t\":[\"与vue2不同，vue3里面的选择器ref定义需要和模板名字同名。\",\"<input ref=\\\"input\\\"> <script setup> import { ref, onMounted } from 'vue' const input = ref(null) onMounted(() => { input.value.focus() }) </script> \",\"v-for中模板引用\",\"在循环列表上使用ref模板引用得到包含所有元素的集合数组，但不保证顺序一致！\",\"<script setup> import { ref, onMounted } from 'vue' const list = ref([]) // ref同名 const itemRefs = ref([]) // 得到元素集合数组 onMounted(() => console.log(itemRefs.value)) </script> <template> <ul> <li v-for=\\\"item in list\\\" ref=\\\"itemRefs\\\"> {{ item }} </li> </ul> </template> \"]},\"438\":{\"h\":\"7.组件\"},\"439\":{\"h\":\"定义组件\",\"t\":[\"单文件组件定义\",\"<script setup> import { ref } from 'vue' const count = ref(0) </script> <template> <button @click=\\\"count++\\\">You clicked me {{ count }} times.</button> </template> \",\"也可以在js文件中定义\",\"import { ref } from 'vue' export default { setup() { const count = ref(0) return { count } }, template: ` <button @click=\\\"count++\\\"> You clicked me {{ count }} times. </button>` // 也可以针对一个 DOM 内联模板： // template: '#my-template-element' } \",\"使用组件\",\"<script setup> import ButtonCounter from './ButtonCounter.vue' </script> <template> <h1>Here is a child component!</h1> <ButtonCounter /> </template> \"]},\"440\":{\"h\":\"传递props\",\"t\":[\"同vue2一样，父组件通过prop向子组件传递参数，不过写法有所不同。\",\"// 在父组件 定义一个title属性的参数 <ButtonCounter title=\\\"组件标题\\\" /> \",\"// 子组件 <script setup> import { ref} from 'vue' const props = defineProps(['title']) console.log(props.title) </script> <template> <button>{{props.title}}</button> </template> \",\"子组件通过 defineProps 声明props参数，如果没有使用setup语法糖，就需要先定义参数，通过setup参数传递进去：\",\"export default { props: ['title'], setup(props) { console.log(props.title) } } \",\"props 数据都遵循单向数据流的原则，子组件不可修改props参数。\",\"props 类型校验\",\"defineProps({ // 基础类型检查 // （给出 `null` 和 `undefined` 值则会跳过任何类型检查） propA: Number, // 多种可能的类型 propB: [String, Number], // 必传，且为 String 类型 propC: { type: String, required: true }, // Number 类型的默认值 propD: { type: Number, default: 100 }, // 对象类型的默认值 propE: { type: Object, // 对象或数组的默认值 // 必须从一个工厂函数返回。 // 该函数接收组件所接收到的原始 prop 作为参数。 default(rawProps) { return { message: 'hello' } } }, // 自定义类型校验函数 // 在 3.4+ 中完整的 props 作为第二个参数传入 propF: { validator(value, props) { // The value must match one of these strings return ['success', 'warning', 'danger'].includes(value) } }, // 函数类型的默认值 propG: { type: Function, // 不像对象或数组的默认，这不是一个 // 工厂函数。这会是一个用来作为默认值的函数 default() { return 'Default function' } } }) \"]},\"441\":{\"h\":\"子组件emit触发父方法\",\"t\":[\"同vue2一样，子组件通过emit调用父组件方法，从而实现子传父。不过写法不同。\",\"<script setup> import { ref } from 'vue' const tt = ref('组件标题') // 父级方法 const TitleHandle =(e)=>{ tt.value = e } </script> // 父 <ButtonCounter :title=\\\"tt.value\\\" @changeTitle='TitleHandle' /> \",\"// 子组件 <script setup> const emit = defineEmits(['changeTitle']) emit('changeTitle','修改标题了') </script> // 没有使用setup语法糖 export default { emits: ['changeTitle'], setup(props, ctx) { ctx.emit('changeTitle') } } \"]},\"442\":{\"h\":\"8.插槽 - slot\",\"t\":[\"插槽用于存放自定义的html结构数据。\"]},\"443\":{\"h\":\"默认插槽\",\"t\":[\"插槽只有一个时，就是默认插槽。\",\"<button type=\\\"submit\\\"> <slot></slot> </button> \",\"插槽可以有默认值，当插槽未传值时，就显示默认值。有数据传递时显示传递的数据。\",\"<button type=\\\"submit\\\"> <slot>保存</slot> // 默认值 </button> \"]},\"444\":{\"h\":\"具名插槽\",\"t\":[\"一个组件内有多个插槽时，就可以给每个插槽定义一个name属性分配唯一的ID。\",\"<div class=\\\"container\\\"> <header> <slot name=\\\"header\\\"></slot> </header> <main> <slot name=\\\"main\\\"></slot> </main> <footer> <slot name=\\\"footer\\\"></slot> </footer> </div> // 使用具名插槽 <BaseLayout> <template v-slot:header> <!-- header 插槽的内容放这里 --> </template> <template #main> <!-- header 插槽的内容放这里 --> </template> </BaseLayout> \",\"指定具名插槽通过 v-slot:name 或者 #name 。\"]},\"445\":{\"h\":\"动态插槽名\",\"t\":[\"插槽名称也可以是一个变量，写法：\",\"<base-layout> <template v-slot:[dynamicSlotName]> ... </template> <!-- 缩写为 --> <template #[dynamicSlotName]> ... </template> </base-layout> \"]},\"446\":{\"h\":\"插槽作用域\",\"t\":[\"由于插槽的内容无法访问子组件的状态和数据，插槽数据绑定的时候就需要把数据传递出去，便于子组件插槽内容使用。插槽作用域内容返回的是一个对象。\",\"// 插槽定义 <slot name=\\\"header\\\" message=\\\"hello\\\"></slot> // 组件 <MyComponent> <template #header=\\\"{message}\\\"> {{ message }} </template> </MyComponent> \"]},\"447\":{\"h\":\"9.自定义指令\",\"t\":[\"自定义指令由一个包含类似组件生命周期钩子的对象来定义。钩子函数会接收到指令所绑定元素作为其参数。\",\"自定义指令写法\",\"export default { setup() { /*...*/ }, directives: { // 在模板中启用 v-focus focus: { /* ... */ } } } <script setup> // 在模板中启用 v-focus const vFocus = { mounted: (el) => el.focus() } </script> \",\"全局自定义指令：\",\"const app = createApp({}) // 使 v-focus 在所有组件中都可用 app.directive('focus', { /* ... */ }) \"]},\"448\":{\"h\":\"指令钩子\",\"t\":[\"const myDirective = { // 在绑定元素的 attribute 前 // 或事件监听器应用前调用 created(el, binding, vnode, prevVnode) { // 下面会介绍各个参数的细节 }, // 在元素被插入到 DOM 前调用 beforeMount(el, binding, vnode, prevVnode) {}, // 在绑定元素的父组件 // 及他自己的所有子节点都挂载完成后调用 mounted(el, binding, vnode, prevVnode) {}, // 绑定元素的父组件更新前调用 beforeUpdate(el, binding, vnode, prevVnode) {}, // 在绑定元素的父组件 // 及他自己的所有子节点都更新后调用 updated(el, binding, vnode, prevVnode) {}, // 绑定元素的父组件卸载前调用 beforeUnmount(el, binding, vnode, prevVnode) {}, // 绑定元素的父组件卸载后调用 unmounted(el, binding, vnode, prevVnode) {} } \"]},\"449\":{\"h\":\"钩子参数\",\"t\":[\"指令的钩子会传递以下几种参数：\",\"el：指令绑定到的元素。这可以用于直接操作 DOM。\",\"binding：一个对象，包含以下属性。 \",\"value：传递给指令的值。例如在 v-my-directive=\\\"1 + 1\\\" 中，值是 2。\",\"oldValue：之前的值，仅在 beforeUpdate 和 updated 中可用。无论值是否更改，它都可用。\",\"arg：传递给指令的参数 (如果有的话)。例如在 v-my-directive:foo 中，参数是 \\\"foo\\\"。\",\"modifiers：一个包含修饰符的对象 (如果有的话)。例如在 v-my-directive.foo.bar 中，修饰符对象是 { foo: true, bar: true }。\",\"instance：使用该指令的组件实例。\",\"dir：指令的定义对象。\",\"vnode：代表绑定元素的底层 VNode。\",\"prevNode：代表之前的渲染中指令所绑定元素的 VNode。仅在 beforeUpdate 和 updated 钩子中可用。\"]},\"450\":{\"h\":\"简化写法\",\"t\":[\"对于自定义指令来说，一个很常见的情况是仅仅需要在 mounted 和 updated 上实现相同的行为，除此之外并不需要其他钩子。这种情况下我们可以直接用一个函数来定义指令。\",\"app.directive('color', (el, binding) => { // 这会在 `mounted` 和 `updated` 时都调用 el.style.color = binding.value }) <div v-color=\\\"color\\\"></div> \",\"获取自定义指令对象的属性\",\"<div v-demo=\\\"{ color: 'white', text: 'hello!' }\\\"></div> app.directive('demo', (el, binding) => { console.log(binding.value.color) // => \\\"white\\\" console.log(binding.value.text) // => \\\"hello!\\\" }) \"]},\"451\":{\"h\":\"10.插件\",\"t\":[\"插件 (Plugins) 是一种能为 Vue 添加全局功能的工具代码。\",\"插件安装使用\",\"// 定义插件 const myPlugin = { install(app, options) { // 配置此应用 } } // plugins/i18n.js export default { install: (app, options) => { // 在这里编写插件代码 } } // 入口js import { createApp } from 'vue' const app = createApp({}) app.use(myPlugin, { /* 可选的选项 */ }) \"]},\"452\":{\"h\":\"11 .内置组件\"},\"453\":{\"h\":\"Transition过渡动画组件\",\"t\":[\"进入或离开时触发transition动画组件，注意需要定义css\",\"<button @click=\\\"show = !show\\\">Toggle</button> <Transition> <p v-if=\\\"show\\\">hello</p> </Transition> /* 下面我们会解释这些 class 是做什么的 */ .v-enter-active, .v-leave-active { transition: opacity 0.5s ease; } .v-enter-from, .v-leave-to { opacity: 0; } \",\"过渡组件命名\",\"<Transition name=\\\"name\\\"> ... </Transition> // css可以根据指定这个过渡组件 .name-enter-active, .name-leave-active { transition: opacity 0.5s ease; } .name-enter-from, .name-leave-to { opacity: 0; } \",\"同样通过name可以使用css3的动画属性animation。\",\"<Transition name=\\\"bounce\\\"> <p v-if=\\\"show\\\" style=\\\"text-align: center;\\\"> Hello here is some bouncy text! </p> </Transition> //css .bounce-enter-active { animation: bounce-in 0.5s; } .bounce-leave-active { animation: bounce-in 0.5s reverse; } @keyframes bounce-in { 0% { transform: scale(0); } 50% { transform: scale(1.25); } 100% { transform: scale(1); } } \"]},\"454\":{\"h\":\"TransitionGroup\",\"t\":[\"用法同Transition，区别\",\"默认不渲染元素，需要通过tag绑定渲染的元素。\",\"元素列表都必须有唯一key\",\"过渡动画会在列表的子元素上\",\"<TransitionGroup name=\\\"list\\\" tag=\\\"ul\\\"> <li v-for=\\\"item in items\\\" :key=\\\"item\\\"> {{ item }} </li> </TransitionGroup> .list-enter-active, .list-leave-active { transition: all 0.5s ease; } .list-enter-from, .list-leave-to { opacity: 0; transform: translateX(30px); } \"]},\"455\":{\"h\":\"keepAlive\",\"t\":[\"缓存组件在动态组件切换的时候为了保存组件的数据，可以使用keepAlive组件，非活跃的组件数据会被缓存下来。不然数据每次都会被清空。\",\"<!-- 非活跃的组件将会被缓存！ --> <KeepAlive> <component :is=\\\"activeComponent\\\" /> </KeepAlive> \",\"include 那些组件生效- 接收组件name名，多个以，分割 或数组\",\"exclude 排除那些组件- 接收组件name名，多个以，分割 或数组\",\"max 设置最大缓存组件数 - 超过最长限度后，最早缓存数据会被释放缓存生命周期函数\",\" <script setup> import { onActivated, onDeactivated } from 'vue' onActivated(() => { // 调用时机为首次挂载 // 以及每次从缓存中被重新插入时 }) onDeactivated(() => { // 在从 DOM 上移除、进入缓存 // 以及组件卸载时调用 }) </script> \"]},\"456\":{\"h\":\"Teleport\",\"t\":[\"模态组件用于把弹出层“传送”到DOM结构的指定位置。to 通过to指定到元素节点。disabled 指定场景下禁用\",\"<button @click=\\\"open = true\\\">Open Modal</button> <Teleport to=\\\"body\\\" :disabled=\\\"isMobile\\\"> <div v-if=\\\"open\\\" class=\\\"modal\\\"> <p>Hello from the modal!</p> <button @click=\\\"open = false\\\">Close</button> </div> </Teleport> \"]},\"457\":{\"h\":\"Suspense\",\"t\":[\"异步组件用于处理异步数据组件的处理。Suspense 组件有2个插槽：#default 和 #fallback。Suspense 遇到任何异步都会进入挂起状态，显示fallback组件，所有异步完成之后进入完成状态，显示默认组件。\",\"<Suspense> <!-- 具有深层异步依赖的组件 --> <Dashboard /> <!-- 在 #fallback 插槽中显示 “正在加载中” --> <template #fallback>Loading... </template> </Suspense> \"]},\"458\":{\"h\":\"生明周期\",\"t\":[\"与vue2相比，vue3的生命周期函数移除了beforeCreat和created阶段，改成了setup，卸载函数从destroyed 改成了 onUnmounted，vue3其他的生命周期函数在前面加on，具体如下：\",\"setup() 创建时\",\"onBeforeMount 挂载前\",\"onMounted 挂载时\",\"onBeforeUpdate 组件更新前\",\"onUpdated 组件更新时\",\"onBeforeUnmount 卸载前\",\"onUnmounted 卸载时\",\"当页面组件用到缓存keep-alive时，会出现2个特殊的生命周期：\",\"onActivated 缓存组件页面进入时\",\"onDeactivated 缓存组件页面离开时\",\"捕获子组件异常状态的钩子函数：\",\"onErrorCaptured 异常函数\",\"​\",\"vue3定义全局变量：app.config.globalProperties 。\",\"TS 扩展全局属性：\",\"import axios from 'axios' declare module 'vue' { interface ComponentCustomProperties { $http: typeof axios $translate: (key: string) => string } } \"]},\"459\":{\"h\":\"函数\"},\"460\":{\"h\":\"setup\",\"t\":[\"关键字setup这个表示，在编译时进行一些处理，让我们更简洁的使用组合式API。setup在解析其它组件选项之前被调用（beforeCreat之前）。this指向了undefined。\",\"默认两种写法：\",\"// 方法一：语法糖版本 <script setup> ... </script> \",\"// 方法二：函数版本 <script> export default { setup() { ... // 必须有return return { } } } </script> \",\"函数版本接收2个参数：props和context。同时setup函数必须返回一个对象，用于将组件的参数和方法抛出，让其他组件访问。\",\"props 组件接收到的所有参数\",\"context 组件实例相关的属性和方法\",\"<script> import { ref } from 'vue'; export default { name:'HIVUE', setup(props,context) { const msg = ref('你好，vue！') const changeMsg = ()=>{ msg.value = 'vue3' } // 必须有return return { msg, changeMsg } } } </script> \",\"注意：vue3在setup函数中，不能使用this访问选项式的方法和数据。\",\"setup返回值有2种：\",\"包含页面变量的对象\",\"页面渲染函数\",\"export default { name:'vue3', setup() { // 返回一个渲染函数,页面内容被渲染成hhhh return function(){ return 'hhhhhh' } } } \"]},\"461\":{\"h\":\"- 组件无法命名缺失了name属性，默认使用文件名作为组件 name。\"},\"462\":{\"h\":\"如何在setup语法糖前提下，自定义组件的名字？\",\"t\":[\"使用插件：vite-plugin-vue-setup-extend\",\"然后再 script 上加 name属性：\",\"<script setup name='组件名称'> ... </script> \"]},\"463\":{\"h\":\"Ref 和Reactive\",\"t\":[\"声明响应数据，使用Ref和Reactive 。\",\"Ref 可以持有任何类型的值，包括深层嵌套的对象、数组或者 JavaScript 内置的数据结构，比如 Map。Ref 会使它的值具有深层响应性。Ref定义的响应式基本类型数据，需要通过.value访问。\",\"ref 既可以定义基本类型，也可以定义 对象类型的数据。\",\"<script setup> import { ref } from 'vue' const count = ref(0) // 定义对象 const obj = ref({name:'2222'}) function increment() { count.value++ // 响应式的vue变成的对象，同理定义数组响应式的value就是数组类型 obj.value.name = '张三' } </script> \",\"Reactive 声明响应式对象（引用类型变成响应式对象）。ref声明对象时，也是调用了reactive。reactive返回的事代理后（proxy）的对象。\",\"import { reactive } from 'vue' const state = reactive({ count: 0 }) \"]},\"464\":{\"h\":\"reactive 的局限性：\",\"t\":[\"只能用于对象类型（对象，数组，和Map，Set集合），不能声明 string,number原始类型\",\"使用解构赋值后，响应式会丢失，需要使用 toRefs 转一下响应式数据\",\"const obj = reactive({name:'qeqw'}) // 这样得到的name还是响应式的数据 let {name} = toRefs(obj) \",\"重复赋值，响应式会丢失\",\"在项目中，常用ref定义基本类型，使用reactive 定义引用类型。\"]},\"465\":{\"h\":\"computed -计算属性\",\"t\":[\"计算属性会根据响应数据依赖值变化，然后同步更新。当依赖值不发生变化时，计算属性就具备缓存功能。而方法总是会在调用时执行，计算属性依赖值不变，不会重新执行。\",\"// 只读的计算属性 const now = computed(() => Date.now()) \",\"计算属性（函数表达式）默认是只读的。但特殊场景也可写。计算属性可以通过 getter和setter来创建。\",\"<script setup> import { ref, computed } from 'vue' const firstName = ref('John') const lastName = ref('Doe') const fullName = computed({ // getter get() { return firstName.value + ' ' + lastName.value }, // setter set(newValue) { // 注意：我们这里使用的是解构赋值语法 [firstName.value, lastName.value] = newValue.split(' ') } }) // 下面会触发计算属性的可写方法 fullName.value = 'John Doe' </script> \",\"计算属性的值类型其实就是 ref类型的响应式数据，需要通过调用 ref.value 进行读写。\"]},\"466\":{\"h\":\"watch\",\"t\":[\"监听一个属性，发生变化时触发。\",\"watch(name,(newv,oldv)=>{ // 回调 },{ //开启首次监听 immediate: true, // 首次监听 deep:true, // 深度监听 once: true // 仅监听一次 }) \",\"watch不能监听响应式对象的属性值，需要通过getter方法\",\"const obj = reactive({ count: 0 }) // 提供一个 getter 函数 watch( () => obj.count, (count) => { console.log(`count is: ${count}`) } ) \"]},\"467\":{\"h\":\"\",\"t\":[\"ref定义的数据\",\"reactive定义的数据，隐式的就是强制深度监听，无法关闭监听！！！\",\"函数返回值（getter函数）\",\"一个包含上述内容的数组\"]},\"468\":{\"h\":\"如何解除watch监听事件？\",\"t\":[\"watch创建时返回的是一个函数，解除时调用该函数就可以自动解除对应的监听事件。\",\"const watEvent =watch(name,(newv,oldv)=>{ // 回调 } // 移除监听 watEvent() \"]},\"469\":{\"h\":\"watchEffect\",\"t\":[\"watchEffect会自动追踪其内部回调函数中使用的任何响应式数据，并在这些数据变化时重新运行该回调函数，无需指定依赖项。\",\"const state = reactive({ count: 0, message: 'Hello' }) watchEffect(() => { // 当count，message变化时自动触发 console.log(`Count is now ${state.count}.`) console.log(`Message is now \\\"${state.message}\\\".`) }) \",\"停止watchEffect监听使用 watchEffect(() => {})\",\"const unwatch = watchEffect(() => {}) // ...当该侦听器不再需要时 unwatch() \"]},\"470\":{\"h\":\"依赖注入Provide/inject\",\"t\":[\"依赖注入有2部分组成：Provide - 提供数据，Inject - 注入数据 。主要是用于解决深层次数据传递的问题（祖孙组件通信）。\"]},\"471\":{\"h\":\"Provide提供数据\",\"t\":[\"写法：provide(key,value)\",\"<script setup> import { provide } from 'vue' provide( 'message', 'hello!') </script> \",\"全局提供依赖：\",\"import { createApp } from 'vue' const app = createApp({}) app.provide( 'message', 'hello!') \"]},\"472\":{\"h\":\"Inject注入数据\",\"t\":[\"接收provide的数据，需用inject。在需要的子组件写：\",\"<script setup> import { inject } from 'vue' const message = inject('message') </script> \",\"inject 接收默认数据，当收到数据之后会把默认数据替换。\",\"const value = inject('message', '这是默认值') \"]},\"473\":{\"h\":\"toValue\",\"t\":[\"toValue() 是一个在 3.3 版本中新增的 API。它的设计目的是将 ref 或 getter 规范化为值。如果参数是 ref，它会返回 ref 的值；如果参数是函数，它会调用函数并返回其返回值。否则，它会原样返回参数。\",\"import { toValue } from 'vue' function useFeature(maybeRefOrGetter) { // 如果 maybeRefOrGetter 是一个 ref 或 getter， // 将返回它的规范化值。 // 否则原样返回。 const value = toValue(maybeRefOrGetter) } \"]},\"474\":{\"h\":\"\"},\"475\":{\"h\":\"1.Vuex是什么？\",\"t\":[\"vuex是实现组件全局状态（数据）管理的一种机制，可以在整个项目任意位置实现数据共享。vuex在vue2版本得到广泛使用，vue3使用pinia管理状态。\"]},\"476\":{\"h\":\"2.如何安装使用？\",\"t\":[\"(1). 安装vuex依赖\",\"npm install vuex --save npm install vuex@next --save // 最新版 \",\"(2). 入口文件 导入使用\",\"import Vuex from 'vuex'; Vue.use(Vue) \",\"(3). 创建store 对象\",\"const store = new Vuex.Store({ state:{ count:0 } }) \",\"(4). 将store对象挂载到Vue实例中\",\"new Vue({ el:\\\"#app\\\", store }) \"]},\"477\":{\"h\":\"3.Vuex核心组成都有哪些？\",\"t\":[\"State 所有共享数据存储到state中\",\"Mutation 修改state数据，必须是同步函数\",\"Action 修改state数据，不过需要通过调用Mutation 修改数据，支持异步\",\"Getter 对State数据进行包装，调用时返回包装后的数据\",\"Module 模块，用于多数据状态分模块存储，避免store数据臃肿\"]},\"478\":{\"h\":\"state 数据存储\",\"t\":[\"获取数据，第一种：通过 \\\"this.$store.state.key \\\" 获取。\",\"this.$store.state.count \",\"第二种使用mapState 把属性值映射到计算属性中去。\",\"import { mapState } from 'vuex' export default { computed: { ...mapState(['count']) } } \"]},\"479\":{\"h\":\"Mutation 变更state数据\",\"t\":[\"vuex认为直接赋值修改数据不合法，推荐使用mutation修改数据。\",\"const store = createStore({ state: { count: 1 }, mutations: { add(state) { // 变更状态 state.count++ } } }) // 然后在项目中 通过commit调用motation的函数add，从而修改state中的数据。 store.commit('add') this.$store.commit('add') \"]},\"480\":{\"h\":\"mutation 如何传递参数\",\"t\":[\"mutation(state,step) state 默认第一个参数，不可修改，commit方法传递的参数是第二个参数。\",\"const store = createStore({ state: { count: 1 }, mutations: { add(state,n) { // 变更状态 state.count+=n } } }) // 每次加10 store.commit('add', 10) \",\"第二种调用方法，类似获取state的数据一样 ，通过mapMutations 将mutation的方法映射到methods中。\",\"import { mapMutations } from 'vuex' export default { methods: { ...mapMutations([ 'add' ]), // 可以在函数中直接使用 add方法 addEvent(){ this.add() } } \"]},\"481\":{\"h\":\"Action 异步修改数据\",\"t\":[\"vuex通过action的dispatch可以实现异步修改数据。actions不能直接修改state的数据，需要通过第一个参数.commit mutation对应的方法。第二个参数是传参。\",\"const store = createStore({ state: { count: 0 }, mutations: { add (state) { state.count++ }, addN (state,n) { state.count+=n }, }, actions: { increment (context,num) { setTimeout(() => { context.commit('addN',num) }, 1000) } } }) // 页面调用方法 store.dispatch('increment') \",\"同样的action也支持使用扩展运算符将方法映射到methods中。\",\"import { mapActions } from 'vuex' export default { methods: { ...mapActions(['increment']), addNEvent(){ this.increment(3) // 每次加3 } } } \"]},\"482\":{\"h\":\"Getter 包装数据\",\"t\":[\"getter 不会修改State数据，数据发生变化的时候也会跟着变化，类似计算属性。\",\"const store = createStore({ state: { count: 0 }, getters: { getCount (state) { return \\\"当前count的值：\\\"+state.count } } }) \",\"获取getter\",\"vuex的getter方法通过 this.$store.getters.getCount 调用。\",\" this.$store.getters.getCount \",\"也可以使用扩展运算符映射到计算属性中。\",\"import { mapGetters } from 'vuex' export default { computed: { // 使用对象展开运算符将 getter 混入 computed 对象中 ...mapGetters([ 'getCount', ]) } } // 使用的话直接 this.getCount 或 {{getCount}} \"]},\"483\":{\"h\":\"Module 模块\",\"t\":[\"Module是为了解决store存储的数据臃肿的，把数据分模块，最后组装到一个store中。每个模块都有自己的state,getter,mutation,action。\",\"const moduleA = { state: () => ({ ... }), mutations: { ... }, actions: { ... }, getters: { ... } } const moduleB = { state: () => ({ ... }), mutations: { ... }, actions: { ... } } const store = createStore({ modules: { a: moduleA, b: moduleB } }) \"]},\"484\":{\"h\":\"4.vuex在vue3里面使用（组合式API）\",\"t\":[\"// 引入useStore import { computed } from 'vue' import { useStore } from 'vuex' export default { setup () { // 定义store const store = useStore() return { // 在 computed 函数中访问 state count: computed(() => store.state.count), // 在 computed 函数中访问 getter double: computed(() => store.getters.double) // 使用 mutation increment: () => store.commit('increment'), // 使用 action asyncIncrement: () => store.dispatch('asyncIncrement') } } } \"]},\"485\":{\"h\":\"\"},\"486\":{\"h\":\"一.VUE2生命周期\"},\"487\":{\"h\":\"1.vue的生命周期都有哪些？（8个）\",\"t\":[\"beforeCreate，created，beforeMount，mounted，beforeUpdate，updated，beforeDestory，destoryed\"]},\"488\":{\"h\":\"1.1 发送请求在create阶段还是在mounted阶段？\",\"t\":[\"这个问题需要看项目了业务的情况。因为父组件引入子组件，会先执行父的前3个生命周期，再执行子组件的前4个周期。如果业务父组件引入的子组件，并且优先加载子组件数据，那么父组件需要再 mounted 中发送请求。\",\"如何项目没有引入子组件，发送请求可以发到任何生命周期中。\"]},\"489\":{\"h\":\"2.为什么发送请求不在 beforeCreate里？\",\"t\":[\"单独发送请求在任何位置都可以得到数据。但是一般请求函数被封装到methods里面，在beforeCreate阶段无法获取到methods的方法（报错），因此一般不在beforeCreate阶段请求数据。\"]},\"490\":{\"h\":\"2.1 beforeCreate和created有什么区别？\",\"t\":[\"$data\",\"beforeCreate没有$data\",\"created阶段有$data\",\"methods\",\"beforeCreate无法获取method方法\",\"created阶段可以获取到method里面的方法\"]},\"491\":{\"h\":\"3.在create阶段如何获取dom元素？\",\"t\":[\"在create阶段需要通过异步操作获取dom元素，使用同步方法获取不到！\",\"可以使用 setTimeout，$nextTick 获取元素dom。\"]},\"492\":{\"h\":\"4.进入页面之后会执行哪些生命周期？\",\"t\":[\"页面会默认执行create和mount 2大周期。\",\"beforeCreate\",\"created\",\"beforeMount\",\"mounted\"]},\"493\":{\"h\":\"5.第二次或第N次进入页面会执行哪些生命周期？\",\"t\":[\"如果当前组件使用了缓存组件 keep-alive， 只会执行一个 activated；\",\"如果没有用缓存组件，每次都会执行 beforeCreate，created，beforeMount，mounted 前4个生命周期。\"]},\"494\":{\"h\":\"6.父组件引入子组件，那么生命周期执行循序是什么？\",\"t\":[\"子组件的2大周期会在父组件beforeMount之后执行，子组件加载完毕之后，最后执行父组件的mounted。\",\"父：beforeCreate，created，beforeMount\",\"子：beforeCreate，created，beforeMount，mounted\",\"...\",\"父：mounted\"]},\"495\":{\"h\":\"7.加入keep-alive会执行哪些生命周期？（8+2）\",\"t\":[\"activated\",\"deactivated\",\"如果当前组件加入了keep-alive，第一次进入页面，会执行5个生命周期，会在mounted后执行一个activated周期。如下：\",\"beforeCreate，created，beforeMount，mounted，activated\"]},\"496\":{\"h\":\"8.说一下常用的生命周期及对应使用场景？\",\"t\":[\"created ===> 单组件时，获取数据\",\"mounted ===> 同步可以获取DOM元素\",\"activated ===> 详情页判断id是否相等，不相等重新发起请求\",\"destoryed ===> 用于避免数据污染，可以销毁数据，或者记录数据\"]},\"497\":{\"h\":\"二.组件传值\"},\"498\":{\"h\":\"1.组件传值方式\",\"t\":[\"父传子：\",\"---> 父组件通过props传递数据\",\"---> 子组件通过 this.$parent.xxx\",\"子传父：\",\"---> 子组件通过 this.$emit 触发父组件方法传参\",\"父传孙：\",\"---> 依赖注入 provide / inject\",\"平辈传值：\",\"---> 通过bus（一个new Vue()实例） 总线传递数据：\",\"平辈组件都引入bus，传递数据使用 bus.$emit ，接收数据使用 bus.$on。\"]},\"499\":{\"h\":\"2.子组件如何修改父组件的值\",\"t\":[\"this.$parent.xxx\"]},\"500\":{\"h\":\"3.父组件修改子组件的值\",\"t\":[\"通过给子组件添加ref选择器，选择子元素\",\"this.$refs.child.xxx = \\\"123\\\"\"]},\"501\":{\"h\":\"4.如何找到根组件？\",\"t\":[\"this.$root // #app\"]},\"502\":{\"h\":\"三.插槽 slot\",\"t\":[\"父组件向子组件内传递 代码块或数据时，可以用插槽，\"]},\"503\":{\"h\":\"1.匿名插槽\",\"t\":[\"无名字插槽\"]},\"504\":{\"h\":\"2.具名插槽\",\"t\":[\"有名字插槽\",\"// 组件内： <div class=\\\"container\\\"> <header> <slot name=\\\"header\\\"></slot> </header> <main> <slot></slot> </main> <footer> <slot name=\\\"footer\\\"></slot> </footer> </div> // 父使用插槽 <template v-slot:header> <!-- header 插槽的内容放这里 --> </template> <template #header> <!-- header 插槽的内容放这里 --> </template> \"]},\"505\":{\"h\":\"3.插槽作用域\",\"t\":[\"通过插槽实现父子组件传递组件就需要用到插槽作用域。插槽作用域返回时一个对象，代码块要用需要使用解构获取参数。\",\"<template #header={name}> <!-- header 插槽的内容放这里 --> {{name}} </template> \"]},\"506\":{\"h\":\"四.vue如何封装组件？\",\"t\":[\"封装高级组件: 具备插槽及作用域，父子通信的组件。\"]},\"507\":{\"h\":\"五.关于vuex\"},\"508\":{\"h\":\"1.vuex有哪些属性？\",\"t\":[\"state 全局共享属性，存放数据状态\",\"getters 计算属性\",\"mutations 修改数据的同步方法\",\"actions 修改数据的异步方法，也是调用mutation方法\",\"modules 把多个store组合在一起\"]},\"509\":{\"h\":\"2.vuex数据时单向的还是双向的？\",\"t\":[\"vuex 是单向数据流！组件内不能直接通过this.数据修改，但是组件里面修改数据可以使用 mutations 或actions修改数据。\"]},\"510\":{\"h\":\"3.vuex如何做持久化存储？\",\"t\":[\"1.使用插件：vuex-persist ，使用步骤：安装-引入-实例化-挂载到vuex的plugins插件中\",\"2.localStorage自己写，setter通过localStorage.setItem，getter时也从localStorage里面取！\"]},\"511\":{\"h\":\"六.vue设置代理\"},\"512\":{\"h\":\"1.vue项目设置代理是为了解决接口跨域问题。\",\"t\":[\"vue根目录新建一个 vue.config.js，里面新增 devServer 属性代码：\",\"module.exports = { devServer: { proxy: 'http://localhost:4000' , // 接口跨域地址 } } \"]},\"513\":{\"h\":\"2.代理打包之后，会出现代理接口跨域问题！如何解决？\",\"t\":[\"解决：新增环境变量，脚手架会自动识别环境是生产还是开发环境。通过环境变量改变接口默认的url地址。然后打包时，也会通过环境变量改变接口的地址。\",\"a.项目根目录新增2个文件：\",\"开发环境 ： .env.development\",\"生成环境 ： .env.production\",\"b.文件内容新增环境变量：\",\"// 开发文件内容 VUE_APP_TITLE = '项目名称' VUE_APPA_ENV = 'dev' VUE_APPA_BASE_API = 'http://localhost:8088/' // 生产文件内容 VUE_APP_TITLE = '项目名称' VUE_APPA_ENV = 'pro' VUE_APPA_BASE_API = 'http://40.64.123.44:8088/' \",\"全局获取环境变量方法： process.env.xxxxx\",\"更多vue代理知识：https://cli.vuejs.org/zh/config/#devserver-proxy\"]},\"514\":{\"h\":\"七.打包问题\"},\"515\":{\"h\":\"1.打包之后白屏问题什么原因导致的？\",\"t\":[\"原因：项目默认打包后文件路径是绝对路径！需要通过 vue.config.js文件的 publicPath属性配置为相对路径。\",\"module.exports = { publicPath:\\\"./\\\" } \"]},\"516\":{\"h\":\"2.打包后，路径点击之后白屏，图片内容都不显示？\",\"t\":[\"原因：路由模式是 history 模式，需要改成 hash 模式，在路由的 mode属性改为 hash模式。\"]},\"517\":{\"h\":\"3.如何项目上线需要 history 模式 ,但是前端开发是 hash 模式，怎么处理？\",\"t\":[\"需要后端设置 重定向！\"]},\"518\":{\"h\":\"八.vue路由模式\"},\"519\":{\"h\":\"1.路由都有哪些模式？都有什么区别？\",\"t\":[\"路由一共有2种模式：history和hash\",\"区别：\",\"表现形态不一样：hash 路径在域名和文件夹之间多了 “#” 符号，history没有\",\"跳转请求：history遇到404不存在的路径会发起跳转请求，hash不会发送请求\",\"前端开发使用 hash 模式，使用history打包会出现白屏问题\"]},\"520\":{\"h\":\"2.介绍一下SPA及缺点？\",\"t\":[\"SPA是单页面应用，整个项目就是一个页面。\",\"缺点：\",\"对SEO网络优化不友好\",\"频繁的回流重绘导致性能不好\"]},\"521\":{\"h\":\"3.vue路径如何传参？\",\"t\":[\"显示传参（地址栏可以看到参数）：\",\"通过路由的 path 和 query设置参数\",\"this.$router.push({ path:'about', query:{ id:222 } }) // 获取路由参数： this.$route.query.xxx const id = this.$route.query.id \",\"隐式传参（地址栏看不到参数）：\",\"通过路由的name属性和params 设置\",\"this.$router.push({ name:'about', params:{ id:222 } }) // 获取隐式参数方式： this.$route.params.id const id = this.$route.params.id \"]},\"522\":{\"h\":\"4.路由导航守卫有哪些？\",\"t\":[\"路由守卫分为三部分：全局3个、独享1个、组件内3个\",\"全局守卫： beforeEach / beforeResolve / afterEach (to,from,next)\",\"路由独享： beforeEnter\",\"组件内：beforeRouteEnter / beforeRouteUpdate / beforeRouteLeave\",\"路由守卫使用场景：未登录跳转到登录页面\"]},\"523\":{\"h\":\"5.动态路由\",\"t\":[\"动态路由场景一般都是详情页面，根据参数不同加载不同内容。\",\"{ path:\\\"list\\\", name:\\\"list\\\", children:[ { path: \\\"/list/:id\\\", // 动态路由 name: 'details', component:()=> import(\\\"../view/list/detail.vue\\\") // 懒加载 } ] } \"]},\"524\":{\"h\":\"八.setup函数可以跟data，methods等同时使用吗？\",\"t\":[\"可以共存，vue3兼容了vue2的写法。setup的声明周期函数早于 beforeCreate钩子函数。\",\"并且 选项式的属性方法：data和methods等可以使用this调用setup里面的数据和方法。\",\"但是 setup 不能调用 data ，methods的数据和方法，setup的this指向 undefined.\",\"<script> export default{ name:\\\"vue3\\\", data(){ return { ccc: this.name // 调用setup的数据 } }, methods:{ b(){ this.add() }, } setup(){ const count = ref(0) function add(){ count++ } return { add } } } </script> \"]},\"525\":{\"h\":\"\",\"t\":[\"webapck命令\",\"npm install webpack // 安装 npm webpack // 打包命令 \"]},\"526\":{\"h\":\"1.webpack有什么用？\",\"t\":[\"webpack 是一个用于现代 JavaScript 应用程序的 静态模块打包工具。将模块化开发的碎片资源组合为一个或多个静态资源。\",\"webpack原理：将多个文件合并成一个对象的中，路径作key，内容做value，然后放到IIFE立即执行函数中，然后通过函数执行路径对应的函数，将函数结果返回存放到不重复的对象集合中。\",\"(function(modules){ var moduleExport = {} function require(moduleKey){ if(moduleExport[moduleKey]) return moduleExport[moduleKey] var func = modules[moduleKey] var module = { exports:{} } func(module,export,require); var res = module.export; moduleExport[moduleKey] = res; } })({ \\\"../src/main.js\\\":function(module){console.log(123);module.exports = \\\"a\\\"}, \\\"../src/index.js\\\":function(module,exports,require){ console.log(456);module.exports = \\\"b\\\"}, }) \"]},\"527\":{\"h\":\"2.webpack的核心功能有哪些？\",\"t\":[\"entry 入口\",\"output 输出\",\"loader 模块\",\"plugin 插件\",\"mode 模式\"]},\"528\":{\"h\":\"入口 entry\",\"t\":[\"入口文件默认值是 ./src/index.js\",\"module.exports = { entry: './path/to/my/entry/file.js', }; // 等效于 module.exports = { entry: { main:'./path/to/my/entry/file.js', } }; // 等效于 module.exports = { entry:['./path/to/my/entry/file.js'] // 多个入口文件 }; \"]},\"529\":{\"h\":\"输出 output\",\"t\":[\"output属性是配置webpack模块打包后的位置。\",\"const path = require('path'); module.exports = { entry: './path/to/my/entry/file.js', output: { path: path.resolve(__dirname, 'dist'), // 路径目录 filename: 'bundle.js', // 文件名 }, }; \"]},\"530\":{\"h\":\"loader - module模块转换\",\"t\":[\"loader 用于对模块的源代码进行转换。由于webpack只认识js和json文件，对于其他文件需要通过对应的loader做转换。\",\"const path = require('path'); module.exports = { entry: './path/to/my/entry/file.js', output: { path: path.resolve(__dirname, 'dist'), // 路径目录 filename: 'bundle.js', // 文件名 }, module:{ rules: [ { test: /\\\\.txt$/, use: 'raw-loader' },// 打包时遇到 txt文件用raw-loader转换以下 { test: /.css$/,use: [\\\"style-loader\\\",\\\"css-loader\\\" ] }, // 遇到css 用这2个转换 ], } }; \"]},\"531\":{\"h\":\"plugin 插件\",\"t\":[\"插件用于打包优化，资源管理。\",\"例如：将html也打包，使用 html-webpack-plugin 插件。\",\"const HtmlWebpackPlugin = require('html-webpack-plugin'); // 引入插件 const webpack = require('webpack'); // 用于访问内置插件 module.exports = { module: { rules: [{ test: /\\\\.txt$/, use: 'raw-loader' }], }, plugins: [ // 使用插件 new HtmlWebpackPlugin({ title:\\\"我是标题\\\", // 页面标题 template: './src/index.html' // 模板文件 }) ], }; \"]},\"532\":{\"h\":\"mode 模式\",\"t\":[\"mode用于指定当前项目的环境。不同模式有不同的优化。\",\"development 开发环境\",\"production 生存环境\",\"none 默认打包模式\",\"module.exports = { mode: 'production', }; \",\"除以上的核心胚子，还有target属性。用于针对某个服务端。默认还是web，也可以修改为node。\",\"module.exports = { target: 'node', }; \"]},\"533\":{\"h\":\"3.webpack和vite打包的区别？为什么vite打包速度快于webpack?\"},\"534\":{\"h\":\"1).工作原理上不同\",\"t\":[\"webpack编译打包时，会根据入口文件分析出所有的模块依赖关系，然后所有引用文件都打包成一个或多个js文件。这样的项目会越来臃肿，启动时间越来越长！\",\"vite运行项目时，会通过 esbulid 将所有的模块转换为 es module文件，不需要对整个项目进行打包。而浏览器在加载改模块的时候，会根据请求按需动态引入编译，再返给浏览器。\"]},\"535\":{\"h\":\"2).热更新不同\",\"t\":[\"webpack项目中，每次修改都会对整个项目重新打包编译，虽然webpack有缓存机制，但不能从根本上解决问题。\",\"vite在监听到文件发生变化时，会通过websocket通知浏览器，发起重新请求，只对发生变化的模块进行重新编译，然后进行替换。\"]},\"536\":{\"h\":\"3).构建速度不同\",\"t\":[\"webpack和vite由于原理上不同，再加上vite底层是go语言开发了，执行速度是js的10到100倍，因此导致vite的构建速度远远高于webpack。\"]},\"537\":{\"h\":\"4).配置不同\",\"t\":[\"webpack配置复杂度更高，插件社区更完善健全，更符合大型项目或稳定项目。\",\"vite配置简单，兴起时间短，插件不健全，适合中小型项目。\"]},\"538\":{\"h\":\"\",\"t\":[\"小程序商店发布步骤：\",\"1.小程序编辑器 - 右上角“上传” - 上传成功\",\"2.小程序后台 - 体验测试版本 - 发布提交审核(3-7天)\"]},\"539\":{\"h\":\"\"},\"540\":{\"h\":\"App生命周期\",\"t\":[\"onLaunch - 初始化\",\"onShow - 显示时\",\"onHide - 隐藏时\",\"onError - 异常时\"]},\"541\":{\"h\":\"全局变量\",\"t\":[\"在app.js的globalData对象里面定义:\",\"// app.js App({ globalData: { userInfo: null } }) \"]},\"542\":{\"h\":\"页面生命周期\",\"t\":[\"页面的生命周期钩子函数都必须放在Page函数里面。\",\"onLoad - 页面加载时\",\"onReady - 初次渲染时\",\"onShow - 页面显示时\",\"onHide - 页面隐藏时\",\"onUnload - 页面卸载时\",\"页面事件回调钩子\",\"onPullDownRefresh - 页面下拉时\",\"onReachBottom - 页面上拉触底时\",\"onShareAppMessage - 点击右上角分享时\",\"组件内更新页面数据使用 setData方法\",\"Page({ data: { logs: [] }, onLoad() { this.setData({ logs: (wx.getStorageSync('logs') || []).map(log => { return { date: util.formatTime(new Date(log)), timeStamp: log } }) }) } }) \",\"组件内使用require引入js文件\",\"const util = require(\\\"../../utils/util\\\") Page({}) \"]},\"543\":{\"h\":\"小程序跳转\",\"t\":[\"wx.navigateTo 入栈跳转，页面未销毁，可以使用wx.navigateBack 返回来源页面\",\"wx.redirectTo 重定向跳转，关闭当前页面\",\"wx.switchTab tab页面跳转方式\",\"wx.reLaunch 关闭所有页面，可以携带参数跳转任意页面\",\"使用 navigator a链接跳转\"]},\"544\":{\"h\":\"小程序获取html数据\",\"t\":[\"html通过data-自定义属性设置动态参数，在事件里面通过e.currentTarget.dataset.url 获取url属性。\",\"<view data-url=\\\"{{itme.path}}\\\"></view> // 获取url: e.currentTarget.dataset.url \"]},\"545\":{\"h\":\"页面路径传参\",\"t\":[\"页面传参\",\"wx.navigateTo({ url: '../list/index?md='+files, }) \",\"接收页面\",\"onLoad(options) { const {md} = options } \"]},\"546\":{\"h\":\"image 的mode类型\",\"t\":[\"缩放\",\"scaleToFill 不保持纵横比缩放图片，使图片的宽高完全拉伸至填满 image 元素\",\"aspectFit 保持纵横比缩放图片，使图片的长边能完全显示出来\",\"aspectFill 保持纵横比缩放图片，只保证图片的短边能完全显示出来。\",\"widthFix 宽度不变，高度自动变化，保持原图宽高比不变\",\"裁剪\",\"top 不缩放图片，只显示图片的顶部区域\",\"bottom 不缩放图片，只显示图片的底部区域\",\"center 不缩放图片，只显示图片的中间区域\",\"left 不缩放图片，只显示图片的左边区域\",\"right 不缩放图片，只显示图片的右边区域\",\"top left 不缩放图片，只显示图片的左上边区域\",\"top right 不缩放图片，只显示图片的右上边区域\",\"bottom left 不缩放图片，只显示图片的左下边区域\",\"bottom right 不缩放图片，只显示图片的右下边区域\"]},\"547\":{\"h\":\"常见问题\"},\"548\":{\"h\":\"1.小程序体积不得超过2M，超过如何处理？\",\"t\":[\"超过2M，上传打包会失败！\",\"解决办法：在项目配置里排除指定目录（静态资源目录）project.config.json (注意：排除后的文件不会上传)\",\"\\\"packOptions\\\": { \\\"ignore\\\": [ {\\\"type\\\": \\\"folder\\\",\\\"value\\\": \\\"assets/uploads\\\"} ], }, \"]},\"549\":{\"h\":\"2.bindtap和catchtap的区别是什么?\",\"t\":[\"相同点：首先他们都是作为点击事件函数，就是点击时触发。在这个作用上他们是一样的，可以不做区分 不同点：他们的不同点主要是bindtap是不会阻止冒泡事件的，catchtap是阻值冒泡的\"]},\"550\":{\"h\":\"3.小程序页面之间传递参数的方法有哪些？\",\"t\":[\"1.使用全局变量\",\"2.页面跳转或者重定向使用url传参数\",\"3.父组件通过属性传递数据，子组件通过 properties 对象接收父传参属性。子组件也可以通过 triggerEvent 方法触发父组件方法传递参数（类似vue emit)。\"]},\"551\":{\"h\":\"4.小程序关联微信公众号如何确定用户的唯一性\",\"t\":[\"使用 wx.getUserInfo 方法 withCredentials 为 true 时 可获取 加密信息<encryptedData，里面有 union_id。后端需要进行对称解密。\"]},\"552\":{\"h\":\"5.小程序对wx:if 和 hidden使用的理解？\",\"t\":[\"wx:if 有更高的切换消耗。\",\"hidden 有更高的初始渲染消耗。\",\"因此，如果需要频繁切换的情景下，用 hidden 更好，如果在运行时条件不大可能改变则 wx:if 较好。\"]},\"553\":{\"h\":\"6. 中的页面怎么跳回小程序中？\",\"t\":[\"引入 jweixin.js 文件，然后再通过 miniProgram调用navigateTo跳转方式。\",\"wx.miniProgram.navigateTo({ url: '/pages/login/login'+'$params' }) \",\"如果跳转到tab标签页面，需要配合 switchTab 跳转。\"]},\"554\":{\"h\":\"7.如何实现下来刷新\",\"t\":[\"首先在全局 config 中的 window 配置 enablePullDownRefresh ，在 Page 中定义 onPullDownRefresh 钩子函数,到达下拉刷新条件后，该钩子函数执行，发起请求方法 请求返回后，调用wx.stopPullDownRefresh 停止下拉刷新。\"]},\"555\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"较好\",{\"1\":{\"552\":1}}],[\"较少的cpu和内存的使用\",{\"1\":{\"56\":1}}],[\"加密信息<encrypteddata\",{\"1\":{\"551\":1}}],[\"加入keep\",{\"0\":{\"495\":1}}],[\"加入如下配置\",{\"1\":{\"407\":1}}],[\"加入\",{\"1\":{\"399\":1,\"400\":1}}],[\"他们的不同点主要是bindtap是不会阻止冒泡事件的\",{\"1\":{\"549\":1}}],[\"他会把post请求变为get请求进行重定向\",{\"1\":{\"55\":1}}],[\"入栈跳转\",{\"1\":{\"543\":1}}],[\"入口\",{\"0\":{\"528\":1},\"1\":{\"527\":1}}],[\"入口js\",{\"1\":{\"451\":1}}],[\"入口文件默认值是\",{\"1\":{\"528\":1}}],[\"入口文件\",{\"1\":{\"363\":1,\"476\":1}}],[\"入口目录\",{\"1\":{\"215\":1}}],[\"初次渲染时\",{\"1\":{\"542\":1}}],[\"初始化心跳检测对象\",{\"1\":{\"228\":1}}],[\"初始化socket\",{\"1\":{\"220\":1}}],[\"初始化状态\",{\"1\":{\"167\":1}}],[\"初始化\",{\"1\":{\"32\":1,\"190\":1,\"540\":1}}],[\"初始化安装\",{\"0\":{\"15\":1}}],[\"体验测试版本\",{\"1\":{\"538\":1}}],[\"适合中小型项目\",{\"1\":{\"537\":1}}],[\"兴起时间短\",{\"1\":{\"537\":1}}],[\"虽然webpack有缓存机制\",{\"1\":{\"535\":1}}],[\"热更新不同\",{\"0\":{\"535\":1}}],[\"热爱开源\",{\"1\":{\"5\":1}}],[\"资源管理\",{\"1\":{\"531\":1}}],[\"懒加载\",{\"1\":{\"523\":1}}],[\"地址栏看不到参数\",{\"1\":{\"521\":1}}],[\"地址栏可以看到参数\",{\"1\":{\"521\":1}}],[\"频繁的回流重绘导致性能不好\",{\"1\":{\"520\":1}}],[\"频繁请求服务器\",{\"1\":{\"224\":1}}],[\"介绍一下spa及缺点\",{\"0\":{\"520\":1}}],[\"符号\",{\"1\":{\"519\":1}}],[\"八\",{\"0\":{\"518\":1,\"524\":1}}],[\"怎么处理\",{\"0\":{\"517\":1}}],[\"图片内容都不显示\",{\"0\":{\"516\":1}}],[\"七\",{\"0\":{\"514\":1}}],[\"七娃\",{\"1\":{\"169\":2}}],[\"脚手架会自动识别环境是生产还是开发环境\",{\"1\":{\"513\":1}}],[\"六\",{\"0\":{\"511\":1}}],[\"五\",{\"0\":{\"507\":1}}],[\"封装高级组件\",{\"1\":{\"506\":1}}],[\"封闭的对象不允许添加和删除属性\",{\"1\":{\"252\":1}}],[\"四\",{\"0\":{\"506\":1}}],[\"四次挥手是指断开一个tcp连接\",{\"1\":{\"59\":1}}],[\"四次挥手\",{\"0\":{\"59\":1},\"1\":{\"60\":1}}],[\"匿名插槽\",{\"0\":{\"503\":1}}],[\"三\",{\"0\":{\"502\":1}}],[\"三次握手\",{\"1\":{\"60\":1}}],[\"三次握手是指\",{\"1\":{\"59\":1}}],[\"平辈组件都引入bus\",{\"1\":{\"498\":1}}],[\"平辈传值\",{\"1\":{\"498\":1}}],[\"总线传递数据\",{\"1\":{\"498\":1}}],[\"详情页判断id是否相等\",{\"1\":{\"496\":1}}],[\"报错\",{\"1\":{\"489\":1}}],[\"混入\",{\"1\":{\"482\":1}}],[\"混合日期\",{\"1\":{\"83\":1}}],[\"混合日期和时间值\",{\"1\":{\"83\":1}}],[\"管理的一种机制\",{\"1\":{\"475\":1}}],[\"否则原样返回\",{\"1\":{\"473\":1}}],[\"否则\",{\"1\":{\"473\":1}}],[\"否则是\",{\"1\":{\"356\":1}}],[\"需用inject\",{\"1\":{\"472\":1}}],[\"需要配合\",{\"1\":{\"553\":1}}],[\"需要后端设置\",{\"1\":{\"517\":1}}],[\"需要改成\",{\"1\":{\"516\":1}}],[\"需要手动开启装饰器\",{\"1\":{\"344\":1}}],[\"需要用到路由全局前置守卫和路由元信息meta\",{\"1\":{\"386\":1}}],[\"需要用泛型表示参数和返回值的类型\",{\"1\":{\"321\":1,\"341\":1}}],[\"需要用括号包起来\",{\"1\":{\"309\":1}}],[\"需要增加一个构造函数定义初始属性\",{\"1\":{\"320\":1}}],[\"需要使用\",{\"1\":{\"320\":1,\"464\":1}}],[\"需要不断的维护优化长连接\",{\"1\":{\"225\":1}}],[\"需要设置白名单或ssl协议\",{\"1\":{\"225\":1}}],[\"需要传递的数据\",{\"1\":{\"218\":1}}],[\"需要加载的amdjs文件\",{\"1\":{\"215\":1}}],[\"需要给flat传参维度n\",{\"1\":{\"202\":1}}],[\"需要通过第一个参数\",{\"1\":{\"481\":1}}],[\"需要通过getter方法\",{\"1\":{\"466\":1}}],[\"需要通过调用\",{\"1\":{\"465\":1}}],[\"需要通过tag绑定渲染的元素\",{\"1\":{\"454\":1}}],[\"需要通过ts编译器或babel转成js后才能被浏览器等环境运行\",{\"1\":{\"326\":1}}],[\"需要通过babel转换\",{\"1\":{\"213\":1}}],[\"需要通过\",{\"1\":{\"190\":1,\"419\":1,\"463\":1,\"515\":1}}],[\"需要通过路径创建形状\",{\"1\":{\"136\":1}}],[\"需要发送4个包才能确认连接已经断开\",{\"1\":{\"59\":1}}],[\"需要更新缓存资源\",{\"1\":{\"58\":1}}],[\"需要在右侧表达式前\",{\"1\":{\"24\":1}}],[\"需要强转类型\",{\"1\":{\"24\":1}}],[\"需要注意入口文件为\",{\"0\":{\"15\":1}}],[\"祖孙组件通信\",{\"1\":{\"470\":1}}],[\"停止下拉刷新\",{\"1\":{\"554\":1}}],[\"停止watcheffect监听使用\",{\"1\":{\"469\":1}}],[\"停止传递\",{\"1\":{\"430\":1}}],[\"首先在全局\",{\"1\":{\"554\":1}}],[\"首先他们都是作为点击事件函数\",{\"1\":{\"549\":1}}],[\"首次监听\",{\"1\":{\"466\":1}}],[\"首选的方法\",{\"1\":{\"35\":1}}],[\"首选放到类型和变量之间\",{\"1\":{\"35\":1}}],[\"既可以定义基本类型\",{\"1\":{\"463\":1}}],[\"既不影响布局也不影响绘制\",{\"1\":{\"266\":1}}],[\"卸载时\",{\"1\":{\"458\":1}}],[\"卸载前\",{\"1\":{\"458\":1}}],[\"卸载函数从destroyed\",{\"1\":{\"458\":1}}],[\"挂载到vuex的plugins插件中\",{\"1\":{\"510\":1}}],[\"挂载时\",{\"1\":{\"458\":1}}],[\"挂载前\",{\"1\":{\"458\":1}}],[\"到达下拉刷新条件后\",{\"1\":{\"554\":1}}],[\"到dom结构的指定位置\",{\"1\":{\"456\":1}}],[\"到user\",{\"1\":{\"66\":1}}],[\"排除后的文件不会上传\",{\"1\":{\"548\":1}}],[\"排除那些组件\",{\"1\":{\"455\":1}}],[\"排序倒序\",{\"1\":{\"129\":1}}],[\"缓存组件页面离开时\",{\"1\":{\"458\":1}}],[\"缓存组件页面进入时\",{\"1\":{\"458\":1}}],[\"缓存组件在动态组件切换的时候为了保存组件的数据\",{\"1\":{\"455\":1}}],[\"缓存分为两种\",{\"1\":{\"58\":1}}],[\"区别\",{\"1\":{\"454\":1,\"519\":1}}],[\"区别在于特性不同\",{\"1\":{\"48\":1}}],[\"除以上的核心胚子\",{\"1\":{\"532\":1}}],[\"除此之外并不需要其他钩子\",{\"1\":{\"450\":1}}],[\"除非\",{\"1\":{\"356\":1}}],[\"钩子函数\",{\"1\":{\"554\":1}}],[\"钩子函数会接收到指令所绑定元素作为其参数\",{\"1\":{\"447\":1}}],[\"钩子中可用\",{\"1\":{\"449\":1}}],[\"钩子参数\",{\"0\":{\"449\":1}}],[\"及他自己的所有子节点都更新后调用\",{\"1\":{\"448\":1}}],[\"及他自己的所有子节点都挂载完成后调用\",{\"1\":{\"448\":1}}],[\"及防护\",{\"0\":{\"268\":1}}],[\"具备插槽及作用域\",{\"1\":{\"506\":1}}],[\"具体如下\",{\"1\":{\"458\":1}}],[\"具体细节\",{\"1\":{\"58\":1}}],[\"具有深层异步依赖的组件\",{\"1\":{\"457\":1}}],[\"具名插槽\",{\"0\":{\"444\":1,\"504\":1}}],[\"插件不健全\",{\"1\":{\"537\":1}}],[\"插件社区更完善健全\",{\"1\":{\"537\":1}}],[\"插件用于打包优化\",{\"1\":{\"531\":1}}],[\"插件安装使用\",{\"1\":{\"451\":1}}],[\"插件\",{\"0\":{\"451\":1,\"531\":1},\"1\":{\"451\":1,\"527\":1,\"531\":1}}],[\"插槽中显示\",{\"1\":{\"457\":1}}],[\"插槽定义\",{\"1\":{\"446\":1}}],[\"插槽数据绑定的时候就需要把数据传递出去\",{\"1\":{\"446\":1}}],[\"插槽作用域返回时一个对象\",{\"1\":{\"505\":1}}],[\"插槽作用域内容返回的是一个对象\",{\"1\":{\"446\":1}}],[\"插槽作用域\",{\"0\":{\"446\":1,\"505\":1}}],[\"插槽名称也可以是一个变量\",{\"1\":{\"445\":1}}],[\"插槽的内容放这里\",{\"1\":{\"444\":2,\"504\":2,\"505\":1}}],[\"插槽可以有默认值\",{\"1\":{\"443\":1}}],[\"插槽只有一个时\",{\"1\":{\"443\":1}}],[\"插槽用于存放自定义的html结构数据\",{\"1\":{\"442\":1}}],[\"插槽\",{\"0\":{\"442\":1,\"502\":1}}],[\"插入一条数据\",{\"1\":{\"65\":1}}],[\"得到元素集合数组\",{\"1\":{\"437\":1}}],[\"得到最大的\",{\"1\":{\"146\":1}}],[\"得到最小的\",{\"1\":{\"146\":1}}],[\"必传\",{\"1\":{\"440\":1}}],[\"必填\",{\"1\":{\"434\":1}}],[\"必须有return\",{\"1\":{\"460\":2}}],[\"必须有初始值\",{\"1\":{\"156\":1}}],[\"必须从一个工厂函数返回\",{\"1\":{\"440\":1}}],[\"必须是同步函数\",{\"1\":{\"477\":1}}],[\"必须是一个简单对象或\",{\"1\":{\"356\":1}}],[\"必须是带length属性的对象\",{\"1\":{\"108\":1}}],[\"必须暂停一切行为\",{\"1\":{\"256\":1}}],[\"必须写在\",{\"1\":{\"190\":1}}],[\"宏definemodel实现双向绑定\",{\"1\":{\"434\":1}}],[\"触摸事件监听\",{\"1\":{\"430\":1}}],[\"触发父组件方法传参\",{\"1\":{\"498\":1}}],[\"触发更新的函数\",{\"1\":{\"411\":1}}],[\"触发重绘\",{\"1\":{\"265\":1}}],[\"阻止事件的默认行为\",{\"1\":{\"430\":1}}],[\"列表渲染\",{\"0\":{\"426\":1}}],[\"透传\",{\"1\":{\"422\":1}}],[\"透传属性获取\",{\"0\":{\"422\":1}}],[\"透传的\",{\"1\":{\"421\":1}}],[\"透传的属性会与现有的属性合并\",{\"1\":{\"421\":1}}],[\"样式多值的情况\",{\"1\":{\"420\":1}}],[\"样式计算\",{\"0\":{\"257\":1},\"1\":{\"255\":1}}],[\"绑定元素的父组件卸载后调用\",{\"1\":{\"448\":1}}],[\"绑定元素的父组件卸载前调用\",{\"1\":{\"448\":1}}],[\"绑定元素的父组件更新前调用\",{\"1\":{\"448\":1}}],[\"绑定对象\",{\"1\":{\"420\":1}}],[\"绑定的值如果是null\",{\"1\":{\"417\":1}}],[\"跟vue2一样\",{\"1\":{\"415\":1,\"416\":1,\"417\":1}}],[\"跟元素\",{\"1\":{\"389\":1}}],[\"缺陷\",{\"1\":{\"411\":1}}],[\"缺点会产生大量的请求和响应\",{\"1\":{\"224\":1}}],[\"缺点\",{\"1\":{\"87\":1,\"281\":1,\"520\":1}}],[\"生存环境\",{\"1\":{\"532\":1}}],[\"生产文件内容\",{\"1\":{\"513\":1}}],[\"生明周期\",{\"0\":{\"458\":1}}],[\"生命周期钩子\",{\"1\":{\"411\":1}}],[\"生成环境\",{\"1\":{\"513\":1}}],[\"生成器实例\",{\"1\":{\"166\":1}}],[\"生成器是一个特殊的函数\",{\"1\":{\"166\":1}}],[\"生成器\",{\"0\":{\"166\":1},\"1\":{\"190\":1}}],[\"生成序列号seq=1893430205\",{\"1\":{\"59\":1}}],[\"组合键\",{\"1\":{\"431\":1}}],[\"组合式api\",{\"0\":{\"484\":1}}],[\"组合式api写法\",{\"1\":{\"412\":1}}],[\"组合式组件是在组件内使用vue组合式方法和属性\",{\"1\":{\"412\":1}}],[\"组合式函数可以随时更改其状态\",{\"1\":{\"412\":1}}],[\"组合式函数名以\",{\"1\":{\"412\":1}}],[\"组合式函数写法\",{\"1\":{\"412\":1}}],[\"组合式函数\",{\"0\":{\"412\":1},\"1\":{\"412\":2}}],[\"组合式\",{\"0\":{\"411\":1},\"1\":{\"411\":2}}],[\"组件内使用require引入js文件\",{\"1\":{\"542\":1}}],[\"组件内更新页面数据使用\",{\"1\":{\"542\":1}}],[\"组件内3个\",{\"1\":{\"522\":1}}],[\"组件内不能直接通过this\",{\"1\":{\"509\":1}}],[\"组件内\",{\"1\":{\"504\":1,\"522\":1}}],[\"组件传值方式\",{\"0\":{\"498\":1}}],[\"组件传值\",{\"0\":{\"497\":1}}],[\"组件名称\",{\"1\":{\"462\":1}}],[\"组件无法命名缺失了name属性\",{\"0\":{\"461\":1}}],[\"组件实例相关的属性和方法\",{\"1\":{\"460\":1}}],[\"组件实例还没被创建\",{\"1\":{\"383\":1}}],[\"组件接收到的所有参数\",{\"1\":{\"460\":1}}],[\"组件更新时\",{\"1\":{\"458\":1}}],[\"组件更新前\",{\"1\":{\"458\":1}}],[\"组件有2个插槽\",{\"1\":{\"457\":1}}],[\"组件标题\",{\"1\":{\"440\":1,\"441\":1}}],[\"组件已经挂载好了\",{\"1\":{\"383\":1}}],[\"组件\",{\"0\":{\"438\":1},\"1\":{\"383\":1,\"446\":1}}],[\"组件守卫\",{\"0\":{\"383\":1}}],[\"派发更新\",{\"1\":{\"409\":1}}],[\"收集依赖\",{\"1\":{\"409\":1}}],[\"嵌套路由的父页面需要使用\",{\"1\":{\"408\":1}}],[\"搜索框之外点击关闭\",{\"0\":{\"406\":1}}],[\"异常时\",{\"1\":{\"540\":1}}],[\"异常函数\",{\"1\":{\"458\":1}}],[\"异常报错\",{\"0\":{\"405\":1}}],[\"异步修改数据\",{\"0\":{\"481\":1}}],[\"异步组件用于处理异步数据组件的处理\",{\"1\":{\"457\":1}}],[\"异步编程解决方案\",{\"1\":{\"190\":1}}],[\"项目默认打包后文件路径是绝对路径\",{\"1\":{\"515\":1}}],[\"项目根目录新增2个文件\",{\"1\":{\"513\":1}}],[\"项目配置依赖\",{\"1\":{\"397\":1}}],[\"项目名称\",{\"1\":{\"513\":2}}],[\"项目名\",{\"1\":{\"397\":1}}],[\"源代码文件\",{\"1\":{\"397\":1}}],[\"选择子元素\",{\"1\":{\"500\":1}}],[\"选择器\",{\"1\":{\"432\":1}}],[\"选择手动安装\",{\"1\":{\"397\":1}}],[\"选项式的属性方法\",{\"1\":{\"524\":1}}],[\"选项式\",{\"1\":{\"411\":1}}],[\"选项包括\",{\"1\":{\"356\":1}}],[\"复选框\",{\"1\":{\"432\":1}}],[\"复杂数据结构通过递归循环遍历进行数据劫持\",{\"1\":{\"392\":1}}],[\"复合类型\",{\"1\":{\"334\":1}}],[\"左右空格\",{\"1\":{\"389\":1,\"393\":1}}],[\"左连接\",{\"1\":{\"78\":1}}],[\"匹配模板正则\",{\"1\":{\"389\":1,\"393\":1}}],[\"节点\",{\"1\":{\"393\":1}}],[\"节点类型为元素\",{\"1\":{\"389\":1}}],[\"节省修复异常的时间\",{\"1\":{\"297\":1}}],[\"元素\",{\"1\":{\"546\":1}}],[\"元素列表都必须有唯一key\",{\"1\":{\"454\":1}}],[\"元素本身的触发时生效\",{\"1\":{\"430\":1}}],[\"元素类型递归编译模板\",{\"1\":{\"389\":1}}],[\"元组tuple就是固定长度的数组\",{\"1\":{\"310\":1}}],[\"元组\",{\"0\":{\"310\":1}}],[\"登录标识假时就跳转到登录页面\",{\"1\":{\"386\":1}}],[\"登录受信任网站a\",{\"1\":{\"274\":1}}],[\"之前的值\",{\"1\":{\"449\":1}}],[\"之前总是使用数组的一些常用的方法\",{\"1\":{\"94\":1}}],[\"之间跳转的时候\",{\"1\":{\"383\":1}}],[\"举例来说\",{\"1\":{\"383\":1}}],[\"独享1个\",{\"1\":{\"522\":1}}],[\"独享路由守卫\",{\"0\":{\"382\":1}}],[\"独立于方法之外的变量\",{\"1\":{\"30\":2}}],[\"独立完成小程序开发及上线的工作\",{\"1\":{\"4\":1}}],[\"独立完成网站开发\",{\"1\":{\"3\":1}}],[\"意料之外的错误\",{\"1\":{\"380\":1}}],[\"跳转\",{\"1\":{\"553\":1}}],[\"跳转请求\",{\"1\":{\"519\":1}}],[\"跳转路由配置方式二\",{\"1\":{\"375\":1}}],[\"跳转路由配置方式一\",{\"1\":{\"375\":1}}],[\"跳出循环\",{\"1\":{\"33\":1}}],[\"静默失败\",{\"1\":{\"374\":1}}],[\"静态资源目录\",{\"1\":{\"548\":1}}],[\"静态模块打包工具\",{\"1\":{\"526\":1}}],[\"静态类型检查\",{\"1\":{\"326\":1}}],[\"静态类型\",{\"1\":{\"326\":1}}],[\"静态方法\",{\"1\":{\"172\":1,\"300\":1}}],[\"静态属性不可修改\",{\"1\":{\"300\":1}}],[\"静态属性和静态方法必须使用类获取\",{\"1\":{\"300\":1}}],[\"静态属性和方法\",{\"1\":{\"30\":1}}],[\"静态属性\",{\"1\":{\"172\":1,\"300\":1}}],[\"静态成员及方法只能通过类获取\",{\"1\":{\"172\":1}}],[\"静态成员\",{\"0\":{\"172\":1},\"1\":{\"172\":1}}],[\"静态变量\",{\"1\":{\"30\":1}}],[\"条件渲染\",{\"1\":{\"424\":1}}],[\"条件和列表\",{\"0\":{\"423\":1}}],[\"条件语句\",{\"0\":{\"34\":1,\"68\":1},\"1\":{\"65\":1}}],[\"条记录\",{\"1\":{\"374\":1}}],[\"带\",{\"1\":{\"372\":1}}],[\"带查询参数\",{\"1\":{\"372\":1}}],[\"带有路径的对象\",{\"1\":{\"372\":1}}],[\"带参数的动态路由\",{\"0\":{\"371\":1}}],[\"编程式\",{\"1\":{\"372\":1,\"373\":1}}],[\"编译不报错\",{\"1\":{\"336\":1}}],[\"编译器可以安装在任何操作系统上\",{\"1\":{\"326\":1}}],[\"编译器或\",{\"1\":{\"305\":1}}],[\"编译器的选项是配置文件中非常重要也是非常复杂的配置选项\",{\"1\":{\"291\":1}}],[\"编译后的文件是否开启严格模式\",{\"1\":{\"291\":1}}],[\"点击右上角分享时\",{\"1\":{\"542\":1}}],[\"点击背景关闭\",{\"1\":{\"406\":1}}],[\"点击输入框不关闭\",{\"1\":{\"406\":1}}],[\"点击\",{\"1\":{\"372\":1,\"431\":1}}],[\"点击之后将数据携带到危险网站\",{\"1\":{\"275\":1}}],[\"现在\",{\"1\":{\"369\":1}}],[\"现在采用更灵活的处理方式\",{\"1\":{\"245\":1}}],[\"路径目录\",{\"1\":{\"529\":1,\"530\":1}}],[\"路径作key\",{\"1\":{\"526\":1}}],[\"路径在域名和文件夹之间多了\",{\"1\":{\"519\":1}}],[\"路径点击之后白屏\",{\"0\":{\"516\":1}}],[\"路径描边stroke\",{\"1\":{\"135\":1}}],[\"路由独享\",{\"1\":{\"522\":1}}],[\"路由导航守卫有哪些\",{\"0\":{\"522\":1}}],[\"路由一共有2种模式\",{\"1\":{\"519\":1}}],[\"路由都有哪些模式\",{\"0\":{\"519\":1}}],[\"路由模式是\",{\"1\":{\"516\":1}}],[\"路由等\",{\"1\":{\"397\":1}}],[\"路由鉴权守卫\",{\"1\":{\"386\":1}}],[\"路由鉴权拦截\",{\"0\":{\"386\":1}}],[\"路由前置守卫\",{\"1\":{\"386\":1}}],[\"路由懒加载\",{\"0\":{\"384\":1}}],[\"路由守卫使用场景\",{\"1\":{\"522\":1}}],[\"路由守卫分为三部分\",{\"1\":{\"522\":1}}],[\"路由守卫\",{\"0\":{\"378\":1}}],[\"路由别名\",{\"0\":{\"377\":1}}],[\"路由重定向\",{\"0\":{\"376\":1}}],[\"路由配置\",{\"1\":{\"375\":1}}],[\"路由命名\",{\"0\":{\"375\":1}}],[\"路由历史\",{\"0\":{\"374\":1}}],[\"路由替换\",{\"0\":{\"373\":1}}],[\"路由跳转\",{\"0\":{\"372\":1}}],[\"路由可选参数\",{\"1\":{\"371\":1}}],[\"路由实例使\",{\"1\":{\"369\":1}}],[\"内容做value\",{\"1\":{\"526\":1}}],[\"内置的数据结构\",{\"1\":{\"463\":1}}],[\"内置组件\",{\"0\":{\"452\":1}}],[\"内联模板\",{\"1\":{\"439\":1}}],[\"内联事件\",{\"0\":{\"428\":1}}],[\"内部会调用这个方法\",{\"1\":{\"372\":1}}],[\"内部提供了\",{\"1\":{\"369\":1}}],[\"内连接\",{\"1\":{\"78\":1}}],[\"暂时保持简单\",{\"1\":{\"369\":1}}],[\"配置不同\",{\"0\":{\"537\":1}}],[\"配置此应用\",{\"1\":{\"451\":1}}],[\"配置\",{\"1\":{\"369\":1,\"407\":1,\"554\":1}}],[\"恢复默认值\",{\"1\":{\"365\":1}}],[\"恢复到最初状态\",{\"1\":{\"142\":1}}],[\"作为第二个参数传入\",{\"1\":{\"440\":1}}],[\"作为参数\",{\"1\":{\"440\":1}}],[\"作为\",{\"1\":{\"365\":1}}],[\"作为上一次的返回结果\",{\"1\":{\"166\":1}}],[\"里面有\",{\"1\":{\"551\":1}}],[\"里面新增\",{\"1\":{\"512\":1}}],[\"里面存放state的方法\",{\"1\":{\"364\":1}}],[\"里面属性不同\",{\"1\":{\"320\":1}}],[\"依赖注入\",{\"1\":{\"498\":1}}],[\"依赖注入有2部分组成\",{\"1\":{\"470\":1}}],[\"依赖注入provide\",{\"0\":{\"470\":1}}],[\"依赖模块\",{\"1\":{\"397\":1}}],[\"依赖state数据变化而改变\",{\"1\":{\"364\":1}}],[\"依赖于m和d的值\",{\"1\":{\"83\":2}}],[\"支持异步\",{\"1\":{\"477\":1}}],[\"支持插件\",{\"1\":{\"362\":1}}],[\"支持ts类型推断\",{\"1\":{\"362\":1}}],[\"支持最新的所有js\",{\"1\":{\"326\":1}}],[\"搭配ts\",{\"1\":{\"362\":1}}],[\"超过2m\",{\"1\":{\"548\":1}}],[\"超过如何处理\",{\"0\":{\"548\":1}}],[\"超过最长限度后\",{\"1\":{\"455\":1}}],[\"超过就过期失效\",{\"1\":{\"58\":1}}],[\"超出\",{\"1\":{\"359\":1}}],[\"名称都是小写\",{\"1\":{\"357\":1}}],[\"名字中包含\",{\"1\":{\"71\":1}}],[\"您可以使用常规的`http\",{\"1\":{\"356\":1}}],[\"您输入了\",{\"1\":{\"41\":2}}],[\"若都指定\",{\"1\":{\"356\":1}}],[\"守护进程\",{\"1\":{\"356\":1}}],[\"被暴露为\",{\"1\":{\"422\":1}}],[\"被组合式函数封装和管理的状态\",{\"1\":{\"412\":1}}],[\"被用作\",{\"1\":{\"356\":1}}],[\"被称作\",{\"1\":{\"257\":1}}],[\"被称作事件循环\",{\"1\":{\"240\":1}}],[\"忽略\",{\"1\":{\"356\":1}}],[\"忽略不可达代码\",{\"1\":{\"291\":1}}],[\"参见\",{\"1\":{\"356\":1}}],[\"参数是\",{\"1\":{\"449\":1}}],[\"参数名\",{\"1\":{\"371\":1,\"435\":2}}],[\"参数装饰器\",{\"1\":{\"344\":1}}],[\"参数必须放到最后\",{\"1\":{\"162\":1}}],[\"参数\",{\"1\":{\"125\":1,\"170\":3,\"300\":2,\"356\":1}}],[\"专属\",{\"1\":{\"356\":2}}],[\"则必须设置\",{\"1\":{\"356\":1}}],[\"则必须是以下类型之一\",{\"1\":{\"356\":1}}],[\"则promise\",{\"1\":{\"356\":1}}],[\"则请求会被中断\",{\"1\":{\"356\":1}}],[\"则不会进行重定向\",{\"1\":{\"356\":1}}],[\"则不会\",{\"1\":{\"356\":1}}],[\"则证明server端已正常关闭\",{\"1\":{\"59\":1}}],[\"时都调用\",{\"1\":{\"450\":1}}],[\"时能获取到data数据\",{\"1\":{\"390\":1,\"393\":1}}],[\"时\",{\"1\":{\"356\":1,\"372\":1,\"419\":1,\"551\":1}}],[\"时间值或持续时间\",{\"1\":{\"83\":1}}],[\"时间\",{\"1\":{\"83\":1}}],[\"便于子组件插槽内容使用\",{\"1\":{\"446\":1}}],[\"便于多组件复用\",{\"1\":{\"412\":1}}],[\"便于为\",{\"1\":{\"356\":1}}],[\"便于发现问题\",{\"1\":{\"297\":1}}],[\"捕获子组件异常状态的钩子函数\",{\"1\":{\"458\":1}}],[\"捕获错误\",{\"1\":{\"354\":1}}],[\"捕获异常\",{\"1\":{\"190\":1}}],[\"上传打包会失败\",{\"1\":{\"548\":1}}],[\"上传成功\",{\"1\":{\"538\":1}}],[\"上传\",{\"1\":{\"538\":1}}],[\"上移除\",{\"1\":{\"455\":1}}],[\"上实现相同的行为\",{\"1\":{\"450\":1}}],[\"上边是声明\",{\"1\":{\"345\":1}}],[\"上加\",{\"1\":{\"185\":1,\"462\":1}}],[\"谁使用就放到谁前面\",{\"1\":{\"344\":1}}],[\"性能监控\",{\"1\":{\"344\":1}}],[\"性别不为0\",{\"1\":{\"76\":1}}],[\"性别不为null\",{\"1\":{\"76\":2}}],[\"装饰器用法\",{\"1\":{\"344\":1}}],[\"装饰器分为\",{\"1\":{\"344\":1}}],[\"装饰器主要以函数的形式出现\",{\"1\":{\"344\":1}}],[\"装饰器\",{\"1\":{\"344\":2}}],[\"公共静态资源\",{\"1\":{\"397\":1}}],[\"公共\",{\"1\":{\"338\":1}}],[\"公有的\",{\"1\":{\"27\":1}}],[\"抛出对象和函数需要用export\",{\"1\":{\"337\":1}}],[\"命名的路由\",{\"1\":{\"372\":1}}],[\"命名都在各自的空间内互不干扰\",{\"1\":{\"337\":1}}],[\"命名空间冲突\",{\"1\":{\"412\":1}}],[\"命名空间\",{\"1\":{\"337\":1}}],[\"说一下常用的生命周期及对应使用场景\",{\"0\":{\"496\":1}}],[\"说一下tcp三次握手\",{\"0\":{\"59\":1}}],[\"说说typescript中命名空间与模块的理解和区别\",{\"0\":{\"337\":1}}],[\"污染后续使用该变量的函数和上下文\",{\"1\":{\"336\":1}}],[\"滥用会有什么后果\",{\"0\":{\"336\":1}}],[\"做声明吗\",{\"0\":{\"335\":1}}],[\"让其他组件访问\",{\"1\":{\"460\":1}}],[\"让我们更简洁的使用组合式api\",{\"1\":{\"460\":1}}],[\"让代码更加优雅\",{\"1\":{\"411\":1}}],[\"让代码更安全和可靠\",{\"1\":{\"332\":1}}],[\"让路由建立\",{\"1\":{\"372\":1}}],[\"让gpu完成最终成像工作\",{\"1\":{\"263\":1}}],[\"号\",{\"1\":{\"331\":1}}],[\"告诉编辑器变量类型按照某个类型执行\",{\"1\":{\"330\":1}}],[\"告诉浏览器需要分层\",{\"1\":{\"259\":1}}],[\"满足多种类型的所有特性\",{\"1\":{\"328\":1}}],[\"满足条件继续执行\",{\"1\":{\"33\":1}}],[\"功能\",{\"1\":{\"326\":1}}],[\"功能是一样的\",{\"1\":{\"119\":1}}],[\"面向对象的语言\",{\"1\":{\"326\":1}}],[\"面向对象编程\",{\"1\":{\"299\":1}}],[\"移除监听\",{\"1\":{\"468\":1}}],[\"移除一些属性\",{\"1\":{\"324\":1}}],[\"移动\",{\"0\":{\"142\":1}}],[\"移动到起点moveto\",{\"1\":{\"135\":1}}],[\"工厂函数\",{\"1\":{\"440\":1}}],[\"工具类型\",{\"0\":{\"324\":1}}],[\"工作原理上不同\",{\"0\":{\"534\":1}}],[\"工作原理\",{\"1\":{\"165\":1}}],[\"工作经验丰富\",{\"1\":{\"5\":1}}],[\"联合类型是\",{\"1\":{\"328\":1}}],[\"联合类型表示变量的类型不固定\",{\"1\":{\"322\":1}}],[\"联合类型\",{\"0\":{\"322\":1}}],[\"联合类型数组\",{\"1\":{\"309\":1}}],[\"约束参数必须是带length属性的\",{\"1\":{\"321\":1}}],[\"遇到css\",{\"1\":{\"530\":1}}],[\"遇到css代码\",{\"1\":{\"256\":1}}],[\"遇到任何异步都会进入挂起状态\",{\"1\":{\"457\":1}}],[\"遇到参数或返回值类型不明确时\",{\"1\":{\"321\":1,\"341\":1}}],[\"泛型由传进去的参数决定\",{\"1\":{\"321\":1}}],[\"泛型类\",{\"1\":{\"321\":1}}],[\"泛型类型\",{\"1\":{\"321\":1}}],[\"泛型约束\",{\"1\":{\"321\":1}}],[\"泛型接口\",{\"1\":{\"321\":1}}],[\"泛型函数的也参数值可以是多个\",{\"1\":{\"321\":1}}],[\"泛型函数\",{\"1\":{\"321\":1}}],[\"泛型是值在定义函数\",{\"1\":{\"321\":1,\"341\":1}}],[\"泛型\",{\"0\":{\"321\":1}}],[\"两个接口有公共的属性就可以把公共的作为父类接口\",{\"1\":{\"320\":1}}],[\"合并\",{\"1\":{\"320\":1}}],[\"合成线程计算出每个位图在屏幕的位置\",{\"1\":{\"263\":1}}],[\"合成\",{\"1\":{\"146\":1}}],[\"女\",{\"1\":{\"317\":3}}],[\"直接绑定对象\",{\"1\":{\"420\":1}}],[\"直接在路由配置上定义\",{\"1\":{\"382\":1}}],[\"直接赋值\",{\"1\":{\"327\":1}}],[\"直接赋值就会类型报错\",{\"1\":{\"315\":1}}],[\"直到任务处理完进入休眠状态\",{\"1\":{\"240\":1}}],[\"直到最后一个\",{\"1\":{\"165\":1}}],[\"直到不满足条件\",{\"1\":{\"33\":1}}],[\"未登录跳转到登录页面\",{\"1\":{\"522\":1}}],[\"未定义\",{\"1\":{\"426\":1}}],[\"未知\",{\"1\":{\"317\":1}}],[\"未知类型\",{\"0\":{\"314\":1}}],[\"未了避免布局树反复计算\",{\"1\":{\"264\":1}}],[\"失去了ts类型语言的意义\",{\"1\":{\"313\":1}}],[\"失败了\",{\"1\":{\"316\":1}}],[\"失败\",{\"1\":{\"167\":1}}],[\"送快递\",{\"1\":{\"310\":1}}],[\"送外卖\",{\"1\":{\"310\":1}}],[\"明确指定数组包含多少个元素\",{\"1\":{\"310\":1}}],[\"与vue2相比\",{\"1\":{\"458\":1}}],[\"与vue2不同\",{\"1\":{\"437\":1}}],[\"与vue2一样\",{\"1\":{\"427\":1}}],[\"与组合式组件类似\",{\"1\":{\"412\":1}}],[\"与\",{\"1\":{\"374\":2,\"383\":1}}],[\"与javascript一样\",{\"1\":{\"306\":1}}],[\"与郑州aaa数字艺术教育培训了\",{\"1\":{\"6\":1}}],[\"弥补了js弱类型的缺陷\",{\"1\":{\"305\":1}}],[\"抽象方法\",{\"1\":{\"304\":1}}],[\"抽象方法必须在抽象类里面\",{\"1\":{\"304\":1}}],[\"抽象类和抽象方法通过关键字\",{\"1\":{\"304\":1}}],[\"抽象类与抽象方法\",{\"0\":{\"304\":1}}],[\"万物皆对象\",{\"1\":{\"299\":1}}],[\"完全支持js最新语法\",{\"1\":{\"297\":1}}],[\"增强代码可读性\",{\"1\":{\"329\":1}}],[\"增强代码提示\",{\"1\":{\"297\":1}}],[\"增强开发体验\",{\"1\":{\"297\":1}}],[\"增加新元素并返回当前map\",{\"1\":{\"169\":1}}],[\"增加渐变颜色\",{\"1\":{\"150\":1}}],[\"增加渐变的控制点颜色\",{\"1\":{\"149\":1}}],[\"出错的时候\",{\"1\":{\"291\":1}}],[\"运行在编译阶段\",{\"1\":{\"344\":1}}],[\"运行在node或其他中才需要设置\",{\"1\":{\"291\":1}}],[\"运行在浏览器中不用设置\",{\"1\":{\"291\":1}}],[\"运算类型转换\",{\"0\":{\"24\":1}}],[\"杀掉进程\",{\"1\":{\"289\":2}}],[\"k>从t中取出除去k的\",{\"1\":{\"324\":1}}],[\"k>\",{\"1\":{\"321\":1}}],[\"k\",{\"1\":{\"289\":1,\"321\":2}}],[\"key=\",{\"1\":{\"454\":1}}],[\"keyframes\",{\"1\":{\"453\":1}}],[\"keyup\",{\"1\":{\"431\":3}}],[\"keyof\",{\"1\":{\"346\":1}}],[\"keyof和typeof关键字的作用\",{\"0\":{\"346\":1}}],[\"key和value都可以是任意类型\",{\"1\":{\"169\":1}}],[\"keys>\",{\"1\":{\"324\":2}}],[\"keys\",{\"0\":{\"113\":1,\"192\":1},\"1\":{\"113\":1,\"129\":1,\"192\":2}}],[\"key\",{\"1\":{\"99\":1,\"356\":1,\"392\":5,\"393\":9,\"400\":2,\"426\":2,\"458\":1,\"471\":1,\"478\":1}}],[\"keepalive>\",{\"1\":{\"455\":1}}],[\"keepalive\",{\"0\":{\"455\":1},\"1\":{\"356\":2}}],[\"keep\",{\"1\":{\"56\":4,\"493\":1}}],[\"切换镜像源\",{\"1\":{\"290\":1}}],[\"切换权限用户\",{\"1\":{\"289\":1}}],[\"切换盘d\",{\"1\":{\"289\":1}}],[\"切换到指定数据库\",{\"1\":{\"63\":1}}],[\"递归\",{\"1\":{\"391\":1,\"393\":1,\"394\":1}}],[\"递归循环是最完美的\",{\"1\":{\"288\":1}}],[\"递归全赋值\",{\"1\":{\"288\":1}}],[\"算浅拷贝\",{\"1\":{\"288\":1}}],[\"深度监听\",{\"1\":{\"466\":1}}],[\"深拷贝时除了要考虑特殊值处理\",{\"1\":{\"288\":1}}],[\"深拷贝需要注意哪些问题\",{\"0\":{\"288\":1}}],[\"深层属性也是浅拷贝\",{\"1\":{\"288\":1}}],[\"给出\",{\"1\":{\"440\":1}}],[\"给index页面发送的消息\",{\"1\":{\"285\":1}}],[\"给iframe页面发送的消息\",{\"1\":{\"285\":1}}],[\"给数组赋值\",{\"1\":{\"35\":1}}],[\"允许为下载处理进度事件\",{\"1\":{\"356\":1}}],[\"允许为上传处理进度事件\",{\"1\":{\"356\":1}}],[\"允许自定义处理请求\",{\"1\":{\"356\":1}}],[\"允许修改响应数据\",{\"1\":{\"356\":1}}],[\"允许在向服务器发送前\",{\"1\":{\"356\":1}}],[\"允许\",{\"1\":{\"291\":2}}],[\"允许所有的地址跨域访问\",{\"1\":{\"282\":1}}],[\"允许客户端通过代理服务器与目标服务器建立一条直接的tcp连接\",{\"1\":{\"46\":1}}],[\"容易注入恶意脚本\",{\"1\":{\"281\":1}}],[\"兼容性高\",{\"1\":{\"281\":1}}],[\"轻量\",{\"1\":{\"281\":1}}],[\"域名\",{\"1\":{\"279\":1}}],[\"验证token是最佳csrf的防御方案\",{\"1\":{\"276\":1}}],[\"链接\",{\"1\":{\"275\":1}}],[\"要完成一次csrf攻击\",{\"1\":{\"274\":1}}],[\"要么声明为\",{\"1\":{\"27\":1}}],[\"英语\",{\"1\":{\"274\":1}}],[\"防御csrf方法\",{\"0\":{\"276\":1}}],[\"防御xss方法\",{\"0\":{\"272\":1}}],[\"防止命名冲突\",{\"1\":{\"185\":1}}],[\"恶意代码隐藏在前端\",{\"1\":{\"271\":1}}],[\"恶意代码被隐藏在url路径中\",{\"1\":{\"271\":1}}],[\"恶意代码被注入到数据库中\",{\"1\":{\"271\":1}}],[\"恶意内容包含引号\",{\"1\":{\"270\":1}}],[\"恶意内容以\",{\"1\":{\"270\":1}}],[\"型三种\",{\"1\":{\"271\":1}}],[\"反射性\",{\"1\":{\"271\":1}}],[\"反射型和\",{\"1\":{\"271\":1}}],[\"反向断言\",{\"1\":{\"198\":1}}],[\"伪协议\",{\"1\":{\"270\":1}}],[\"拼接的数据突破了原本的限制\",{\"1\":{\"270\":1}}],[\"拼接字符串\",{\"1\":{\"36\":1}}],[\"标签形成注入\",{\"1\":{\"270\":1}}],[\"标识幂运算\",{\"1\":{\"188\":1}}],[\"中定义\",{\"1\":{\"554\":1}}],[\"中的\",{\"1\":{\"554\":1}}],[\"中的页面怎么跳回小程序中\",{\"0\":{\"553\":1}}],[\"中发送请求\",{\"1\":{\"488\":1}}],[\"中可用\",{\"1\":{\"449\":1}}],[\"中完整的\",{\"1\":{\"440\":1}}],[\"中已存在的自定义\",{\"1\":{\"356\":1}}],[\"中才能使用\",{\"1\":{\"291\":1}}],[\"中\",{\"0\":{\"336\":1},\"1\":{\"270\":1,\"449\":3}}],[\"中内嵌的文本中\",{\"1\":{\"270\":1}}],[\"中等长度文本数据\",{\"1\":{\"83\":1}}],[\"利用这些恶意脚本\",{\"1\":{\"269\":1}}],[\"使图片的长边能完全显示出来\",{\"1\":{\"546\":1}}],[\"使图片的宽高完全拉伸至填满\",{\"1\":{\"546\":1}}],[\"使\",{\"1\":{\"434\":1,\"447\":1}}],[\"使之在用户的浏览器上运行\",{\"1\":{\"269\":1}}],[\"使用全局变量\",{\"1\":{\"550\":1}}],[\"使用history打包会出现白屏问题\",{\"1\":{\"519\":1}}],[\"使用步骤\",{\"1\":{\"510\":1}}],[\"使用同步方法获取不到\",{\"1\":{\"491\":1}}],[\"使用的话直接\",{\"1\":{\"482\":1}}],[\"使用的时候使用\",{\"1\":{\"185\":1}}],[\"使用对象展开运算符将\",{\"1\":{\"482\":1}}],[\"使用解构赋值后\",{\"1\":{\"464\":1}}],[\"使用reactive\",{\"1\":{\"464\":1}}],[\"使用ref和reactive\",{\"1\":{\"463\":1}}],[\"使用root用户\",{\"1\":{\"66\":1}}],[\"使用插件\",{\"1\":{\"462\":1,\"510\":1,\"531\":1}}],[\"使用该指令的组件实例\",{\"1\":{\"449\":1}}],[\"使用具名插槽\",{\"1\":{\"444\":1}}],[\"使用组件\",{\"1\":{\"439\":1}}],[\"使用数组绑定多个class\",{\"1\":{\"419\":1}}],[\"使用导入的\",{\"1\":{\"411\":1}}],[\"使用elementplus\",{\"1\":{\"399\":1}}],[\"使用es6模块化都需要将js进行babel转换成es5的写法\",{\"1\":{\"217\":1}}],[\"使用spread获取\",{\"1\":{\"358\":1}}],[\"使用send方法向服务端发送内容\",{\"1\":{\"286\":1}}],[\"使用sea\",{\"1\":{\"216\":1}}],[\"使用axios\",{\"1\":{\"358\":1}}],[\"使用await\",{\"1\":{\"190\":1}}],[\"使用装饰器修饰方法\",{\"1\":{\"344\":1}}],[\"使用装饰器修饰类\",{\"1\":{\"344\":1}}],[\"使用静态类型并帮助在编译时进行类型检查\",{\"1\":{\"326\":1}}],[\"使用字符串是将它们放在单引号或者双引号中间\",{\"1\":{\"308\":1}}],[\"使用tsc编译文件\",{\"0\":{\"296\":1}}],[\"使用文件\",{\"1\":{\"216\":1}}],[\"使用bigint定义\",{\"1\":{\"209\":1}}],[\"使用babel对es6模块化代码转换步骤\",{\"1\":{\"185\":1}}],[\"使用可选链操作符\",{\"1\":{\"207\":1}}],[\"使用扩展运算符合并对象\",{\"1\":{\"196\":1}}],[\"使用时需要使用\",{\"1\":{\"185\":1}}],[\"使用之前可以判断length是否存在\",{\"1\":{\"108\":1}}],[\"使用之后再关闭连接\",{\"1\":{\"56\":1}}],[\"使用等号\",{\"1\":{\"72\":1}}],[\"使用\",{\"0\":{\"73\":1,\"232\":1},\"1\":{\"32\":1,\"64\":1,\"65\":1,\"76\":1,\"143\":1,\"149\":1,\"323\":1,\"356\":1,\"370\":1,\"484\":2,\"531\":1,\"543\":1,\"551\":1}}],[\"使用关键字\",{\"1\":{\"32\":1}}],[\"使用node+mysql开发接口等\",{\"1\":{\"5\":1}}],[\"跨mixin数据耦合\",{\"1\":{\"412\":1}}],[\"跨平台\",{\"1\":{\"326\":1}}],[\"跨站请求伪造\",{\"0\":{\"273\":1},\"1\":{\"274\":1}}],[\"跨站脚本攻击\",{\"1\":{\"269\":1}}],[\"跨域是浏览器限制\",{\"1\":{\"280\":1}}],[\"跨域就是页面发送ajax或者加载资源文件时\",{\"1\":{\"279\":1}}],[\"跨域\",{\"0\":{\"278\":1}}],[\"跨域页面也通过soclet方法接收\",{\"1\":{\"220\":1}}],[\"跨域可以通过一个服务器作为中间人转发消息\",{\"1\":{\"220\":1}}],[\"攻击者可获取用户的敏感信息如\",{\"1\":{\"269\":1}}],[\"攻击者通过在目标网站上注入恶意脚本\",{\"1\":{\"269\":1}}],[\"攻击\",{\"0\":{\"268\":1}}],[\"影响了渲染阶段的第八步画draw的阶段\",{\"1\":{\"266\":1}}],[\"改成了\",{\"1\":{\"458\":1}}],[\"改成了setup\",{\"1\":{\"458\":1}}],[\"改善移动端滚动性能\",{\"1\":{\"430\":1}}],[\"改变文本内容的字符串\",{\"1\":{\"393\":1}}],[\"改动属性造成的回流reflow是异步的\",{\"1\":{\"264\":1}}],[\"改造客户端代码\",{\"1\":{\"228\":1}}],[\"树\",{\"1\":{\"264\":1}}],[\"树的每一个节点\",{\"1\":{\"258\":1}}],[\"此过程会用到gpu加速\",{\"1\":{\"262\":1}}],[\"此时外部的css文件还没下载好\",{\"1\":{\"256\":1}}],[\"此时\",{\"1\":{\"59\":2}}],[\"此时标志位flags=s\",{\"1\":{\"59\":1}}],[\"光删化\",{\"1\":{\"262\":1}}],[\"光栅化\",{\"0\":{\"262\":1}}],[\"光栅格\",{\"1\":{\"255\":1}}],[\"剩下的交给其他线程完成\",{\"1\":{\"260\":1}}],[\"堆叠上下文z\",{\"1\":{\"259\":1}}],[\"滚动条\",{\"1\":{\"259\":1}}],[\"很多预设值会变成绝对值\",{\"1\":{\"257\":1}}],[\"预解析线程可以分摊js下载任务\",{\"1\":{\"256\":1}}],[\"预检请求\",{\"1\":{\"46\":1}}],[\"预检\",{\"1\":{\"45\":1}}],[\"冻结原型\",{\"1\":{\"251\":1}}],[\"冻结之后属性不可新增\",{\"1\":{\"251\":1}}],[\"描述组件\",{\"1\":{\"411\":1}}],[\"描述一个对象的类型\",{\"1\":{\"318\":1}}],[\"描述是否可修改\",{\"1\":{\"248\":1}}],[\"描边颜色\",{\"1\":{\"147\":1}}],[\"描边矩形strockrect\",{\"1\":{\"134\":1}}],[\"计时器的回调函数只能在主线程空闲的时候执行\",{\"1\":{\"246\":1}}],[\"计算属性的值类型其实就是\",{\"1\":{\"465\":1}}],[\"计算属性可以通过\",{\"1\":{\"465\":1}}],[\"计算属性依赖值不变\",{\"1\":{\"465\":1}}],[\"计算属性就具备缓存功能\",{\"1\":{\"465\":1}}],[\"计算属性会根据响应数据依赖值变化\",{\"1\":{\"465\":1}}],[\"计算属性\",{\"0\":{\"465\":1},\"1\":{\"403\":1,\"465\":1,\"508\":1}}],[\"计算属性获取动态参数\",{\"0\":{\"403\":1}}],[\"计算每个节点的几何信息\",{\"1\":{\"258\":1}}],[\"计算样式和布局\",{\"1\":{\"240\":1}}],[\"计算机硬件没有原子钟\",{\"1\":{\"246\":1}}],[\"计算机\",{\"1\":{\"2\":1}}],[\"受保护\",{\"1\":{\"338\":1}}],[\"受保护的\",{\"1\":{\"27\":1}}],[\"受害者必须依次完成两个步骤\",{\"1\":{\"274\":1}}],[\"受事件循环影响\",{\"1\":{\"246\":1}}],[\"因此导致vite的构建速度远远高于webpack\",{\"1\":{\"536\":1}}],[\"因此一般不在beforecreate阶段请求数据\",{\"1\":{\"489\":1}}],[\"因此组件实例会被复用\",{\"1\":{\"383\":1}}],[\"因此getter的第一个参数默认就是state\",{\"1\":{\"364\":1}}],[\"因此\",{\"1\":{\"326\":1,\"552\":1}}],[\"因此可以用任意变量代替\",{\"1\":{\"321\":1}}],[\"因此typescript是一种强类型语言\",{\"1\":{\"305\":1}}],[\"因此也会有一定偏差\",{\"1\":{\"246\":1}}],[\"因此也会有偏差\",{\"1\":{\"246\":1}}],[\"因为父组件引入子组件\",{\"1\":{\"488\":1}}],[\"因为\",{\"1\":{\"426\":1}}],[\"因为v\",{\"1\":{\"425\":1}}],[\"因为在这种情况发生的时候\",{\"1\":{\"383\":1}}],[\"因为当守卫执行时\",{\"1\":{\"383\":1}}],[\"因为我们在下边有具体函数的实现\",{\"1\":{\"345\":1}}],[\"因为它有以下副作用\",{\"1\":{\"336\":1}}],[\"因为它是window对象的一个方法\",{\"1\":{\"220\":1}}],[\"因为transform\",{\"1\":{\"266\":1}}],[\"因为js代码有可能改动dom树\",{\"1\":{\"256\":1}}],[\"因为下载和解析css的工作是在预解析线程中进行的\",{\"1\":{\"256\":1}}],[\"操作系统的计时函数本事就有少量偏差\",{\"1\":{\"246\":1}}],[\"过渡动画会在列表的子元素上\",{\"1\":{\"454\":1}}],[\"过渡组件命名\",{\"1\":{\"453\":1}}],[\"过滤模板变量符号\",{\"1\":{\"389\":1}}],[\"过滤不必要的事件\",{\"1\":{\"272\":1}}],[\"过去把消息队列分为宏队列和微队列\",{\"1\":{\"245\":1}}],[\"过期时间\",{\"1\":{\"58\":1}}],[\"微队列\",{\"1\":{\"243\":1,\"245\":1}}],[\"交叉类型是\",{\"1\":{\"328\":1}}],[\"交叉类型也是多个类型\",{\"1\":{\"323\":1}}],[\"交叉类型\",{\"0\":{\"323\":1}}],[\"交互队列\",{\"1\":{\"243\":1,\"245\":1}}],[\"交集查询\",{\"1\":{\"76\":1}}],[\"延时队列\",{\"1\":{\"243\":1,\"245\":1}}],[\"任务没有优先级\",{\"1\":{\"243\":1}}],[\"任意类型\",{\"0\":{\"313\":1}}],[\"任意类型数组\",{\"1\":{\"309\":1}}],[\"任意文件\",{\"1\":{\"291\":1}}],[\"任意目录\",{\"1\":{\"291\":1}}],[\"任意不一致都会导致跨域\",{\"1\":{\"218\":1}}],[\"任意深度用infinity\",{\"1\":{\"105\":1}}],[\"把多个store组合在一起\",{\"1\":{\"508\":1}}],[\"把数据分模块\",{\"1\":{\"483\":1}}],[\"把数据和回调函数名称拼接成函数调用的方式返回\",{\"1\":{\"281\":2}}],[\"把属性值映射到计算属性中去\",{\"1\":{\"478\":1}}],[\"把不能立即执行的任务交给其他线程处理\",{\"1\":{\"243\":1}}],[\"把已经创建的路径转换成裁剪路径\",{\"1\":{\"145\":1}}],[\"网络请求\",{\"1\":{\"241\":1}}],[\"网络进程内部启动多个线程来处理不同的网络任务\",{\"1\":{\"240\":1}}],[\"网络进程\",{\"1\":{\"240\":2}}],[\"渲染原理\",{\"0\":{\"254\":1}}],[\"渲染主线程的工作到此结束\",{\"1\":{\"260\":1}}],[\"渲染主线程取出消息队列的渲染任务进行渲染\",{\"1\":{\"255\":1}}],[\"渲染主线程承担着渲染页面\",{\"1\":{\"243\":1}}],[\"渲染主线程只有一个\",{\"1\":{\"243\":1}}],[\"渲染主线程会每次从消息队列去一个任务去执行\",{\"1\":{\"240\":1}}],[\"渲染主线程会进入一个无限循环\",{\"1\":{\"240\":1}}],[\"渲染进程遇到js时\",{\"1\":{\"256\":1}}],[\"渲染进程为了解决同一时间的事件冲突提出了排队\",{\"1\":{\"240\":1}}],[\"渲染进程主要处理以下内容\",{\"1\":{\"240\":1}}],[\"渲染进程\",{\"1\":{\"240\":2}}],[\"消息队列可以有多个\",{\"1\":{\"243\":2}}],[\"消息队列\",{\"1\":{\"240\":1}}],[\"负责执行\",{\"1\":{\"240\":1}}],[\"负责加载网络资源\",{\"1\":{\"240\":1}}],[\"负数\",{\"0\":{\"181\":1}}],[\"程序运行需要有它自己专属的内存空间\",{\"1\":{\"238\":1}}],[\"什么是类型守卫\",{\"0\":{\"332\":1}}],[\"什么是类型断言\",{\"0\":{\"330\":1}}],[\"什么是联合类型和交叉类型\",{\"0\":{\"328\":1}}],[\"什么是typescript\",{\"0\":{\"326\":1}}],[\"什么是跨域\",{\"0\":{\"279\":1}}],[\"什么是csrf\",{\"0\":{\"274\":1}}],[\"什么是xss\",{\"0\":{\"269\":1}}],[\"什么是重绘\",{\"0\":{\"265\":1}}],[\"什么是回流\",{\"0\":{\"264\":1}}],[\"什么是js的事件循环\",{\"0\":{\"245\":1}}],[\"什么是异步\",{\"0\":{\"241\":1}}],[\"什么是线程\",{\"0\":{\"239\":1}}],[\"什么是进程\",{\"0\":{\"238\":1}}],[\"什么是ajax\",{\"0\":{\"86\":1}}],[\"进入页面之后会执行哪些生命周期\",{\"0\":{\"492\":1}}],[\"进入缓存\",{\"1\":{\"455\":1}}],[\"进入或离开时触发transition动画组件\",{\"1\":{\"453\":1}}],[\"进入到指定目录\",{\"1\":{\"289\":1}}],[\"进而危害数据安全\",{\"1\":{\"269\":1}}],[\"进程和线程\",{\"0\":{\"237\":1}}],[\"进行读写\",{\"1\":{\"465\":1}}],[\"进行任意转换处理\",{\"1\":{\"356\":2}}],[\"进行对象属性类型声明\",{\"1\":{\"318\":1}}],[\"进行排序\",{\"0\":{\"73\":1}}],[\"进行范围请求\",{\"1\":{\"51\":1}}],[\"处理错误\",{\"1\":{\"380\":1}}],[\"处理原生进度事件\",{\"1\":{\"356\":2}}],[\"处理数据\",{\"1\":{\"234\":1}}],[\"处理超大数据\",{\"1\":{\"231\":1}}],[\"案例\",{\"0\":{\"234\":1}}],[\"错误通过onerror捕获\",{\"1\":{\"232\":1}}],[\"音频\",{\"1\":{\"231\":1}}],[\"音频等文件类型\",{\"1\":{\"83\":1}}],[\"互不干涉\",{\"1\":{\"230\":1}}],[\"心跳检测启动\",{\"1\":{\"228\":1}}],[\"心跳检测重置\",{\"1\":{\"228\":1}}],[\"心跳包\",{\"1\":{\"228\":1}}],[\"启动时间越来越长\",{\"1\":{\"534\":1}}],[\"启动之后会启动一个渲染主线程\",{\"1\":{\"240\":1}}],[\"启动心跳检测\",{\"1\":{\"228\":4}}],[\"启动应用\",{\"0\":{\"19\":1}}],[\"确保\",{\"1\":{\"369\":1}}],[\"确保连接有效不中断\",{\"1\":{\"228\":1}}],[\"确保通信双方的身份真实可信\",{\"1\":{\"57\":1}}],[\"连上客户端了\",{\"1\":{\"227\":1}}],[\"连接因错误而关闭\",{\"1\":{\"228\":1}}],[\"连接被关闭\",{\"1\":{\"228\":1}}],[\"连接开头是ws+服务端的地址\",{\"1\":{\"227\":1}}],[\"连接关闭时触发\",{\"1\":{\"226\":1}}],[\"连接多个数组\",{\"1\":{\"96\":1}}],[\"连接\",{\"1\":{\"60\":2}}],[\"恭喜你\",{\"1\":{\"227\":1}}],[\"帧\",{\"1\":{\"227\":1}}],[\"采用ajax替代\",{\"1\":{\"225\":1}}],[\"造成不必要的网络开销和延迟\",{\"1\":{\"224\":1}}],[\"轮询\",{\"1\":{\"224\":1}}],[\"减少恶意连接\",{\"1\":{\"223\":1}}],[\"减轻服务器压力和节省流量资源\",{\"1\":{\"46\":1}}],[\"游戏\",{\"1\":{\"222\":1}}],[\"另一方才能发送消息\",{\"1\":{\"222\":1}}],[\"另外一种写法\",{\"1\":{\"354\":1,\"355\":1}}],[\"另外一种是使用arcto方法实现\",{\"1\":{\"138\":1}}],[\"另外递归时\",{\"1\":{\"288\":1}}],[\"另外每个对象都有自己的获取器和修改器\",{\"1\":{\"248\":1}}],[\"另外还有一种\",{\"1\":{\"46\":1}}],[\"半双工\",{\"1\":{\"222\":1}}],[\"长轮询\",{\"1\":{\"224\":1}}],[\"长连接的客户端与服务器通信方式\",{\"1\":{\"222\":1}}],[\"长文本数据\",{\"1\":{\"83\":1}}],[\"监听一个属性\",{\"1\":{\"466\":1}}],[\"监听器\",{\"1\":{\"393\":1}}],[\"监听服务端发送的数据\",{\"1\":{\"286\":1}}],[\"监听服务器发来的消息\",{\"1\":{\"220\":1}}],[\"监听http请求\",{\"1\":{\"282\":1}}],[\"监听事件\",{\"1\":{\"241\":1}}],[\"监听3000端口\",{\"1\":{\"220\":1}}],[\"监听客户端发送的消息\",{\"1\":{\"286\":1}}],[\"监听客户端发来的消息\",{\"1\":{\"220\":1}}],[\"监听客户端连接\",{\"1\":{\"220\":1}}],[\"本身不能实现跨域通信\",{\"1\":{\"220\":1}}],[\"端口和协议\",{\"1\":{\"356\":1}}],[\"端口三者相同\",{\"1\":{\"279\":1}}],[\"端口\",{\"1\":{\"218\":1}}],[\"主要是用于解决深层次数据传递的问题\",{\"1\":{\"470\":1}}],[\"主要解决命名冲突的问题\",{\"1\":{\"337\":1}}],[\"主要负责界面显示\",{\"1\":{\"240\":1}}],[\"主要用于序列化`params`\",{\"1\":{\"356\":1}}],[\"主要用于测试或诊断\",{\"1\":{\"46\":1}}],[\"主要用于线程的编程\",{\"1\":{\"28\":1}}],[\"主线程会使用一套复杂的策略对整个布局树中进行分层\",{\"1\":{\"259\":1}}],[\"主线程会遍历dom树对象\",{\"1\":{\"257\":1}}],[\"主线程不会等待\",{\"1\":{\"256\":1}}],[\"主线程继续执行下一任务\",{\"1\":{\"243\":1}}],[\"主线程\",{\"1\":{\"234\":1}}],[\"主线程关闭子线程\",{\"1\":{\"233\":1}}],[\"主机地址\",{\"1\":{\"218\":1}}],[\"比仅仅属性可以透传\",{\"1\":{\"421\":1}}],[\"比如实现类型检查\",{\"1\":{\"344\":1}}],[\"比如坐标元素\",{\"1\":{\"310\":1}}],[\"比如\",{\"1\":{\"218\":1,\"363\":1,\"463\":1}}],[\"比较\",{\"1\":{\"164\":1}}],[\"比较数组\",{\"1\":{\"35\":1}}],[\"环境变量\",{\"1\":{\"356\":1}}],[\"环境才可正常运行\",{\"1\":{\"217\":1}}],[\"环境改为\",{\"1\":{\"17\":1}}],[\"页面跳转或者重定向使用url传参数\",{\"1\":{\"550\":1}}],[\"页面传参\",{\"1\":{\"545\":1}}],[\"页面路径传参\",{\"0\":{\"545\":1}}],[\"页面未销毁\",{\"1\":{\"543\":1}}],[\"页面上拉触底时\",{\"1\":{\"542\":1}}],[\"页面下拉时\",{\"1\":{\"542\":1}}],[\"页面事件回调钩子\",{\"1\":{\"542\":1}}],[\"页面卸载时\",{\"1\":{\"542\":1}}],[\"页面隐藏时\",{\"1\":{\"542\":1}}],[\"页面显示时\",{\"1\":{\"542\":1}}],[\"页面显示空白\",{\"0\":{\"408\":1}}],[\"页面加载时\",{\"1\":{\"542\":1}}],[\"页面的生命周期钩子函数都必须放在page函数里面\",{\"1\":{\"542\":1}}],[\"页面生命周期\",{\"0\":{\"542\":1}}],[\"页面标题\",{\"1\":{\"531\":1}}],[\"页面会默认执行create和mount\",{\"1\":{\"492\":1}}],[\"页面会自动提交表单\",{\"1\":{\"275\":1}}],[\"页面调用方法\",{\"1\":{\"481\":1}}],[\"页面内容被渲染成hhhh\",{\"1\":{\"460\":1}}],[\"页面渲染函数\",{\"1\":{\"460\":1}}],[\"页面使用时需要引入\",{\"1\":{\"363\":1}}],[\"页面无法正常渲染卡顿等现象出现\",{\"1\":{\"243\":1}}],[\"页面无需刷新与服务端进行通信\",{\"1\":{\"87\":1}}],[\"页面\",{\"1\":{\"220\":1}}],[\"页面间通信\",{\"0\":{\"218\":1}}],[\"页面引入\",{\"1\":{\"216\":1}}],[\"规范化为值\",{\"1\":{\"473\":1}}],[\"规范\",{\"0\":{\"215\":1,\"216\":1}}],[\"随着前端三剑客\",{\"1\":{\"213\":1}}],[\"倒逼着官方进步\",{\"1\":{\"213\":1}}],[\"写法\",{\"1\":{\"445\":1,\"471\":1}}],[\"写法比vuex简单\",{\"1\":{\"362\":1}}],[\"写法不同\",{\"1\":{\"342\":1}}],[\"写法更优雅\",{\"1\":{\"213\":1}}],[\"写起来更简单\",{\"1\":{\"159\":1}}],[\"永不超时\",{\"1\":{\"356\":1}}],[\"永远不会有返回值类型\",{\"0\":{\"316\":1},\"1\":{\"316\":1}}],[\"永远指向\",{\"1\":{\"210\":1}}],[\"永久性重定向\",{\"1\":{\"52\":1}}],[\"特性\",{\"1\":{\"326\":2}}],[\"特殊字段\",{\"1\":{\"272\":1}}],[\"特殊变量\",{\"0\":{\"210\":1}}],[\"特点\",{\"1\":{\"164\":1}}],[\"方式2\",{\"1\":{\"209\":1}}],[\"方式1\",{\"1\":{\"209\":1}}],[\"方法触发父组件方法传递参数\",{\"1\":{\"550\":1}}],[\"方法二\",{\"1\":{\"460\":1}}],[\"方法一\",{\"1\":{\"460\":1}}],[\"方法事件\",{\"0\":{\"429\":1}}],[\"方法对返回结果进行拦截\",{\"1\":{\"359\":1}}],[\"方法对接口请求进行拦截\",{\"1\":{\"359\":1}}],[\"方法装饰器\",{\"1\":{\"344\":1}}],[\"方法名\",{\"1\":{\"300\":1}}],[\"方法名等\",{\"1\":{\"270\":1}}],[\"方法可以更改对象的原型对象\",{\"1\":{\"184\":1}}],[\"方法可以传入实参\",{\"1\":{\"166\":1}}],[\"方法接收2个函数\",{\"1\":{\"167\":1}}],[\"方法调用\",{\"1\":{\"166\":1}}],[\"方法绘制闭合路径\",{\"1\":{\"137\":1}}],[\"方法获取迭代的键值对\",{\"1\":{\"99\":1}}],[\"方法恰好解决了这样的问题\",{\"1\":{\"95\":1}}],[\"方法虽然新颖\",{\"1\":{\"95\":1}}],[\"方法发送给服务器端\",{\"1\":{\"88\":1}}],[\"方法与服务端建立连接\",{\"1\":{\"88\":1}}],[\"方法丁香获取资源\",{\"1\":{\"52\":1}}],[\"方法能对排序好的数组进行二分查找法操作\",{\"1\":{\"35\":1}}],[\"方法比较数组中元素值是否相等\",{\"1\":{\"35\":1}}],[\"方法和变量\",{\"1\":{\"28\":1}}],[\"方法\",{\"1\":{\"27\":1,\"35\":2,\"45\":1,\"46\":1,\"170\":1,\"344\":1,\"551\":1}}],[\"动态路由场景一般都是详情页面\",{\"1\":{\"523\":1}}],[\"动态路由\",{\"0\":{\"523\":1},\"1\":{\"523\":1}}],[\"动态插槽名\",{\"0\":{\"445\":1}}],[\"动态style\",{\"0\":{\"420\":1}}],[\"动态class\",{\"0\":{\"419\":1}}],[\"动态参数\",{\"1\":{\"417\":1}}],[\"动态参数写法\",{\"1\":{\"371\":1}}],[\"动态require引入图片时报错\",{\"1\":{\"401\":1}}],[\"动态引入图片问题\",{\"0\":{\"401\":1}}],[\"动态文件抛出的对象\",{\"1\":{\"208\":1}}],[\"动态导入js模块\",{\"1\":{\"208\":1}}],[\"动态导入import\",{\"0\":{\"208\":1}}],[\"才明确数据类型\",{\"1\":{\"321\":1}}],[\"才有返回成功\",{\"1\":{\"206\":1}}],[\"才能访问到\",{\"1\":{\"185\":1}}],[\"外部不能调用\",{\"1\":{\"205\":1}}],[\"私有\",{\"1\":{\"338\":1}}],[\"私有属性\",{\"1\":{\"205\":2}}],[\"私有属性只能在类里面定义和调用\",{\"1\":{\"205\":1}}],[\"私有的\",{\"1\":{\"27\":1}}],[\"又造成了偏差\",{\"1\":{\"246\":1}}],[\"又降维又遍历\",{\"1\":{\"202\":1}}],[\"又称\",{\"1\":{\"46\":1}}],[\"zh\",{\"1\":{\"356\":1,\"513\":1}}],[\"zhangsn2\",{\"1\":{\"184\":1}}],[\"zhangsn\",{\"1\":{\"184\":1}}],[\"zhangsan\",{\"1\":{\"65\":1,\"171\":1,\"174\":1,\"282\":1}}],[\"zhangsans\",{\"1\":{\"25\":2}}],[\"zhansan\",{\"1\":{\"65\":1}}],[\"z\",{\"1\":{\"320\":1}}],[\"zss\",{\"1\":{\"200\":2}}],[\"目录说明\",{\"1\":{\"397\":1}}],[\"目标窗口协议\",{\"1\":{\"218\":1}}],[\"目标获取host属性\",{\"1\":{\"207\":1}}],[\"目标获取555\",{\"1\":{\"198\":2}}],[\"目前无论node端还是浏览器端\",{\"1\":{\"217\":1}}],[\"目前截止到es6\",{\"1\":{\"129\":1}}],[\"正在加载中\",{\"1\":{\"457\":1}}],[\"正是由于它们的存在\",{\"1\":{\"213\":1}}],[\"正向断言\",{\"1\":{\"198\":1}}],[\"正则反向断言\",{\"0\":{\"198\":1}}],[\"正则捕获分组\",{\"0\":{\"197\":1}}],[\"李明\",{\"1\":{\"194\":1}}],[\"事件修饰符\",{\"0\":{\"430\":1}}],[\"事件处理\",{\"0\":{\"427\":1}}],[\"事件也可以透传到子组件内\",{\"1\":{\"421\":1}}],[\"事件\",{\"1\":{\"391\":1,\"393\":1,\"394\":1}}],[\"事件队列\",{\"1\":{\"240\":1}}],[\"事件循环又叫消息队列\",{\"1\":{\"245\":1}}],[\"事件循环式异步的实现方法\",{\"0\":{\"244\":1}}],[\"事件循环\",{\"0\":{\"236\":1}}],[\"事件绑定\",{\"1\":{\"190\":1}}],[\"事件监听服务器端的通信状态\",{\"1\":{\"88\":1}}],[\"发起请求方法\",{\"1\":{\"554\":1}}],[\"发起重新请求\",{\"1\":{\"535\":1}}],[\"发布提交审核\",{\"1\":{\"538\":1}}],[\"发生变化时触发\",{\"1\":{\"466\":1}}],[\"发生错误时触发\",{\"1\":{\"226\":1}}],[\"发现数据更改就同步更新页面数据\",{\"1\":{\"393\":1}}],[\"发现其原型array下面有将近35个方法和一个length属性\",{\"1\":{\"94\":1}}],[\"发送请求可以发到任何生命周期中\",{\"1\":{\"488\":1}}],[\"发送请求在create阶段还是在mounted阶段\",{\"0\":{\"488\":1}}],[\"发送请求到\",{\"1\":{\"356\":1}}],[\"发送请求体数据的可选语法\",{\"1\":{\"356\":1}}],[\"发送消息\",{\"1\":{\"226\":1,\"227\":1}}],[\"发送消息到服务器\",{\"1\":{\"220\":1}}],[\"发送\",{\"1\":{\"190\":1}}],[\"发送ajax\",{\"1\":{\"190\":1}}],[\"右上角\",{\"1\":{\"538\":1}}],[\"右侧表达式\",{\"1\":{\"190\":1}}],[\"右连接\",{\"1\":{\"78\":1}}],[\"结果是\",{\"1\":{\"372\":2}}],[\"结果就是promise的结果\",{\"1\":{\"190\":1}}],[\"结尾\",{\"1\":{\"363\":1}}],[\"结束路径closepath\",{\"1\":{\"135\":1}}],[\"结束时间是第\",{\"1\":{\"83\":1}}],[\"结束本次循环\",{\"1\":{\"33\":1}}],[\"幂运算\",{\"0\":{\"188\":1}}],[\"针对default默认暴露\",{\"1\":{\"185\":1}}],[\"统一暴露\",{\"1\":{\"185\":1}}],[\"统计性别分别对应的数量\",{\"1\":{\"76\":1}}],[\"统计用户数量\",{\"1\":{\"76\":1}}],[\"取消导航并把错误传给全局处理器\",{\"1\":{\"380\":1}}],[\"取消ssl验证\",{\"1\":{\"290\":1}}],[\"取消请求\",{\"0\":{\"93\":1}}],[\"取别名\",{\"1\":{\"185\":1}}],[\"高级类型\",{\"1\":{\"334\":1}}],[\"高维护\",{\"1\":{\"185\":1}}],[\"高度自动变化\",{\"1\":{\"546\":1}}],[\"高度\",{\"1\":{\"134\":1}}],[\"北京\",{\"1\":{\"184\":1}}],[\"北京时间\",{\"1\":{\"83\":1}}],[\"男\",{\"1\":{\"184\":1,\"300\":1,\"317\":1}}],[\"抹掉小数部分\",{\"0\":{\"180\":1}}],[\"重定向跳转\",{\"1\":{\"543\":1}}],[\"重定向\",{\"1\":{\"517\":1}}],[\"重复赋值\",{\"1\":{\"464\":1}}],[\"重置state\",{\"1\":{\"365\":1}}],[\"重名问题\",{\"1\":{\"337\":1}}],[\"重构更加简单\",{\"1\":{\"297\":1}}],[\"重绘的本质是重新根据分层信息计算绘制指令\",{\"1\":{\"265\":1}}],[\"重新计算布局\",{\"1\":{\"264\":1}}],[\"重写后子类方法生效\",{\"1\":{\"173\":1}}],[\"重叠部分会变成透明\",{\"1\":{\"146\":1}}],[\"子传父\",{\"1\":{\"498\":1}}],[\"子\",{\"1\":{\"494\":1}}],[\"子组件也可以通过\",{\"1\":{\"550\":1}}],[\"子组件如何修改父组件的值\",{\"0\":{\"499\":1}}],[\"子组件加载完毕之后\",{\"1\":{\"494\":1}}],[\"子组件的2大周期会在父组件beforemount之后执行\",{\"1\":{\"494\":1}}],[\"子组件emit触发父方法\",{\"0\":{\"441\":1}}],[\"子组件不可修改props参数\",{\"1\":{\"440\":1}}],[\"子组件通过emit调用父组件方法\",{\"1\":{\"441\":1}}],[\"子组件通过\",{\"1\":{\"440\":1,\"498\":2,\"550\":1}}],[\"子组件通过definedmodel的setter方法实现自定义修饰符\",{\"1\":{\"436\":1}}],[\"子组件\",{\"1\":{\"434\":1,\"435\":1,\"440\":1,\"441\":1}}],[\"子进程管理等\",{\"1\":{\"240\":1}}],[\"子线程不能使用以下\",{\"1\":{\"234\":1}}],[\"子线程\",{\"1\":{\"234\":1}}],[\"子线程关闭当前线程\",{\"1\":{\"233\":1}}],[\"子页面\",{\"1\":{\"219\":1}}],[\"子类通过关键字\",{\"1\":{\"303\":1}}],[\"子类\",{\"1\":{\"303\":1}}],[\"子类方法生效\",{\"1\":{\"303\":1}}],[\"子类方法会重写改方法\",{\"1\":{\"303\":1}}],[\"子类方法与父类方法同名\",{\"1\":{\"303\":1}}],[\"子类内方法名和父类方法名一致\",{\"1\":{\"173\":1}}],[\"子类继承父类的所有属性和方法\",{\"1\":{\"303\":1}}],[\"子类继承\",{\"1\":{\"173\":1}}],[\"子查询\",{\"0\":{\"77\":1}}],[\"打印改元素\",{\"1\":{\"315\":1}}],[\"打开网站时从数据库携带出\",{\"1\":{\"271\":1}}],[\"打电话\",{\"1\":{\"173\":1}}],[\"打包时遇到\",{\"1\":{\"530\":1}}],[\"打包后\",{\"0\":{\"516\":1}}],[\"打包之后白屏问题什么原因导致的\",{\"0\":{\"515\":1}}],[\"打包问题\",{\"0\":{\"514\":1}}],[\"打包\",{\"1\":{\"185\":1}}],[\"打包工具\",{\"1\":{\"185\":1}}],[\"打包命令\",{\"1\":{\"20\":1,\"525\":1}}],[\"打包步骤\",{\"0\":{\"20\":1}}],[\"键值\",{\"1\":{\"169\":1}}],[\"清理缓存\",{\"1\":{\"290\":1}}],[\"清理cmd\",{\"1\":{\"289\":1}}],[\"清空集合\",{\"1\":{\"168\":1,\"169\":1}}],[\"清除矩形区域clearrect\",{\"1\":{\"134\":1}}],[\"清除矩形区域的内容\",{\"1\":{\"134\":1}}],[\"清除默认布局\",{\"1\":{\"39\":1}}],[\"集合用法\",{\"1\":{\"168\":1}}],[\"集合元素长度\",{\"1\":{\"168\":1}}],[\"集合中元素不能有重复\",{\"1\":{\"168\":1}}],[\"集合\",{\"0\":{\"168\":1}}],[\"那些组件生效\",{\"1\":{\"455\":1}}],[\"那么生命周期执行循序是什么\",{\"0\":{\"494\":1}}],[\"那么父组件需要再\",{\"1\":{\"488\":1}}],[\"那么返回promise对象的状态是失败\",{\"1\":{\"190\":1}}],[\"那么返回值是对象成功的值\",{\"1\":{\"167\":1}}],[\"那么async的返回promise对象的状态是成功\",{\"1\":{\"190\":1}}],[\"那好\",{\"1\":{\"59\":1}}],[\"调用wx\",{\"1\":{\"554\":1}}],[\"调用setup的数据\",{\"1\":{\"524\":1}}],[\"调用\",{\"1\":{\"482\":1}}],[\"调用时返回包装后的数据\",{\"1\":{\"477\":1}}],[\"调用时机为首次挂载\",{\"1\":{\"455\":1}}],[\"调用options里面methods里面的这个方法\",{\"1\":{\"391\":1}}],[\"调用函数钩子并改变this指向到构造函数\",{\"1\":{\"390\":1}}],[\"调用的时候编辑器会提示该函数的多种用法\",{\"1\":{\"345\":1}}],[\"调用promise对象的then方法\",{\"1\":{\"167\":1}}],[\"调用对象的next方法\",{\"1\":{\"165\":1}}],[\"调用对象\",{\"1\":{\"25\":1}}],[\"成功\",{\"1\":{\"167\":1}}],[\"已失败\",{\"1\":{\"167\":1}}],[\"已成功\",{\"1\":{\"167\":1}}],[\"已经偏离了方向\",{\"1\":{\"129\":1}}],[\"避免store数据臃肿\",{\"1\":{\"477\":1}}],[\"避免类型不一致报错的场景出现\",{\"1\":{\"330\":1}}],[\"避免函数嵌套函数的情况出现\",{\"1\":{\"166\":2}}],[\"避免多个||或语句判断\",{\"1\":{\"109\":1}}],[\"执行速度是js的10到100倍\",{\"1\":{\"536\":1}}],[\"执行更新页面数据\",{\"1\":{\"393\":1}}],[\"执行一个数据监听的方法\",{\"1\":{\"393\":1}}],[\"执行一次和多次效果一样\",{\"1\":{\"47\":1}}],[\"执行js等工作\",{\"1\":{\"243\":1}}],[\"执行js代码等\",{\"1\":{\"240\":1}}],[\"执行完成之后\",{\"1\":{\"240\":1}}],[\"执行\",{\"1\":{\"218\":1}}],[\"执行函数\",{\"1\":{\"215\":1}}],[\"执行下一次调用\",{\"1\":{\"166\":2}}],[\"函数中访问\",{\"1\":{\"484\":2}}],[\"函数表达式\",{\"1\":{\"465\":1}}],[\"函数表达式类型\",{\"0\":{\"319\":1}}],[\"函数版本接收2个参数\",{\"1\":{\"460\":1}}],[\"函数版本\",{\"1\":{\"460\":1}}],[\"函数来描述组件逻辑\",{\"1\":{\"411\":1}}],[\"函数重载是指函数根据传入不同的参数\",{\"1\":{\"345\":1}}],[\"函数类型的默认值\",{\"1\":{\"440\":1}}],[\"函数类型\",{\"1\":{\"334\":1}}],[\"函数返回值\",{\"1\":{\"467\":1}}],[\"函数返回\",{\"1\":{\"288\":1}}],[\"函数返回等\",{\"1\":{\"288\":1}}],[\"函数\",{\"0\":{\"459\":1},\"1\":{\"248\":2,\"466\":1}}],[\"函数的返回值是一个promise对象\",{\"1\":{\"190\":1}}],[\"函数的状态有\",{\"1\":{\"167\":1}}],[\"函数调用生成器next方法\",{\"1\":{\"166\":2}}],[\"函数里面通过关键字\",{\"1\":{\"166\":1}}],[\"函数参数设置默认值\",{\"0\":{\"161\":1}}],[\"自动转数字\",{\"1\":{\"433\":1}}],[\"自动安装vue3只有vue3\",{\"1\":{\"397\":1}}],[\"自定义属性设置动态参数\",{\"1\":{\"544\":1}}],[\"自定义组件的名字\",{\"0\":{\"462\":1}}],[\"自定义指令写法\",{\"1\":{\"447\":1}}],[\"自定义指令由一个包含类似组件生命周期钩子的对象来定义\",{\"1\":{\"447\":1}}],[\"自定义指令\",{\"0\":{\"447\":1}}],[\"自定义类型校验函数\",{\"1\":{\"440\":1}}],[\"自定义model修饰符\",{\"0\":{\"436\":1}}],[\"自定义请求头\",{\"1\":{\"356\":1}}],[\"自定义遍历数据\",{\"1\":{\"165\":1}}],[\"自学能力极强\",{\"1\":{\"5\":1}}],[\"应用程序的\",{\"1\":{\"526\":1}}],[\"应用程序上执行非本意的操作的攻击方法\",{\"1\":{\"274\":1}}],[\"应用已经启动了\",{\"1\":{\"369\":1}}],[\"应用案例\",{\"0\":{\"329\":1}}],[\"应用场景\",{\"0\":{\"231\":1},\"1\":{\"165\":1,\"207\":1,\"209\":1,\"222\":1}}],[\"应使用\",{\"1\":{\"52\":1}}],[\"指令的定义对象\",{\"1\":{\"449\":1}}],[\"指令的钩子会传递以下几种参数\",{\"1\":{\"449\":1}}],[\"指令绑定到的元素\",{\"1\":{\"449\":1}}],[\"指令钩子\",{\"0\":{\"448\":1}}],[\"指令来监听dom事件\",{\"1\":{\"427\":1}}],[\"指令\",{\"1\":{\"394\":1}}],[\"指向了city\",{\"1\":{\"184\":1}}],[\"指向当前数据结构的起始位置\",{\"1\":{\"165\":1}}],[\"指针都会一直往后移动\",{\"1\":{\"165\":1}}],[\"指针知道指向第一个成员\",{\"1\":{\"165\":1}}],[\"指定场景下禁用\",{\"1\":{\"456\":1}}],[\"指定具名插槽通过\",{\"1\":{\"444\":1}}],[\"指定绑定自定义属性\",{\"1\":{\"417\":1}}],[\"指定路由模式\",{\"0\":{\"370\":1}}],[\"指定请求超时的毫秒数\",{\"1\":{\"356\":1}}],[\"指定要使用模块化的规范\",{\"1\":{\"291\":1}}],[\"指定域名或者\",{\"1\":{\"282\":1}}],[\"指定哪些窗口可以接收消息\",{\"1\":{\"218\":1}}],[\"指定范围\",{\"0\":{\"70\":1}}],[\"指定字母的小写形式\",{\"1\":{\"37\":1}}],[\"指定字母的大写形式\",{\"1\":{\"37\":1}}],[\"迭代器可以传参\",{\"1\":{\"166\":1}}],[\"迭代器iterator是一种接口\",{\"1\":{\"165\":1}}],[\"迭代器\",{\"0\":{\"165\":1}}],[\"稀罕三\",{\"1\":{\"164\":4}}],[\"扩展全局属性\",{\"1\":{\"458\":1}}],[\"扩展运算符和rest参数\",{\"0\":{\"196\":1}}],[\"扩展运算符的应用\",{\"1\":{\"163\":1}}],[\"扩展运算符\",{\"0\":{\"163\":1},\"1\":{\"288\":1}}],[\"扩展到了35个方法\",{\"1\":{\"129\":1}}],[\"多种可能的类型\",{\"1\":{\"440\":1}}],[\"多种类型满足一种\",{\"1\":{\"328\":1}}],[\"多个入口文件\",{\"1\":{\"528\":1}}],[\"多个以\",{\"1\":{\"455\":2}}],[\"多个子元素为根元素时\",{\"1\":{\"421\":1}}],[\"多个根元素\",{\"1\":{\"419\":1}}],[\"多个属性绑定\",{\"1\":{\"417\":1}}],[\"多个属性可以用\",{\"1\":{\"318\":1}}],[\"多个返回结果可以通过axios\",{\"1\":{\"358\":1}}],[\"多个未知任意属性通过\",{\"1\":{\"318\":1}}],[\"多个参数\",{\"1\":{\"162\":1}}],[\"多用于数组求和\",{\"1\":{\"118\":1}}],[\"形参初始值\",{\"1\":{\"161\":1}}],[\"形状合成\",{\"0\":{\"146\":1}}],[\"箭头函数的this始终指向函数声明时所在作用域的this\",{\"1\":{\"160\":1}}],[\"箭头函数\",{\"0\":{\"160\":1},\"1\":{\"403\":1}}],[\"简称\",{\"1\":{\"269\":1}}],[\"简单的说就是将\",{\"1\":{\"254\":1}}],[\"简单的canvas绘制矩形的方法\",{\"1\":{\"134\":1,\"137\":1}}],[\"简写\",{\"1\":{\"160\":1,\"417\":1,\"427\":1}}],[\"简化写法\",{\"0\":{\"450\":1},\"1\":{\"159\":1}}],[\"`count\",{\"1\":{\"466\":1,\"469\":1}}],[\"`config`\",{\"1\":{\"357\":1}}],[\"`routes\",{\"1\":{\"369\":1}}],[\"`routes`\",{\"1\":{\"369\":1}}],[\"`request`\",{\"1\":{\"357\":1}}],[\"`response\",{\"1\":{\"357\":1}}],[\"`responseencoding`\",{\"1\":{\"356\":1}}],[\"`responsetype`\",{\"1\":{\"356\":3}}],[\"`store`\",{\"1\":{\"363\":1}}],[\"`statustext`\",{\"1\":{\"357\":1}}],[\"`status`\",{\"1\":{\"357\":1}}],[\"`socketpath`\",{\"1\":{\"356\":3}}],[\"`doublecount`\",{\"1\":{\"365\":1}}],[\"`definestore\",{\"1\":{\"363\":1}}],[\"`decompress`\",{\"1\":{\"356\":1}}],[\"`data`\",{\"1\":{\"356\":1,\"357\":1}}],[\"`headers`\",{\"1\":{\"356\":1,\"357\":1}}],[\"`https\",{\"1\":{\"356\":1}}],[\"`httpsagent`\",{\"1\":{\"356\":1}}],[\"`httpagent`\",{\"1\":{\"356\":1}}],[\"`false`\",{\"1\":{\"356\":1}}],[\"`keepalive`\",{\"1\":{\"356\":1}}],[\"`proxy\",{\"1\":{\"356\":2}}],[\"`proxy`\",{\"1\":{\"356\":2}}],[\"`paramsserializer`是可选方法\",{\"1\":{\"356\":1}}],[\"`params`\",{\"1\":{\"356\":1}}],[\"`updated`\",{\"1\":{\"450\":1}}],[\"`userdetails`\",{\"1\":{\"383\":1}}],[\"`useproductstore`\",{\"1\":{\"363\":1}}],[\"`usecartstore`\",{\"1\":{\"363\":1}}],[\"`useuserstore`\",{\"1\":{\"363\":1}}],[\"`use`\",{\"1\":{\"363\":1}}],[\"`undefined`\",{\"1\":{\"356\":1,\"440\":1}}],[\"`url`\",{\"1\":{\"356\":3}}],[\"`name`\",{\"1\":{\"365\":1}}],[\"`null`\",{\"1\":{\"356\":1,\"440\":1}}],[\"`new\",{\"1\":{\"344\":1}}],[\"`validatestatus`\",{\"1\":{\"356\":2}}],[\"`message\",{\"1\":{\"469\":1}}],[\"`method`\",{\"1\":{\"356\":1}}],[\"`method\",{\"1\":{\"344\":1}}],[\"`mounted`\",{\"1\":{\"450\":1}}],[\"`maxredirects`\",{\"1\":{\"356\":1}}],[\"`maxbodylength`\",{\"1\":{\"356\":1}}],[\"`maxcontentlength`\",{\"1\":{\"356\":1}}],[\"`ondownloadprogress`\",{\"1\":{\"356\":1}}],[\"`onuploadprogress`\",{\"1\":{\"356\":1}}],[\"`xsrfheadername`\",{\"1\":{\"356\":1}}],[\"`xsrfcookiename`\",{\"1\":{\"356\":1}}],[\"`axios`\",{\"1\":{\"357\":1}}],[\"`auth`表示应使用http\",{\"1\":{\"356\":1}}],[\"`auth`\",{\"1\":{\"356\":1}}],[\"`adapter`\",{\"1\":{\"356\":1}}],[\"`withcredentials`\",{\"1\":{\"356\":1}}],[\"`0`\",{\"1\":{\"356\":1}}],[\"`the\",{\"1\":{\"411\":1}}],[\"`this`\",{\"1\":{\"383\":3}}],[\"`true`\",{\"1\":{\"356\":2}}],[\"`transformresponse`\",{\"1\":{\"356\":1}}],[\"`transformrequest`\",{\"1\":{\"356\":2}}],[\"`timeout`\",{\"1\":{\"356\":2}}],[\"`beforerouteupdate`\",{\"1\":{\"383\":1}}],[\"`baseurl`\",{\"1\":{\"356\":2}}],[\"`brand\",{\"1\":{\"332\":1}}],[\"`\",{\"1\":{\"158\":1,\"281\":1,\"332\":1,\"344\":2,\"357\":1,\"363\":1,\"383\":5,\"411\":1,\"439\":1,\"466\":1,\"469\":2}}],[\"`$\",{\"1\":{\"158\":1,\"281\":1}}],[\"``\",{\"1\":{\"158\":1}}],[\"$on\",{\"1\":{\"498\":1}}],[\"$options\",{\"1\":{\"391\":2,\"393\":2,\"394\":1}}],[\"$params\",{\"1\":{\"553\":1}}],[\"$parent\",{\"1\":{\"498\":1,\"499\":1}}],[\"$patch\",{\"1\":{\"365\":2}}],[\"$nexttick\",{\"1\":{\"491\":1}}],[\"$store\",{\"1\":{\"478\":2,\"479\":1,\"482\":2}}],[\"$translate\",{\"1\":{\"458\":1}}],[\"$http\",{\"1\":{\"458\":1}}],[\"$emit\",{\"1\":{\"498\":2}}],[\"$event\",{\"1\":{\"434\":1}}],[\"$el\",{\"1\":{\"389\":2,\"390\":6,\"391\":1,\"393\":2}}],[\"$attrs\",{\"1\":{\"419\":3,\"421\":1}}],[\"$watchevent\",{\"1\":{\"393\":7}}],[\"$data\",{\"1\":{\"389\":2,\"390\":5,\"392\":3,\"393\":5,\"490\":1}}],[\"$root\",{\"1\":{\"501\":1}}],[\"$router\",{\"1\":{\"521\":2}}],[\"$route\",{\"1\":{\"371\":1,\"521\":4}}],[\"$refs\",{\"1\":{\"500\":1}}],[\"$reset\",{\"1\":{\"365\":1}}],[\"$\",{\"1\":{\"158\":1,\"215\":2,\"216\":1,\"281\":1,\"332\":2,\"344\":3,\"411\":1,\"466\":1,\"469\":2}}],[\"模态组件用于把弹出层\",{\"1\":{\"456\":1}}],[\"模板文件\",{\"1\":{\"531\":1}}],[\"模板引用\",{\"0\":{\"437\":1}}],[\"模板使用\",{\"1\":{\"419\":1}}],[\"模板语法\",{\"0\":{\"414\":1}}],[\"模板编译\",{\"1\":{\"389\":1,\"390\":1,\"391\":1,\"393\":2,\"394\":1}}],[\"模板字符串中使用\",{\"1\":{\"158\":1}}],[\"模板字符串用\",{\"1\":{\"158\":1}}],[\"模板字符串\",{\"0\":{\"158\":1}}],[\"模式\",{\"0\":{\"517\":2,\"532\":1},\"1\":{\"369\":1,\"516\":2,\"519\":1,\"527\":1}}],[\"模式的实现\",{\"1\":{\"369\":1}}],[\"模拟返回数据\",{\"1\":{\"282\":1}}],[\"模拟的长连接\",{\"1\":{\"224\":1}}],[\"模块\",{\"0\":{\"483\":1},\"1\":{\"337\":1,\"477\":1,\"527\":1}}],[\"模块等功能\",{\"1\":{\"326\":1}}],[\"模块文件\",{\"1\":{\"214\":1}}],[\"模块功能主要有export和import构成\",{\"1\":{\"185\":1}}],[\"模块化背景\",{\"0\":{\"213\":1}}],[\"模块化优点\",{\"1\":{\"185\":1}}],[\"模块化是将一个大工程文件拆分成许多小文件\",{\"1\":{\"185\":1}}],[\"模糊查询\",{\"0\":{\"71\":1}}],[\"张三\",{\"1\":{\"157\":1,\"158\":1,\"159\":1,\"185\":4,\"196\":2,\"203\":2,\"318\":3,\"463\":1}}],[\"张三的等级为1\",{\"1\":{\"65\":1}}],[\"解除时调用该函数就可以自动解除对应的监听事件\",{\"1\":{\"468\":1}}],[\"解决\",{\"1\":{\"513\":1}}],[\"解决ts不识别的文件类型\",{\"1\":{\"401\":1}}],[\"解决办法就是分到2个元素上\",{\"1\":{\"426\":1}}],[\"解决办法\",{\"1\":{\"397\":1,\"405\":1,\"548\":1}}],[\"解决方案\",{\"0\":{\"280\":1}}],[\"解决回调地狱问题\",{\"1\":{\"166\":1}}],[\"解构参数\",{\"1\":{\"436\":1}}],[\"解构对象\",{\"1\":{\"157\":1}}],[\"解构数组\",{\"1\":{\"157\":1}}],[\"解构赋值\",{\"0\":{\"157\":1},\"1\":{\"185\":1}}],[\"解析html\",{\"1\":{\"240\":1}}],[\"解析\",{\"1\":{\"60\":1}}],[\"潜规则\",{\"1\":{\"156\":1}}],[\"常见问题\",{\"0\":{\"547\":1}}],[\"常见的深拷贝方法\",{\"1\":{\"288\":1}}],[\"常量枚举编译后会被删除\",{\"1\":{\"329\":1}}],[\"常量不能修改\",{\"1\":{\"156\":1}}],[\"常用ref定义基本类型\",{\"1\":{\"464\":1}}],[\"常用2种为\",{\"1\":{\"367\":1}}],[\"常用配置\",{\"1\":{\"291\":1}}],[\"常用于多页面应用\",{\"1\":{\"215\":1}}],[\"常用于cors跨域资源请求中\",{\"1\":{\"46\":1}}],[\"常用软件\",{\"0\":{\"7\":1}}],[\"块级作用域\",{\"1\":{\"155\":1,\"156\":1}}],[\"推荐使用mutation修改数据\",{\"1\":{\"479\":1}}],[\"推荐使用箭头函数\",{\"1\":{\"365\":1}}],[\"推荐\",{\"1\":{\"159\":1}}],[\"推荐内容\",{\"1\":{\"8\":1}}],[\"推出的js的版本\",{\"1\":{\"153\":1}}],[\"火狐等\",{\"1\":{\"153\":1}}],[\"谷歌\",{\"1\":{\"153\":1}}],[\"纵比例\",{\"1\":{\"151\":1}}],[\"横比例\",{\"1\":{\"151\":1}}],[\"缩写为\",{\"1\":{\"445\":1}}],[\"缩放\",{\"1\":{\"151\":1,\"546\":1}}],[\"缩短请求时间\",{\"1\":{\"56\":1}}],[\"刮奖效果\",{\"1\":{\"151\":1}}],[\"该钩子函数执行\",{\"1\":{\"554\":1}}],[\"该函数接收组件所接收到的原始\",{\"1\":{\"440\":1}}],[\"该写法会将\",{\"1\":{\"364\":1}}],[\"该类及其子类的所有成员都可以访问它们\",{\"1\":{\"338\":1}}],[\"该线程称之为主线程\",{\"1\":{\"239\":1}}],[\"该方法用于\",{\"1\":{\"151\":1}}],[\"该对象包含了数组的键\",{\"1\":{\"113\":1}}],[\"该对象包含数组的键值对\",{\"1\":{\"99\":1}}],[\"背景填充\",{\"0\":{\"151\":1}}],[\"径向渐变\",{\"0\":{\"150\":1}}],[\"代表之前的渲染中指令所绑定元素的\",{\"1\":{\"449\":1}}],[\"代表绑定元素的底层\",{\"1\":{\"449\":1}}],[\"代表任意字\",{\"1\":{\"71\":1}}],[\"代理打包之后\",{\"0\":{\"513\":1}}],[\"代理函数\",{\"1\":{\"393\":1}}],[\"代理转发\",{\"0\":{\"284\":1}}],[\"代理服务方法\",{\"0\":{\"283\":1}}],[\"代理路径\",{\"1\":{\"149\":1}}],[\"代码块要用需要使用解构获取参数\",{\"1\":{\"505\":1}}],[\"代码块或数据时\",{\"1\":{\"502\":1}}],[\"代码可读性下降\",{\"1\":{\"336\":1}}],[\"代码\",{\"1\":{\"305\":1}}],[\"代码被拼接到浏览器中执行\",{\"1\":{\"271\":1}}],[\"代码在执行的过程中\",{\"1\":{\"241\":1}}],[\"代码实例\",{\"1\":{\"216\":1}}],[\"代码案例\",{\"1\":{\"214\":1,\"215\":1}}],[\"代码复用\",{\"1\":{\"185\":1}}],[\"决定线性渐变的方向\",{\"1\":{\"149\":1}}],[\"线程开启之后需要手动关闭\",{\"1\":{\"233\":1}}],[\"线性渐变\",{\"0\":{\"149\":1}}],[\"线宽\",{\"1\":{\"135\":1}}],[\"渐变颜色\",{\"0\":{\"148\":1}}],[\"颜色\",{\"0\":{\"147\":1}}],[\"边透明\",{\"1\":{\"146\":1}}],[\"保证不同标签页之间互不影响\",{\"1\":{\"240\":1}}],[\"保证重叠部分最量的像素\",{\"1\":{\"146\":1}}],[\"保持原图宽高比不变\",{\"1\":{\"546\":1}}],[\"保持纵横比缩放图片\",{\"1\":{\"546\":2}}],[\"保持长连接\",{\"1\":{\"224\":1}}],[\"保持连接打开\",{\"1\":{\"224\":1}}],[\"保留数值\",{\"1\":{\"178\":1}}],[\"保留重叠部分最黑的像素\",{\"1\":{\"146\":1}}],[\"保存数据是键值对集合\",{\"1\":{\"169\":1}}],[\"保存坐原点平移之前的状态\",{\"1\":{\"142\":1}}],[\"老图像仅仅仅仅显示重叠部分\",{\"1\":{\"146\":1}}],[\"老图像仍然可以显示\",{\"1\":{\"146\":1}}],[\"老图像也不显示\",{\"1\":{\"146\":1}}],[\"其子类以及该类的实例都可以访问\",{\"1\":{\"338\":1}}],[\"其余的全部被清除\",{\"1\":{\"146\":1}}],[\"其余部分全部透明\",{\"1\":{\"146\":1}}],[\"其他配置\",{\"1\":{\"363\":1}}],[\"其他属性可选\",{\"1\":{\"356\":1}}],[\"其他属性通过子类继承实现\",{\"1\":{\"320\":1}}],[\"其他都会报错\",{\"1\":{\"317\":1}}],[\"其他线程把任务加入到消息队列尾部等待执行\",{\"1\":{\"245\":1}}],[\"其他线程把计时器网络请求等包装成任务\",{\"1\":{\"243\":1}}],[\"其他线程随时添加新任务到消息队列尾部\",{\"1\":{\"240\":1}}],[\"其他窗口的引用\",{\"1\":{\"218\":1}}],[\"其他区域全部透明\",{\"1\":{\"146\":1}}],[\"其他区域都变成透明的\",{\"1\":{\"146\":1}}],[\"其他的字段也需要带着\",{\"1\":{\"49\":1}}],[\"其他方法\",{\"1\":{\"36\":1,\"37\":1,\"129\":1,\"354\":1}}],[\"仅监听一次\",{\"1\":{\"466\":1}}],[\"仅在\",{\"1\":{\"449\":2}}],[\"仅当没有按下任何系统按键时触发\",{\"1\":{\"431\":1}}],[\"仅当按下\",{\"1\":{\"431\":1}}],[\"仅符合条件的时候才触发\",{\"1\":{\"431\":1}}],[\"仅触发一次\",{\"1\":{\"430\":1}}],[\"仅node\",{\"1\":{\"356\":1}}],[\"仅适用\",{\"1\":{\"356\":1}}],[\"仅支持get方法\",{\"1\":{\"281\":1}}],[\"仅会对该层进行后续处理\",{\"1\":{\"259\":1}}],[\"仅仅新老图像重叠部分的老图像被显示\",{\"1\":{\"146\":1}}],[\"仅仅会出现新图像与原来图像重叠的部分\",{\"1\":{\"146\":1}}],[\"仅显示统计数量大于4的\",{\"1\":{\"76\":1}}],[\"裁剪路径外的区域会被隐藏\",{\"1\":{\"145\":1}}],[\"裁剪路径的作用是遮罩\",{\"1\":{\"145\":1}}],[\"裁剪\",{\"0\":{\"145\":1},\"1\":{\"546\":1}}],[\"它会原样返回参数\",{\"1\":{\"473\":1}}],[\"它会调用函数并返回其返回值\",{\"1\":{\"473\":1}}],[\"它会返回\",{\"1\":{\"473\":1}}],[\"它会覆盖\",{\"1\":{\"356\":1}}],[\"它的设计目的是将\",{\"1\":{\"473\":1}}],[\"它的优势\",{\"0\":{\"329\":1}}],[\"它都可用\",{\"1\":{\"449\":1}}],[\"它可以访问组件实例\",{\"1\":{\"383\":1}}],[\"它可以通过设置一个\",{\"1\":{\"356\":1}}],[\"它有三个核心内容\",{\"1\":{\"364\":1}}],[\"它允许你跨组件或页面共享状态\",{\"1\":{\"362\":1}}],[\"它只能用于\",{\"1\":{\"356\":1}}],[\"它在提供元编程能力方面特别有用\",{\"1\":{\"344\":1}}],[\"它类似于一种特殊类型的声明\",{\"1\":{\"344\":1}}],[\"它们分别是true和false\",{\"1\":{\"307\":1}}],[\"它开启一个不会结束的for循环\",{\"1\":{\"245\":1}}],[\"它运行在浏览器的渲染主线程中\",{\"1\":{\"243\":1}}],[\"它是js的超集\",{\"1\":{\"326\":1}}],[\"它是一种网络接口\",{\"1\":{\"230\":1}}],[\"它是基于http模型\",{\"1\":{\"224\":1}}],[\"它是顺时针方向的\",{\"1\":{\"143\":1}}],[\"它永远是成功的\",{\"1\":{\"206\":1}}],[\"它基于客户端\",{\"1\":{\"44\":1}}],[\"旋转的中心是坐标原点\",{\"1\":{\"143\":1}}],[\"旋转坐标轴旋转的角度\",{\"1\":{\"143\":1}}],[\"旋转\",{\"0\":{\"143\":1},\"1\":{\"263\":1}}],[\"天若有情\",{\"1\":{\"141\":1}}],[\"基础类型检查\",{\"1\":{\"440\":1}}],[\"基础知识\",{\"0\":{\"413\":1}}],[\"基于node环境\",{\"1\":{\"214\":1}}],[\"基线对齐方式\",{\"1\":{\"141\":1}}],[\"基本类型\",{\"1\":{\"23\":1,\"334\":1}}],[\"基本信息\",{\"0\":{\"2\":1}}],[\"文本插值\",{\"0\":{\"415\":1}}],[\"文本节点\",{\"1\":{\"389\":1,\"391\":1,\"393\":1}}],[\"文本方向\",{\"1\":{\"141\":1}}],[\"文字样式\",{\"1\":{\"141\":1}}],[\"文字样式可选属性\",{\"1\":{\"141\":1}}],[\"文字大小和样式\",{\"1\":{\"141\":1}}],[\"文件内容新增环境变量\",{\"1\":{\"513\":1}}],[\"文件设置全局可识别\",{\"1\":{\"401\":1}}],[\"文件中\",{\"1\":{\"344\":1}}],[\"文件对象就是返回值\",{\"1\":{\"208\":1}}],[\"文件\",{\"1\":{\"185\":1,\"289\":2,\"553\":1}}],[\"文件名\",{\"1\":{\"66\":2,\"529\":1,\"530\":1}}],[\"文件大小\",{\"1\":{\"46\":1}}],[\"位置绘制描边文字\",{\"1\":{\"141\":1}}],[\"位置填充指定的文本\",{\"1\":{\"141\":1}}],[\"间隙长度\",{\"1\":{\"140\":1}}],[\"虚线\",{\"0\":{\"140\":1},\"1\":{\"140\":1,\"141\":1}}],[\"至少三个点\",{\"1\":{\"139\":1}}],[\"控制点2\",{\"1\":{\"139\":2}}],[\"控制点1\",{\"1\":{\"139\":1}}],[\"控制台输出\",{\"1\":{\"41\":1}}],[\"没有使用setup语法糖\",{\"1\":{\"441\":1}}],[\"没有正式发布\",{\"1\":{\"344\":1}}],[\"没有起点\",{\"1\":{\"139\":1}}],[\"没有找到返回\",{\"1\":{\"114\":1}}],[\"贝塞尔三次次曲线beziercurveto\",{\"1\":{\"139\":1}}],[\"贝塞尔一次\",{\"1\":{\"139\":1}}],[\"贝塞尔曲线是一次直线\",{\"1\":{\"139\":1}}],[\"贝塞尔曲线\",{\"0\":{\"139\":1},\"1\":{\"139\":1}}],[\"再加上vite底层是go语言开发了\",{\"1\":{\"536\":1}}],[\"再返给浏览器\",{\"1\":{\"534\":1}}],[\"再执行子组件的前4个周期\",{\"1\":{\"488\":1}}],[\"再根据节点类型nodetype\",{\"1\":{\"389\":1}}],[\"再使用这个结构类型限制对象\",{\"1\":{\"318\":1}}],[\"再调用\",{\"1\":{\"300\":1}}],[\"再拿下一个任务\",{\"1\":{\"240\":1}}],[\"再创建控制点\",{\"1\":{\"139\":1}}],[\"再进行相加\",{\"1\":{\"24\":1}}],[\"都有什么区别\",{\"0\":{\"519\":1}}],[\"都使用v\",{\"1\":{\"416\":1,\"417\":1}}],[\"都使用\",{\"1\":{\"415\":1}}],[\"都允许互相扩展extends\",{\"1\":{\"342\":1}}],[\"都可以给对象指定类型\",{\"1\":{\"342\":1}}],[\"都可以进行for\",{\"1\":{\"165\":1}}],[\"都是为了简化复用对象结构\",{\"1\":{\"342\":1}}],[\"都是为了前端模块化的发展做了贡献\",{\"1\":{\"213\":1}}],[\"都是将字符串转成整数\",{\"1\":{\"178\":1}}],[\"都是服务器为每份资源生成的唯一标识\",{\"1\":{\"58\":1}}],[\"都需要先移动到起点位置\",{\"1\":{\"139\":1}}],[\"qeqw\",{\"1\":{\"464\":1}}],[\"qs\",{\"1\":{\"356\":2}}],[\"que\",{\"1\":{\"389\":2,\"390\":2,\"391\":2,\"393\":2}}],[\"query设置参数\",{\"1\":{\"521\":1}}],[\"query\",{\"1\":{\"281\":1,\"372\":1,\"521\":3}}],[\"queryselector\",{\"1\":{\"219\":1,\"389\":1,\"390\":1,\"393\":1}}],[\"queryselectorall\",{\"1\":{\"163\":1}}],[\"quadraticcurveto\",{\"1\":{\"139\":4}}],[\"qq\",{\"1\":{\"2\":1}}],[\"也会通过环境变量改变接口的地址\",{\"1\":{\"513\":1}}],[\"也是调用mutation方法\",{\"1\":{\"508\":1}}],[\"也是调用了reactive\",{\"1\":{\"463\":1}}],[\"也是简化重复使用的对象类型\",{\"1\":{\"320\":1}}],[\"也被称为\",{\"1\":{\"274\":1}}],[\"也就是说超过这个值进行运算就会失效\",{\"1\":{\"209\":1}}],[\"也就是二维数组\",{\"1\":{\"105\":1}}],[\"也可以修改为node\",{\"1\":{\"532\":1}}],[\"也可以定义\",{\"1\":{\"463\":1}}],[\"也可以针对一个\",{\"1\":{\"439\":1}}],[\"也可以在js文件中定义\",{\"1\":{\"439\":1}}],[\"也可以使用扩展运算符映射到计算属性中\",{\"1\":{\"482\":1}}],[\"也可以使用对象的形式绑定\",{\"1\":{\"419\":1}}],[\"也可以使用stroke绘制描边三角形\",{\"1\":{\"136\":1}}],[\"也可以从其他文件导入\",{\"1\":{\"369\":1}}],[\"也可以新增子类自己的属性\",{\"1\":{\"320\":1}}],[\"也可以用type先描述一个对象结构\",{\"1\":{\"318\":1}}],[\"也可以通过will\",{\"1\":{\"259\":1}}],[\"也可以理解为\",{\"1\":{\"184\":1}}],[\"闭合路径\",{\"1\":{\"135\":1,\"136\":1}}],[\"宽度不变\",{\"1\":{\"546\":1}}],[\"宽度\",{\"1\":{\"134\":1}}],[\"填充颜色\",{\"1\":{\"147\":1}}],[\"填充颜色样式\",{\"1\":{\"134\":1}}],[\"填充圆弧\",{\"1\":{\"138\":1}}],[\"填充\",{\"1\":{\"137\":1,\"151\":1}}],[\"填充三角形\",{\"1\":{\"136\":1}}],[\"填充矩形fillrect\",{\"1\":{\"134\":1}}],[\"绘制\",{\"0\":{\"260\":1},\"1\":{\"255\":1}}],[\"绘制的最大宽度是可选的\",{\"1\":{\"141\":2}}],[\"绘制步骤\",{\"1\":{\"139\":1}}],[\"绘制成直线\",{\"1\":{\"139\":1}}],[\"绘制贝塞尔三次曲线\",{\"1\":{\"139\":1}}],[\"绘制贝塞尔一次二次曲线\",{\"1\":{\"139\":1}}],[\"绘制弧线有2个方法\",{\"1\":{\"138\":1}}],[\"绘制第三个顶点\",{\"1\":{\"136\":1}}],[\"绘制第二个顶点\",{\"1\":{\"136\":1}}],[\"绘制第一个顶点\",{\"1\":{\"136\":1,\"139\":2}}],[\"绘制三角形方法和绘制直线一样\",{\"1\":{\"136\":1}}],[\"绘制路径的结束点\",{\"1\":{\"135\":1}}],[\"绘制路径起点\",{\"1\":{\"135\":1}}],[\"绘制路径开始\",{\"1\":{\"135\":1,\"136\":1,\"138\":1,\"139\":2}}],[\"绘制线段\",{\"1\":{\"135\":2,\"136\":2,\"138\":1,\"139\":2}}],[\"绘制线宽linewidth\",{\"1\":{\"135\":1}}],[\"绘制终点lineto\",{\"1\":{\"135\":1}}],[\"绘制形状\",{\"1\":{\"134\":1}}],[\"绘制样式\",{\"1\":{\"134\":1}}],[\"绘制描边矩形\",{\"1\":{\"134\":1}}],[\"绘制矩形\",{\"1\":{\"134\":1}}],[\"绘制元素\",{\"1\":{\"39\":1}}],[\"画的阶段在合成线程中\",{\"1\":{\"266\":1}}],[\"画\",{\"0\":{\"263\":1},\"1\":{\"255\":1}}],[\"画文字\",{\"0\":{\"141\":1}}],[\"画弧线\",{\"0\":{\"138\":1}}],[\"画圆形\",{\"0\":{\"137\":1}}],[\"画三角形\",{\"0\":{\"136\":1}}],[\"画直线步骤\",{\"1\":{\"135\":1}}],[\"画直线\",{\"0\":{\"135\":1}}],[\"画矩形\",{\"0\":{\"134\":1}}],[\"画布关联窗口\",{\"1\":{\"39\":1}}],[\"检查函数没有隐式的返回值\",{\"1\":{\"291\":1}}],[\"检查是否有多余参数\",{\"1\":{\"291\":1}}],[\"检查有可能为null的地方\",{\"1\":{\"291\":1}}],[\"检查资源\",{\"1\":{\"45\":1}}],[\"检测是否有\",{\"1\":{\"405\":1}}],[\"检测是否函数某个元素\",{\"1\":{\"169\":1}}],[\"检测是否含有元素\",{\"1\":{\"168\":1}}],[\"检测是否支持画布\",{\"1\":{\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":2,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1}}],[\"你好\",{\"1\":{\"460\":1}}],[\"你好啊\",{\"1\":{\"227\":1}}],[\"你需要将其设置为\",{\"1\":{\"344\":1}}],[\"你可以在这里输入更多的配置\",{\"1\":{\"369\":1}}],[\"你可以在编写代码时发现编译时错误\",{\"1\":{\"326\":1}}],[\"你可以对\",{\"1\":{\"363\":1}}],[\"你可以修改请求头\",{\"1\":{\"356\":1}}],[\"你可以有任意数量的case语句\",{\"1\":{\"34\":1}}],[\"你的浏览器不支持canvas\",{\"1\":{\"133\":1}}],[\"陈小知\",{\"1\":{\"129\":1}}],[\"陈敬起\",{\"1\":{\"2\":1}}],[\"吾日三省吾身\",{\"1\":{\"129\":1}}],[\"还允许可选的静态类型\",{\"1\":{\"326\":1}}],[\"还有target属性\",{\"1\":{\"532\":1}}],[\"还有非空断言\",{\"1\":{\"315\":1}}],[\"还有getter和setter也是无法复制的\",{\"1\":{\"288\":1}}],[\"还要考虑深拷贝不能复制原型链上的方法和属性\",{\"1\":{\"288\":1}}],[\"还要考虑递归时不能影响性能\",{\"1\":{\"288\":1}}],[\"还是\",{\"1\":{\"356\":1}}],[\"还是jquery都成为了历史\",{\"1\":{\"213\":1}}],[\"还是0\",{\"0\":{\"181\":1}}],[\"还是以基础为主\",{\"1\":{\"129\":1}}],[\"还可以\",{\"1\":{\"36\":1}}],[\"希望大家都不要依靠框架\",{\"1\":{\"129\":1}}],[\"好了\",{\"1\":{\"129\":1}}],[\"遍历数组\",{\"1\":{\"129\":1}}],[\"遍历循环数组每一项\",{\"1\":{\"107\":1}}],[\"拷贝数组\",{\"1\":{\"129\":1}}],[\"死记硬背也不好弄\",{\"1\":{\"129\":1}}],[\"添加全局功能的工具代码\",{\"1\":{\"451\":1}}],[\"添加响应拦截器\",{\"1\":{\"359\":1}}],[\"添加响应头\",{\"1\":{\"282\":1}}],[\"添加请求拦截器\",{\"1\":{\"359\":1}}],[\"添加删除数组\",{\"1\":{\"129\":1}}],[\"添加删除位置\",{\"1\":{\"125\":1}}],[\"添加的元素\",{\"1\":{\"125\":1}}],[\"升序\",{\"1\":{\"124\":1}}],[\"升序排列\",{\"1\":{\"73\":1}}],[\"截取数组中的一部分\",{\"1\":{\"122\":1}}],[\"颠倒数组中元素的顺序\",{\"1\":{\"120\":1}}],[\"累计值\",{\"1\":{\"118\":1,\"119\":1}}],[\"回调\",{\"1\":{\"466\":1,\"468\":1}}],[\"回调函数参数\",{\"1\":{\"118\":1,\"119\":1}}],[\"回流的本质是\",{\"1\":{\"264\":1}}],[\"回显服务器收到的请求\",{\"1\":{\"46\":1}}],[\"柚子\",{\"1\":{\"117\":2}}],[\"橘子\",{\"1\":{\"117\":2}}],[\"原因\",{\"1\":{\"515\":1,\"516\":1}}],[\"原因是在赋值和使用任意类型变量时会导致相关的变量均污染成任意类型\",{\"1\":{\"313\":1}}],[\"原始内容\",{\"1\":{\"389\":1,\"393\":1}}],[\"原数组已经被改变\",{\"1\":{\"116\":1}}],[\"原生\",{\"1\":{\"3\":1}}],[\"然后进行替换\",{\"1\":{\"535\":1}}],[\"然后所有引用文件都打包成一个或多个js文件\",{\"1\":{\"534\":1}}],[\"然后放到iife立即执行函数中\",{\"1\":{\"526\":1}}],[\"然后打包时\",{\"1\":{\"513\":1}}],[\"然后在项目中\",{\"1\":{\"479\":1}}],[\"然后同步更新\",{\"1\":{\"465\":1}}],[\"然后再通过\",{\"1\":{\"553\":1}}],[\"然后再\",{\"1\":{\"462\":1}}],[\"然后再创建监听click点击事件addeventlistener\",{\"1\":{\"391\":1}}],[\"然后通过函数执行路径对应的函数\",{\"1\":{\"526\":1}}],[\"然后通过textcontent替换对应文本的数据\",{\"1\":{\"389\":1}}],[\"然后通过next\",{\"1\":{\"166\":1}}],[\"然后取消导航\",{\"1\":{\"380\":1}}],[\"然后返回一个新类型\",{\"1\":{\"343\":1}}],[\"然后由小文件组合起来\",{\"1\":{\"185\":1}}],[\"然后填充颜色或者描边\",{\"1\":{\"136\":1}}],[\"然后执行回调\",{\"1\":{\"107\":1}}],[\"然后将结果压缩成一个新数组\",{\"1\":{\"106\":1}}],[\"然后client端进入time\",{\"1\":{\"59\":1}}],[\"映射每个元素\",{\"1\":{\"106\":1}}],[\"更好\",{\"1\":{\"552\":1}}],[\"更符合大型项目或稳定项目\",{\"1\":{\"537\":1}}],[\"更多vue代理知识\",{\"1\":{\"513\":1}}],[\"更深的就会拍扁失败\",{\"1\":{\"105\":1}}],[\"更新数据\",{\"1\":{\"65\":1}}],[\"更新资源\",{\"1\":{\"48\":1}}],[\"更新\",{\"1\":{\"45\":1,\"65\":1}}],[\"拍扁数组\",{\"1\":{\"105\":1}}],[\"俗称\",{\"1\":{\"105\":1}}],[\"后端需要进行对称解密\",{\"1\":{\"551\":1}}],[\"后端数据库\",{\"1\":{\"271\":1}}],[\"后面对象的属性会覆盖前面的属性\",{\"1\":{\"184\":1}}],[\"后面可能还有第二个\",{\"1\":{\"103\":1}}],[\"后判断\",{\"1\":{\"33\":1}}],[\"二次曲线quadraticcurveto\",{\"1\":{\"139\":1}}],[\"二\",{\"0\":{\"133\":1,\"497\":1}}],[\"二是第一个\",{\"1\":{\"103\":1}}],[\"二进制形式的极大文本数据\",{\"1\":{\"83\":1}}],[\"二进制形式的中等长度文本数据\",{\"1\":{\"83\":1}}],[\"二进制形式的长文本数据\",{\"1\":{\"83\":1}}],[\"省略之后就填充到最后\",{\"1\":{\"101\":1}}],[\"理解这个方法也简单\",{\"1\":{\"98\":1}}],[\"而浏览器在加载改模块的时候\",{\"1\":{\"534\":1}}],[\"而方法总是会在调用时执行\",{\"1\":{\"465\":1}}],[\"而组合式函数是将vue3的方法和属性直接定义到函数内部\",{\"1\":{\"412\":1}}],[\"而这个钩子就会在这个情况下被调用\",{\"1\":{\"383\":1}}],[\"而不能简单的写一个\",{\"1\":{\"345\":1}}],[\"而不是input之后\",{\"1\":{\"433\":1}}],[\"而不是转换后的代码\",{\"1\":{\"291\":1}}],[\"而不是新数组\",{\"1\":{\"98\":1}}],[\"而无需运行脚本\",{\"1\":{\"326\":1}}],[\"而且可以使用方括号语法访问\",{\"1\":{\"357\":1}}],[\"而且是深拷贝哦\",{\"1\":{\"96\":1}}],[\"而且有一个新的资源已经依据请求的需要而建立\",{\"1\":{\"51\":1}}],[\"属性代码\",{\"1\":{\"512\":1}}],[\"属性透传是指元素属性通过父组件传递进来\",{\"1\":{\"421\":1}}],[\"属性透传\",{\"0\":{\"421\":1}}],[\"属性将会被忽略\",{\"1\":{\"417\":1}}],[\"属性会自动移除\",{\"1\":{\"417\":1}}],[\"属性绑定\",{\"0\":{\"417\":1}}],[\"属性替代了vue2的mode属性\",{\"1\":{\"370\":1}}],[\"属性装饰器\",{\"1\":{\"344\":1}}],[\"属性或参数上\",{\"1\":{\"344\":1}}],[\"属性值只能读取\",{\"1\":{\"338\":1}}],[\"属性值为undefined\",{\"1\":{\"288\":1}}],[\"属性名称\",{\"1\":{\"393\":1}}],[\"属性名\",{\"1\":{\"300\":2}}],[\"属性和方法\",{\"1\":{\"300\":1}}],[\"属性和标签中\",{\"1\":{\"270\":2}}],[\"属性的变化\",{\"1\":{\"266\":1}}],[\"属性的对象或可迭代的对象来返回一个数组\",{\"1\":{\"108\":1}}],[\"属性方法\",{\"1\":{\"168\":1}}],[\"属性访问器\",{\"1\":{\"129\":1}}],[\"属性访问方法不接收负值\",{\"1\":{\"95\":1}}],[\"属性返回对创建此对象的数组函数的引用\",{\"1\":{\"97\":1}}],[\"空类型\",{\"0\":{\"311\":1}}],[\"空数据\",{\"1\":{\"228\":1}}],[\"空数组length为0\",{\"1\":{\"129\":1}}],[\"空数组\",{\"1\":{\"96\":1}}],[\"空和\",{\"1\":{\"72\":1}}],[\"当收到数据之后会把默认数据替换\",{\"1\":{\"472\":1}}],[\"当该侦听器不再需要时\",{\"1\":{\"469\":1}}],[\"当count\",{\"1\":{\"469\":1}}],[\"当依赖值不发生变化时\",{\"1\":{\"465\":1}}],[\"当页面组件用到缓存keep\",{\"1\":{\"458\":1}}],[\"当页面输入框的值发生变化\",{\"1\":{\"394\":1}}],[\"当插槽未传值时\",{\"1\":{\"443\":1}}],[\"当满足条件后渲染\",{\"1\":{\"424\":1}}],[\"当数据代理完成之后\",{\"1\":{\"393\":1}}],[\"当使用非空断言的时候就是表示告诉编辑器该变量不会为空\",{\"1\":{\"315\":1}}],[\"当然也可以自定义值\",{\"1\":{\"312\":1}}],[\"当然若拼接的第一个数组是\",{\"1\":{\"96\":1}}],[\"当一个复杂类型重复使用时\",{\"1\":{\"309\":1}}],[\"当有错误时是否生成文件\",{\"1\":{\"291\":1}}],[\"当连接打开时\",{\"1\":{\"286\":1}}],[\"当dom被解析执行时暴漏出来\",{\"1\":{\"271\":1}}],[\"当用户打开链接时\",{\"1\":{\"271\":1}}],[\"当改变可见样式后\",{\"1\":{\"265\":1}}],[\"当布局树发生改变之后\",{\"1\":{\"264\":1}}],[\"当浏览器的网络线程通过网络通信收到html文档后\",{\"1\":{\"255\":1}}],[\"当前count的值\",{\"1\":{\"482\":1}}],[\"当前数组\",{\"1\":{\"118\":1,\"119\":1}}],[\"当前元素的索引\",{\"1\":{\"118\":1,\"119\":1}}],[\"当前元素\",{\"1\":{\"118\":1,\"119\":1}}],[\"当我们需要从尾部获取时\",{\"1\":{\"95\":1}}],[\"答案是肯定的\",{\"1\":{\"95\":1}}],[\"效果一样嘛\",{\"1\":{\"95\":1}}],[\"效果相同\",{\"1\":{\"35\":1}}],[\"苹果\",{\"1\":{\"95\":1,\"153\":1}}],[\"今天无意中打印了一个空array数组\",{\"1\":{\"94\":1}}],[\"根据参数不同加载不同内容\",{\"1\":{\"523\":1}}],[\"根据参数及返回值的不同声明多次\",{\"1\":{\"345\":1}}],[\"根据攻击的来源\",{\"1\":{\"271\":1}}],[\"根据w3c官方的解释\",{\"1\":{\"245\":1}}],[\"根据内容的前后进行识别\",{\"1\":{\"198\":1}}],[\"根据2个圆绘制径向渐变\",{\"1\":{\"150\":1}}],[\"根据\",{\"1\":{\"149\":1}}],[\"根本没去观察数组原型上自带的方法都有哪些\",{\"1\":{\"94\":1}}],[\"根字号\",{\"1\":{\"11\":1}}],[\"例如在\",{\"1\":{\"449\":3}}],[\"例如箭头函数\",{\"1\":{\"326\":1}}],[\"例如实现一个人的对象\",{\"1\":{\"300\":1}}],[\"例如节点的宽高\",{\"1\":{\"258\":1}}],[\"例如计时器\",{\"1\":{\"241\":1}}],[\"例如\",{\"1\":{\"94\":1,\"129\":1,\"202\":1,\"220\":1,\"324\":1,\"357\":1,\"362\":1,\"531\":1}}],[\"例如服务器不支持当前请求所需要的某个功能\",{\"1\":{\"54\":1}}],[\"纯文本格式\",{\"1\":{\"92\":1}}],[\"状态持久化插件\",{\"1\":{\"362\":1}}],[\"状态信息\",{\"1\":{\"357\":1}}],[\"状态码\",{\"1\":{\"357\":1}}],[\"状态码200\",{\"1\":{\"58\":1}}],[\"状态\",{\"0\":{\"90\":1}}],[\"部分\",{\"1\":{\"89\":1}}],[\"全双工\",{\"1\":{\"222\":2}}],[\"全局变量\",{\"0\":{\"541\":1}}],[\"全局守卫\",{\"1\":{\"522\":1}}],[\"全局3个\",{\"1\":{\"522\":1}}],[\"全局获取环境变量方法\",{\"1\":{\"513\":1}}],[\"全局共享属性\",{\"1\":{\"508\":1}}],[\"全局提供依赖\",{\"1\":{\"471\":1}}],[\"全局自定义指令\",{\"1\":{\"447\":1}}],[\"全局后置守卫\",{\"0\":{\"381\":1}}],[\"全局解析守卫\",{\"0\":{\"380\":1}}],[\"全局前置守卫\",{\"0\":{\"379\":1}}],[\"全局状态管理\",{\"1\":{\"362\":1}}],[\"全局命名空间\",{\"1\":{\"347\":1}}],[\"全局函数\",{\"1\":{\"347\":1}}],[\"全局环境\",{\"1\":{\"210\":1}}],[\"全局合成操作\",{\"1\":{\"146\":1}}],[\"全部\",{\"1\":{\"89\":1}}],[\"全日制本科\",{\"1\":{\"2\":1}}],[\"接下来每次调用next方法\",{\"1\":{\"165\":1}}],[\"接收默认数据\",{\"1\":{\"472\":1}}],[\"接收provide的数据\",{\"1\":{\"472\":1}}],[\"接收组件name名\",{\"1\":{\"455\":2}}],[\"接收属性\",{\"1\":{\"421\":1}}],[\"接收样式\",{\"1\":{\"419\":1}}],[\"接收到index页面发送的消息\",{\"1\":{\"285\":1}}],[\"接收iframe页面发送的消息\",{\"1\":{\"285\":1}}],[\"接收数据使用\",{\"1\":{\"498\":1}}],[\"接收数据\",{\"1\":{\"232\":1}}],[\"接收消息\",{\"1\":{\"226\":1,\"227\":1,\"234\":1}}],[\"接收页面\",{\"1\":{\"219\":1,\"545\":1}}],[\"接收参数\",{\"1\":{\"146\":1}}],[\"接收一个函数作为累加器\",{\"1\":{\"118\":1}}],[\"接受并处理服务端向客户端响应的数据结果\",{\"1\":{\"88\":1}}],[\"接口写法\",{\"1\":{\"342\":1}}],[\"接口写法类似定义类\",{\"1\":{\"342\":1}}],[\"接口之间可以继承\",{\"1\":{\"342\":1}}],[\"接口interface\",{\"1\":{\"342\":1}}],[\"接口和模块\",{\"1\":{\"326\":1}}],[\"接口的类型\",{\"1\":{\"321\":1}}],[\"接口或类时\",{\"1\":{\"321\":1,\"341\":1}}],[\"接口继承\",{\"1\":{\"320\":1}}],[\"接口就是用来\",{\"1\":{\"320\":1}}],[\"接口第二个用法就是\",{\"1\":{\"320\":1}}],[\"接口便于对象结构的复用\",{\"1\":{\"320\":1}}],[\"接口只定义对象的结构\",{\"1\":{\"320\":1}}],[\"接口也可以当初类声明去使用\",{\"1\":{\"320\":1}}],[\"接口用来定义一个类结构\",{\"1\":{\"320\":1}}],[\"接口类型\",{\"0\":{\"320\":1}}],[\"接口跨域地址\",{\"1\":{\"284\":1,\"512\":1}}],[\"接口异常无法监听\",{\"1\":{\"281\":1}}],[\"接口\",{\"1\":{\"23\":1,\"326\":1}}],[\"构建速度不同\",{\"0\":{\"536\":1}}],[\"构建请求所需的数据内容\",{\"1\":{\"88\":1}}],[\"构成新的类型\",{\"1\":{\"324\":1}}],[\"构造方法的名称必须与类同名\",{\"1\":{\"31\":1}}],[\"构造函数constructor\",{\"0\":{\"301\":1}}],[\"构造函数\",{\"0\":{\"31\":1,\"171\":1},\"1\":{\"288\":1,\"300\":1}}],[\"优势\",{\"1\":{\"329\":1}}],[\"优先处理靠近视口区域\",{\"1\":{\"262\":1}}],[\"优先级最高\",{\"1\":{\"243\":1,\"245\":1}}],[\"优先级高\",{\"1\":{\"243\":1}}],[\"优先级高于最后修改时间\",{\"1\":{\"58\":1}}],[\"优先级中\",{\"1\":{\"243\":1}}],[\"优先级\",{\"1\":{\"68\":1}}],[\"优点\",{\"1\":{\"87\":1,\"281\":1}}],[\"xxxxx\",{\"1\":{\"513\":1}}],[\"xxx\",{\"1\":{\"498\":1,\"499\":1,\"500\":1,\"521\":1}}],[\"xx\",{\"1\":{\"318\":1}}],[\"xfs\",{\"1\":{\"289\":1}}],[\"xsrfheadername\",{\"1\":{\"356\":1}}],[\"xsrfcookiename\",{\"1\":{\"356\":1}}],[\"xsrf\",{\"1\":{\"274\":1,\"356\":4}}],[\"xss攻击类型\",{\"0\":{\"271\":1}}],[\"xss常见注入方法\",{\"0\":{\"270\":1}}],[\"xss\",{\"0\":{\"268\":1},\"1\":{\"269\":1}}],[\"xiaomi\",{\"1\":{\"173\":1}}],[\"xiaoming\",{\"1\":{\"165\":1}}],[\"xiaoli\",{\"1\":{\"165\":1}}],[\"xiaohong\",{\"1\":{\"165\":1}}],[\"x|repeat\",{\"1\":{\"151\":1}}],[\"x2\",{\"0\":{\"149\":1,\"150\":1},\"1\":{\"149\":1}}],[\"x1\",{\"0\":{\"149\":1}}],[\"xor\",{\"1\":{\"146\":1}}],[\"x轴位置\",{\"1\":{\"134\":1}}],[\"xml\",{\"1\":{\"92\":2}}],[\"xmlhttprequest\",{\"1\":{\"86\":1,\"88\":5,\"190\":1,\"356\":1,\"357\":1}}],[\"x\",{\"0\":{\"150\":1},\"1\":{\"91\":1,\"92\":1,\"106\":4,\"134\":2,\"137\":2,\"138\":2,\"139\":3,\"141\":4,\"149\":1,\"190\":9,\"320\":1,\"335\":3,\"355\":1,\"356\":2,\"412\":6}}],[\"xhr\",{\"0\":{\"89\":1},\"1\":{\"88\":8,\"89\":1,\"91\":3,\"93\":1,\"241\":1,\"356\":1}}],[\"xd\",{\"1\":{\"7\":1}}],[\"存放数据状态\",{\"1\":{\"508\":1}}],[\"存放user表等级前10的用户\",{\"1\":{\"80\":1}}],[\"存在潜在的运行类型错误\",{\"1\":{\"336\":1}}],[\"存在跨域问题\",{\"1\":{\"87\":1}}],[\"存储型\",{\"1\":{\"271\":1}}],[\"存储图片\",{\"1\":{\"83\":1}}],[\"浮点型\",{\"1\":{\"83\":2}}],[\"浮点数值\",{\"1\":{\"83\":2}}],[\"整个项目就是一个页面\",{\"1\":{\"520\":1}}],[\"整个应用支持路由\",{\"1\":{\"369\":1}}],[\"整个渲染阶段分为8部分\",{\"1\":{\"255\":1}}],[\"整个渲染主线程处理任务的过程\",{\"1\":{\"240\":1}}],[\"整型\",{\"1\":{\"83\":2}}],[\"整数\",{\"1\":{\"23\":2}}],[\"极大文本数据\",{\"1\":{\"83\":1}}],[\"极大整数值\",{\"1\":{\"83\":1}}],[\"短文本字符串\",{\"1\":{\"83\":1}}],[\"个字符的二进制字符串\",{\"1\":{\"83\":1}}],[\"个人网站\",{\"1\":{\"5\":1}}],[\"变更状态\",{\"1\":{\"479\":1,\"480\":1}}],[\"变更state数据\",{\"0\":{\"479\":1}}],[\"变更state\",{\"1\":{\"365\":1}}],[\"变化不会影响渲染主线程\",{\"1\":{\"266\":1}}],[\"变形等信息\",{\"1\":{\"263\":1}}],[\"变形\",{\"0\":{\"144\":1}}],[\"变长字符串\",{\"1\":{\"83\":1}}],[\"变量后跟\",{\"1\":{\"305\":1}}],[\"变量不能重复声明\",{\"1\":{\"155\":1}}],[\"变量类型由局部变量\",{\"1\":{\"30\":1}}],[\"变量\",{\"0\":{\"30\":1},\"1\":{\"158\":1,\"270\":1}}],[\"定时向服务端发送消息\",{\"1\":{\"228\":1}}],[\"定期发送\",{\"1\":{\"228\":1}}],[\"定期向服务器发送请求\",{\"1\":{\"224\":1}}],[\"定长字符\",{\"1\":{\"83\":1}}],[\"定长字符串\",{\"1\":{\"83\":1}}],[\"定义store\",{\"1\":{\"484\":1}}],[\"定义引用类型\",{\"1\":{\"464\":1}}],[\"定义对象\",{\"1\":{\"463\":1}}],[\"定义对象需要用到=号\",{\"1\":{\"342\":1}}],[\"定义插件\",{\"1\":{\"451\":1}}],[\"定义组件\",{\"0\":{\"439\":1}}],[\"定义必填和默认值\",{\"1\":{\"434\":1}}],[\"定义一些路由\",{\"1\":{\"369\":1}}],[\"定义一个title属性的参数\",{\"1\":{\"440\":1}}],[\"定义一个\",{\"1\":{\"363\":1}}],[\"定义一个一维数组\",{\"1\":{\"35\":1}}],[\"定义路由组件\",{\"1\":{\"369\":1}}],[\"定义option\",{\"1\":{\"364\":1}}],[\"定义了代理服务器的主机名\",{\"1\":{\"356\":1}}],[\"定义了在node\",{\"1\":{\"356\":2}}],[\"定义了对于给定的\",{\"1\":{\"356\":1}}],[\"定义了node\",{\"1\":{\"356\":1}}],[\"定义允许的http请求内容的最大字节数\",{\"1\":{\"356\":1}}],[\"定义装饰器\",{\"1\":{\"344\":2}}],[\"定义时不确定类型\",{\"1\":{\"321\":1}}],[\"定义类的规范\",{\"1\":{\"320\":1}}],[\"定义类\",{\"0\":{\"300\":1}}],[\"定义模块\",{\"1\":{\"215\":1}}],[\"定义bigint类型\",{\"1\":{\"209\":1}}],[\"定义渐变色\",{\"1\":{\"149\":1}}],[\"定义\",{\"1\":{\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"114\":1,\"115\":1,\"116\":1,\"117\":1,\"118\":1,\"119\":1,\"120\":1,\"121\":1,\"122\":1,\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1}}],[\"定义数组有2种方式\",{\"1\":{\"35\":1}}],[\"定义数组\",{\"1\":{\"33\":1}}],[\"定义变量的隐式声明\",{\"1\":{\"27\":1}}],[\"格林尼治时间\",{\"1\":{\"83\":1}}],[\"格式的数据\",{\"1\":{\"92\":3}}],[\"格式的时间字符串\",{\"1\":{\"58\":1}}],[\"格式\",{\"1\":{\"83\":1}}],[\"秒\",{\"1\":{\"83\":1}}],[\"年份值\",{\"1\":{\"83\":1}}],[\"年龄升序排列\",{\"1\":{\"73\":1}}],[\"年龄降序排列\",{\"1\":{\"73\":1}}],[\"you\",{\"1\":{\"439\":1}}],[\"yield\",{\"1\":{\"166\":10}}],[\"y|no\",{\"1\":{\"151\":1}}],[\"y2\",{\"0\":{\"149\":1,\"150\":1},\"1\":{\"149\":1}}],[\"y1\",{\"0\":{\"149\":1}}],[\"y=\",{\"1\":{\"139\":1}}],[\"y轴位置\",{\"1\":{\"134\":1}}],[\"y\",{\"0\":{\"150\":1},\"1\":{\"108\":1,\"134\":2,\"137\":2,\"138\":2,\"139\":2,\"141\":4,\"149\":1,\"320\":1,\"335\":3,\"412\":6}}],[\"yyyymmdd\",{\"1\":{\"83\":1}}],[\"yyyy\",{\"1\":{\"83\":3}}],[\"year\",{\"1\":{\"83\":2}}],[\"yarn\",{\"1\":{\"16\":1}}],[\"双精度\",{\"1\":{\"83\":1}}],[\"单组件时\",{\"1\":{\"496\":1}}],[\"单独发送请求在任何位置都可以得到数据\",{\"1\":{\"489\":1}}],[\"单文件组件定义\",{\"1\":{\"439\":1}}],[\"单选框\",{\"1\":{\"432\":1}}],[\"单个元素为根元素时\",{\"1\":{\"421\":1}}],[\"单个参数可以省略小括号\",{\"1\":{\"160\":1}}],[\"单一根元素样式属性会在组件内最外层元素生效\",{\"1\":{\"419\":1}}],[\"单线程是异步产生的原因\",{\"0\":{\"242\":1}}],[\"单条执行语句可以省略花括号\",{\"1\":{\"160\":1}}],[\"单精度\",{\"1\":{\"83\":1}}],[\"单位\",{\"0\":{\"11\":1}}],[\"范围的状态码都会触发该函数\",{\"1\":{\"359\":1}}],[\"范围内的状态码都会触发该函数\",{\"1\":{\"359\":1}}],[\"范围\",{\"1\":{\"83\":3}}],[\"大数值运算\",{\"1\":{\"209\":1}}],[\"大文本\",{\"1\":{\"83\":1}}],[\"大整数值\",{\"1\":{\"83\":3}}],[\"大小\",{\"1\":{\"83\":3}}],[\"大于平均等级的数据\",{\"1\":{\"77\":1}}],[\"近似数值数据类型\",{\"1\":{\"83\":1}}],[\"严格数值类型\",{\"1\":{\"83\":1}}],[\"严格还原设计稿效果\",{\"1\":{\"5\":1}}],[\"日期值\",{\"1\":{\"83\":1}}],[\"日期类型\",{\"1\":{\"83\":3}}],[\"日期\",{\"1\":{\"83\":1}}],[\"提高了代码的可维护性\",{\"1\":{\"297\":1}}],[\"提高运行效率\",{\"1\":{\"79\":1}}],[\"提交数据需要输入验证码\",{\"1\":{\"276\":1}}],[\"提供数据\",{\"1\":{\"470\":1}}],[\"提供一个\",{\"1\":{\"466\":1}}],[\"提供一个默认值\",{\"1\":{\"434\":1}}],[\"提供所有标准的\",{\"1\":{\"326\":1}}],[\"提供基础的防护\",{\"1\":{\"223\":1}}],[\"提供整个接口\",{\"1\":{\"216\":1}}],[\"提供了包装类\",{\"1\":{\"37\":1}}],[\"索引类型查询操作符\",{\"1\":{\"346\":1}}],[\"索引可以大大提高mysql的检索速度\",{\"1\":{\"79\":1}}],[\"索引\",{\"0\":{\"79\":1}}],[\"差集查询\",{\"1\":{\"76\":1}}],[\"且为\",{\"1\":{\"440\":1}}],[\"且未按任何其他键时才会触发\",{\"1\":{\"431\":1}}],[\"且子元素存在开始递归\",{\"1\":{\"389\":1}}],[\"且短路写法\",{\"1\":{\"207\":1}}],[\"且响应已就绪\",{\"1\":{\"90\":1}}],[\"且\",{\"1\":{\"76\":2}}],[\"去深层级的属性\",{\"1\":{\"207\":1}}],[\"去除输入两端的空格\",{\"1\":{\"433\":1}}],[\"去除模板变量的\",{\"1\":{\"389\":1,\"393\":1}}],[\"去除类型中的null\",{\"1\":{\"324\":1}}],[\"去除右侧空白符\",{\"1\":{\"201\":1}}],[\"去除左侧空白符\",{\"1\":{\"201\":1}}],[\"去除首尾空格\",{\"1\":{\"36\":1}}],[\"去重\",{\"1\":{\"76\":1}}],[\"求乘积\",{\"1\":{\"118\":1}}],[\"求平均等级\",{\"1\":{\"77\":1}}],[\"求等级的平均值\",{\"1\":{\"76\":1}}],[\"求和\",{\"1\":{\"76\":1}}],[\"求和结果\",{\"1\":{\"33\":4}}],[\"聚合函数\",{\"0\":{\"76\":1}}],[\"别名避免同名\",{\"1\":{\"185\":1}}],[\"别名\",{\"0\":{\"75\":1}}],[\"分号存在\",{\"1\":{\"405\":1}}],[\"分别需要在data\",{\"1\":{\"411\":1}}],[\"分别表示null和undefined\",{\"1\":{\"334\":1}}],[\"分别暴露\",{\"1\":{\"185\":1}}],[\"分为存储型\",{\"1\":{\"271\":1}}],[\"分块工作会启动多个线程同时进行\",{\"1\":{\"261\":1}}],[\"分块会将每一层分成多个小的区域\",{\"1\":{\"261\":1}}],[\"分块\",{\"0\":{\"261\":1},\"1\":{\"255\":1}}],[\"分层的好处在于\",{\"1\":{\"259\":1}}],[\"分层\",{\"0\":{\"259\":1},\"1\":{\"255\":1}}],[\"分析视频\",{\"1\":{\"231\":1}}],[\"分割多个类型\",{\"1\":{\"322\":1,\"323\":1}}],[\"分割迭代层次\",{\"1\":{\"166\":1}}],[\"分割\",{\"1\":{\"126\":1,\"318\":1,\"455\":2}}],[\"分组统计不同级别的数量\",{\"1\":{\"76\":1}}],[\"分组过滤\",{\"1\":{\"76\":1}}],[\"分组\",{\"1\":{\"76\":1}}],[\"分页公式\",{\"1\":{\"74\":1}}],[\"分享专业知识\",{\"1\":{\"5\":1}}],[\"从type中选取一系列的属性\",{\"1\":{\"324\":1}}],[\"从输入网址到页面正常展示\",{\"0\":{\"255\":1}}],[\"从而修改state中的数据\",{\"1\":{\"479\":1}}],[\"从而实现子传父\",{\"1\":{\"441\":1}}],[\"从而实现恶意代码窃取用户数据攻击网站的效果\",{\"1\":{\"271\":1}}],[\"从而触发页面数据的更新\",{\"1\":{\"394\":1}}],[\"从而创建了一个input的监听事件\",{\"1\":{\"394\":1}}],[\"从而帮助我们定义和限定这些数据结构的形式和行为\",{\"1\":{\"335\":1}}],[\"从而突破属性值的限制\",{\"1\":{\"270\":1}}],[\"从而提升效率\",{\"1\":{\"259\":1}}],[\"从而保证了单线程的流畅运行\",{\"1\":{\"243\":1}}],[\"从而导致消息队列中的其他任务无法执行\",{\"1\":{\"243\":1}}],[\"从而获取需要的数据\",{\"1\":{\"198\":1}}],[\"从\",{\"1\":{\"137\":1}}],[\"从数组的末尾向前将数组中的数组项做累加\",{\"1\":{\"119\":1}}],[\"从左到右\",{\"1\":{\"118\":1}}],[\"从尾部开始索引\",{\"1\":{\"95\":1}}],[\"从第6条开始\",{\"1\":{\"74\":1}}],[\"从缓存读取\",{\"1\":{\"58\":1}}],[\"从缓存读取数据\",{\"1\":{\"58\":1}}],[\"从缓存读取资源\",{\"1\":{\"58\":1}}],[\"限制长度\",{\"1\":{\"272\":1}}],[\"限制从第m+1条\",{\"1\":{\"74\":1}}],[\"限制查询n条记录\",{\"1\":{\"74\":1}}],[\"限定指定值类型\",{\"0\":{\"69\":1}}],[\"限定值类型\",{\"1\":{\"24\":1}}],[\"额外的再按\",{\"1\":{\"73\":2}}],[\"按键修饰符\",{\"0\":{\"431\":1}}],[\"按enter\",{\"1\":{\"289\":1}}],[\"按照惯例\",{\"1\":{\"412\":1}}],[\"按照w3c的标准\",{\"1\":{\"246\":1}}],[\"按照一定模式从数组和对象中取值\",{\"1\":{\"157\":1}}],[\"按等级降序排列的基础上\",{\"1\":{\"73\":2}}],[\"按等级降序排列\",{\"1\":{\"73\":1}}],[\"按升序\",{\"1\":{\"35\":1}}],[\"降序\",{\"1\":{\"124\":1}}],[\"降序排列\",{\"1\":{\"73\":1}}],[\"降低拥堵\",{\"1\":{\"56\":1}}],[\"判断元素是否绑定有\",{\"1\":{\"391\":1,\"393\":1,\"394\":1}}],[\"判断元素节点是否有v\",{\"1\":{\"391\":1}}],[\"判断的值1负1正就返回false\",{\"1\":{\"183\":1}}],[\"判断对象返回false\",{\"1\":{\"183\":1}}],[\"判断2个值是否完全相等\",{\"0\":{\"183\":1}}],[\"判断是否是整数\",{\"0\":{\"179\":1}}],[\"判断是否是有限数\",{\"1\":{\"176\":1}}],[\"判断是否是数组\",{\"1\":{\"111\":1}}],[\"判断数值是正数\",{\"0\":{\"181\":1}}],[\"判断数值是否是nan\",{\"0\":{\"177\":1}}],[\"判断数组中是否有满足条件的任意一项\",{\"1\":{\"123\":1}}],[\"判断数据类型使用\",{\"1\":{\"23\":1}}],[\"判断\",{\"0\":{\"72\":1}}],[\"王\",{\"1\":{\"71\":6}}],[\"等效与属性组合在一起\",{\"1\":{\"320\":1}}],[\"等效于\",{\"1\":{\"188\":1,\"528\":2}}],[\"等效于低版本的\",{\"1\":{\"74\":1}}],[\"等事件中\",{\"1\":{\"270\":1}}],[\"等可执行代码\",{\"1\":{\"270\":1}}],[\"等属性中\",{\"1\":{\"270\":1}}],[\"等\",{\"1\":{\"269\":1}}],[\"等样式都会或多或少的影响分层结果\",{\"1\":{\"259\":1}}],[\"等待下载执行完成后才能继续解析html\",{\"1\":{\"256\":1}}],[\"等待新数据相应后再关闭连接\",{\"1\":{\"224\":1}}],[\"等级在1~4\",{\"1\":{\"76\":3}}],[\"等价于\",{\"1\":{\"70\":1}}],[\"等场景\",{\"1\":{\"46\":1}}],[\"的mode类型\",{\"0\":{\"546\":1}}],[\"的局限性\",{\"0\":{\"464\":1}}],[\"的对象\",{\"1\":{\"463\":1}}],[\"的组合式\",{\"1\":{\"412\":1}}],[\"的缩写\",{\"1\":{\"369\":1}}],[\"的路由组件\",{\"1\":{\"369\":1}}],[\"的唯一\",{\"1\":{\"363\":1}}],[\"的名字\",{\"1\":{\"363\":1}}],[\"的名称\",{\"1\":{\"356\":1}}],[\"的返回值进行任意命名\",{\"1\":{\"363\":1}}],[\"的专属状态管理库\",{\"1\":{\"362\":1}}],[\"的值为\",{\"1\":{\"356\":1}}],[\"的值\",{\"1\":{\"356\":2,\"473\":1}}],[\"的值只能是男\",{\"1\":{\"317\":1}}],[\"的属性\",{\"1\":{\"344\":1,\"365\":1}}],[\"的动态类型\",{\"1\":{\"326\":1}}],[\"的大部分特性\",{\"1\":{\"326\":1}}],[\"的限制\",{\"1\":{\"279\":1}}],[\"的\",{\"1\":{\"270\":1,\"365\":1}}],[\"的代码\",{\"1\":{\"270\":1}}],[\"的出现\",{\"1\":{\"213\":1}}],[\"的原型\",{\"1\":{\"184\":1}}],[\"的差集\",{\"1\":{\"76\":1}}],[\"的交集\",{\"1\":{\"76\":1}}],[\"的并集\",{\"1\":{\"76\":1}}],[\"的用户\",{\"1\":{\"70\":1}}],[\"的方法\",{\"1\":{\"27\":1}}],[\"的方法在子类中要么声明为\",{\"1\":{\"27\":1}}],[\"的方法在子类中也必须为\",{\"1\":{\"27\":1}}],[\"关于vuex\",{\"0\":{\"507\":1}}],[\"关于我\",{\"0\":{\"1\":1}}],[\"关闭所有页面\",{\"1\":{\"543\":1}}],[\"关闭当前页面\",{\"1\":{\"543\":1}}],[\"关闭子线程\",{\"1\":{\"234\":1}}],[\"关闭线程\",{\"0\":{\"233\":1}}],[\"关闭websocket或根据业务需求去重连\",{\"1\":{\"228\":1}}],[\"关闭连接触发重连\",{\"1\":{\"228\":1}}],[\"关闭连接\",{\"1\":{\"226\":1}}],[\"关键词定义静态成员\",{\"1\":{\"172\":1}}],[\"关键还是理解\",{\"1\":{\"129\":1}}],[\"关键字setup这个表示\",{\"1\":{\"460\":1}}],[\"关键字用于标记类属性只读\",{\"1\":{\"333\":1}}],[\"关键字实现接口继承\",{\"1\":{\"320\":1}}],[\"关键字as\",{\"0\":{\"315\":1}}],[\"关键字声明\",{\"1\":{\"309\":1}}],[\"关键字\",{\"0\":{\"69\":1,\"70\":1,\"71\":1},\"1\":{\"68\":1,\"320\":1,\"345\":1}}],[\"导航守卫可以访问组件实例\",{\"1\":{\"383\":1}}],[\"导致加载失败的报错\",{\"1\":{\"279\":1}}],[\"导入使用\",{\"1\":{\"476\":1}}],[\"导入成功的返回值module就是\",{\"1\":{\"208\":1}}],[\"导入成功\",{\"1\":{\"208\":1}}],[\"导入的时候可以用\",{\"1\":{\"185\":1}}],[\"导入\",{\"1\":{\"185\":1}}],[\"导入指定文件\",{\"1\":{\"66\":1}}],[\"导入scanner依赖\",{\"1\":{\"41\":1}}],[\"导出规范\",{\"1\":{\"214\":1}}],[\"导出user数据表\",{\"1\":{\"66\":1}}],[\"导出到指定文件\",{\"1\":{\"66\":1}}],[\"非活跃的组件将会被缓存\",{\"1\":{\"455\":1}}],[\"非活跃的组件数据会被缓存下来\",{\"1\":{\"455\":1}}],[\"非常危险\",{\"1\":{\"65\":1}}],[\"非访问修饰符\",{\"0\":{\"28\":1}}],[\"所以点击\",{\"1\":{\"372\":1}}],[\"所以这里并不需要添加\",{\"1\":{\"345\":1}}],[\"所以回流一定会引起重绘\",{\"1\":{\"265\":1}}],[\"所以\",{\"1\":{\"264\":1}}],[\"所以在进程开启后会自动创建一个线程来运行代码\",{\"1\":{\"239\":1}}],[\"所以也可以使用扩展运算符和for\",{\"1\":{\"169\":1}}],[\"所以重叠部分的颜色\",{\"1\":{\"146\":2}}],[\"所以此时标志位是\",{\"1\":{\"59\":1}}],[\"所有共享数据存储到state中\",{\"1\":{\"477\":1}}],[\"所有异步完成之后进入完成状态\",{\"1\":{\"457\":1}}],[\"所有这些属性都将自动推断出它们的类型\",{\"1\":{\"365\":1}}],[\"所有的路由命名都必须唯一\",{\"1\":{\"375\":1}}],[\"所有的\",{\"1\":{\"357\":1}}],[\"所有的数字在typescript中都是浮点数\",{\"1\":{\"306\":1}}],[\"所有的严格检查的总开关\",{\"1\":{\"291\":1}}],[\"所有跨域的解决方案都需服务端配合\",{\"1\":{\"280\":1}}],[\"所有浏览器采用异步方法\",{\"1\":{\"243\":1}}],[\"所有模块都通过\",{\"1\":{\"216\":1}}],[\"所有元素与遍历到的子数组中的元素合并为一个新数组返回\",{\"1\":{\"105\":1}}],[\"所有数组的constructor\",{\"1\":{\"97\":1}}],[\"所有用户的等级改为1\",{\"1\":{\"65\":1}}],[\"​\",{\"1\":{\"64\":1,\"458\":1}}],[\"字面量类型直接理解为限制的值\",{\"1\":{\"317\":1}}],[\"字面量类型\",{\"0\":{\"317\":1}}],[\"字节\",{\"1\":{\"83\":9}}],[\"字的用户\",{\"1\":{\"71\":1}}],[\"字的\",{\"1\":{\"71\":1}}],[\"字段别名\",{\"1\":{\"75\":1}}],[\"字段为空\",{\"1\":{\"72\":1}}],[\"字段条件\",{\"1\":{\"65\":1}}],[\"字段=值\",{\"1\":{\"65\":1}}],[\"字段2\",{\"1\":{\"65\":1}}],[\"字段1\",{\"1\":{\"65\":1}}],[\"字段名\",{\"1\":{\"64\":1}}],[\"字段类型\",{\"1\":{\"64\":4}}],[\"字段\",{\"1\":{\"64\":5}}],[\"字符类型\",{\"1\":{\"83\":1}}],[\"字符串路径\",{\"1\":{\"372\":1}}],[\"字符串枚举值不能为空\",{\"1\":{\"329\":1}}],[\"字符串枚举\",{\"1\":{\"312\":1,\"329\":1}}],[\"字符串枚举每个对象都必须有值\",{\"1\":{\"312\":1}}],[\"字符串类型\",{\"0\":{\"308\":1}}],[\"字符串\",{\"1\":{\"270\":1}}],[\"字符串的长度仅为1\",{\"1\":{\"37\":1}}],[\"字符串切片\",{\"1\":{\"36\":1}}],[\"字符串运算\",{\"1\":{\"24\":1}}],[\"字符时\",{\"1\":{\"24\":1}}],[\"字符\",{\"1\":{\"23\":2}}],[\"显示时\",{\"1\":{\"540\":1}}],[\"显示传参\",{\"1\":{\"521\":1}}],[\"显示默认组件\",{\"1\":{\"457\":1}}],[\"显示fallback组件\",{\"1\":{\"457\":1}}],[\"显示的是对应router\",{\"1\":{\"369\":1}}],[\"显示客户端和服务器发送的消息记录\",{\"1\":{\"223\":1}}],[\"显示指定数据库的所有表\",{\"1\":{\"63\":1}}],[\"显示窗口\",{\"1\":{\"39\":1}}],[\"响应式会丢失\",{\"1\":{\"464\":2}}],[\"响应式的vue变成的对象\",{\"1\":{\"463\":1}}],[\"响应式状态\",{\"1\":{\"411\":1}}],[\"响应式数据需要通过\",{\"1\":{\"365\":1}}],[\"响应体\",{\"1\":{\"223\":1}}],[\"响应头\",{\"1\":{\"223\":1}}],[\"响应头配置\",{\"1\":{\"58\":1}}],[\"响应码\",{\"1\":{\"223\":1}}],[\"响应\",{\"1\":{\"60\":1}}],[\"建立连接\",{\"1\":{\"228\":1}}],[\"建立\",{\"1\":{\"60\":1}}],[\"建一个tcp连接需要客户端和服务器发送3个报文\",{\"1\":{\"59\":1}}],[\"并在这些数据变化时重新运行该回调函数\",{\"1\":{\"469\":1}}],[\"并在shims\",{\"1\":{\"401\":1}}],[\"并在本地生成cookie\",{\"1\":{\"274\":1}}],[\"并放置到了事件循环中\",{\"1\":{\"394\":1}}],[\"并放到消息队列尾部等待主线程执行\",{\"1\":{\"243\":1}}],[\"并把点击事件的event事件传入到方法中\",{\"1\":{\"391\":1}}],[\"并创建事件监听函数放置到事件队列里面\",{\"1\":{\"391\":1}}],[\"并加上参数\",{\"1\":{\"372\":1}}],[\"并且\",{\"1\":{\"524\":1}}],[\"并且优先加载子组件数据\",{\"1\":{\"488\":1}}],[\"并且相关代码有序的组织在一起\",{\"1\":{\"411\":1}}],[\"并且会跳过所有的\",{\"1\":{\"365\":1}}],[\"并且提供凭据\",{\"1\":{\"356\":1}}],[\"并且可以重复使用\",{\"1\":{\"334\":1}}],[\"并提供一个有效的响应\",{\"1\":{\"356\":1}}],[\"并被浏览器执行\",{\"1\":{\"271\":1}}],[\"并将其传递给渲染主线程的消息队列中\",{\"1\":{\"255\":1}}],[\"并发布了cmd规范\",{\"1\":{\"213\":1}}],[\"并发布了amd规范\",{\"1\":{\"213\":1}}],[\"并返回一个promise对象\",{\"1\":{\"208\":1}}],[\"并返回这部分\",{\"1\":{\"122\":1}}],[\"并返回这个元素\",{\"1\":{\"116\":1,\"121\":1}}],[\"并返回新的长度\",{\"1\":{\"117\":1,\"127\":1}}],[\"并不是指向构造函数constructor\",{\"1\":{\"97\":1}}],[\"并通过\",{\"1\":{\"88\":1}}],[\"并集查询\",{\"1\":{\"76\":1}}],[\"并比较缓存是否过期\",{\"1\":{\"60\":1}}],[\"并回车\",{\"1\":{\"60\":1}}],[\"浏览器专属\",{\"1\":{\"356\":4}}],[\"浏览器会在js代码全部完成后再统一计算\",{\"1\":{\"264\":1}}],[\"浏览器会为每个标签页开启一个渲染进程\",{\"1\":{\"240\":1}}],[\"浏览器做了什么\",{\"0\":{\"255\":1}}],[\"浏览器是如何渲染页面的\",{\"0\":{\"255\":1}}],[\"浏览器渲染\",{\"1\":{\"254\":1}}],[\"浏览器实现计时器时\",{\"1\":{\"246\":1}}],[\"浏览器永不阻塞\",{\"1\":{\"243\":1}}],[\"浏览器永远指向\",{\"1\":{\"210\":1}}],[\"浏览器采用了异步的方法解决问题\",{\"1\":{\"241\":1}}],[\"浏览器启动一个预解析器\",{\"1\":{\"256\":1}}],[\"浏览器启动\",{\"1\":{\"240\":1}}],[\"浏览器启动之后\",{\"1\":{\"240\":1}}],[\"浏览器进程内部会启动多个线程处理不同的任务\",{\"1\":{\"240\":1}}],[\"浏览器进程主要有三部分组成\",{\"1\":{\"240\":1}}],[\"浏览器进程\",{\"0\":{\"240\":1},\"1\":{\"240\":2}}],[\"浏览器端\",{\"1\":{\"216\":1}}],[\"浏览器端使用\",{\"1\":{\"215\":1}}],[\"浏览器端异步方案\",{\"1\":{\"213\":2}}],[\"浏览器使用模块化需要在\",{\"1\":{\"185\":1}}],[\"浏览器厂商\",{\"1\":{\"153\":1}}],[\"浏览器接受\",{\"1\":{\"60\":1}}],[\"浏览器发生什么\",{\"0\":{\"60\":1}}],[\"浏览器物理像素单位\",{\"1\":{\"11\":1}}],[\"输出\",{\"0\":{\"529\":1},\"1\":{\"527\":1}}],[\"输出100\",{\"1\":{\"24\":1}}],[\"输pid\",{\"1\":{\"289\":1}}],[\"输入框录入时过滤javascript\",{\"1\":{\"272\":1}}],[\"输入框录入时数据校验\",{\"1\":{\"272\":1}}],[\"输入密码\",{\"1\":{\"66\":1}}],[\"输入一个url\",{\"0\":{\"60\":1}}],[\"我是标题\",{\"1\":{\"531\":1}}],[\"我们这里使用的是解构赋值语法\",{\"1\":{\"465\":1}}],[\"我们在这里使用\",{\"1\":{\"369\":1}}],[\"我们后面再讨论嵌套路由\",{\"1\":{\"369\":1}}],[\"我们直接通过解构得到的store与响应式数据断开了\",{\"1\":{\"365\":1}}],[\"我们必须进行某种形式的检查\",{\"1\":{\"340\":1}}],[\"我们不必进行任何检查\",{\"1\":{\"340\":1}}],[\"我们可以用它解决js精度丢失的问题\",{\"1\":{\"176\":1}}],[\"我确认并同意你的关闭请求\",{\"1\":{\"59\":1}}],[\"我的计算器\",{\"1\":{\"39\":1}}],[\"我的优势\",{\"0\":{\"5\":1}}],[\"向前移动一条记录\",{\"1\":{\"374\":1}}],[\"向服务器发送一些数据\",{\"1\":{\"286\":1}}],[\"向客户端发送消息\",{\"1\":{\"286\":1}}],[\"向主线程发送消息\",{\"1\":{\"234\":1}}],[\"向数组的开头添加一个或更多元素\",{\"1\":{\"127\":1}}],[\"向数组的末尾添加一个或多个元素\",{\"1\":{\"117\":1}}],[\"向server端发送标志位是ack的报文段\",{\"1\":{\"59\":1}}],[\"向server端发送标志位是fin报文段\",{\"1\":{\"59\":1}}],[\"向client端返回一个标志位是ack的报文段\",{\"1\":{\"59\":1}}],[\"服\",{\"1\":{\"59\":1}}],[\"服务端地址\",{\"1\":{\"283\":1}}],[\"服务端设置\",{\"1\":{\"282\":1}}],[\"服务端\",{\"1\":{\"281\":1,\"286\":1}}],[\"服务端和服务端之间通信是不受浏览器同源策略限制\",{\"1\":{\"280\":1}}],[\"服务端传回\",{\"1\":{\"227\":1}}],[\"服务端发送至客户\",{\"1\":{\"227\":1}}],[\"服务端接收\",{\"1\":{\"227\":1}}],[\"服务端采用nodejs\",{\"1\":{\"227\":1}}],[\"服务端标志位flags=\",{\"1\":{\"59\":1}}],[\"服务器和客户端之间通过心跳包来保持连接状态\",{\"1\":{\"228\":1}}],[\"服务器通过node和soclet\",{\"1\":{\"220\":1}}],[\"服务器连接已建立\",{\"1\":{\"90\":1}}],[\"服务器不支持\",{\"1\":{\"54\":1}}],[\"服务器不会保留任何客户端的状态信息\",{\"1\":{\"44\":1}}],[\"服务器错误\",{\"0\":{\"54\":1}}],[\"服务器返回响应\",{\"1\":{\"44\":1}}],[\"服务器模型\",{\"1\":{\"44\":1}}],[\"即类中的get与set方法\",{\"1\":{\"344\":1}}],[\"即表示永远不存在的值\",{\"1\":{\"339\":1}}],[\"即除number\",{\"1\":{\"334\":1}}],[\"即true或false\",{\"1\":{\"334\":1}}],[\"即时通讯\",{\"1\":{\"222\":1}}],[\"即便其中一个是失败的\",{\"1\":{\"206\":1}}],[\"即便左表没有记录使用null填充\",{\"1\":{\"78\":1}}],[\"即便右表没有记录使用null填充\",{\"1\":{\"78\":1}}],[\"即ack=1\",{\"1\":{\"59\":1}}],[\"即syn+ack标志位设置为1\",{\"1\":{\"59\":1}}],[\"即syn=1标志\",{\"1\":{\"59\":1}}],[\"即ssl\",{\"1\":{\"57\":1}}],[\"客\",{\"1\":{\"59\":2}}],[\"客户端端口号相同\",{\"1\":{\"283\":1}}],[\"客户端\",{\"1\":{\"281\":1,\"286\":1}}],[\"客户端需要通过\",{\"1\":{\"227\":1}}],[\"客户端使用js接收消息\",{\"1\":{\"227\":1}}],[\"客户端与服务器使用websocket通信案例\",{\"0\":{\"227\":1}}],[\"客户端发送请求后\",{\"1\":{\"224\":1}}],[\"客户端发起请求\",{\"1\":{\"44\":1}}],[\"客户端网络信息\",{\"0\":{\"223\":1}}],[\"客户端对服务端的响应进行确认\",{\"1\":{\"59\":1}}],[\"客户端51323端口号向服务器端80号端口发起连接\",{\"1\":{\"59\":1}}],[\"客户端请求超时\",{\"1\":{\"53\":1}}],[\"唯一标识一致\",{\"1\":{\"58\":1}}],[\"如下\",{\"1\":{\"397\":1,\"398\":1,\"401\":1,\"495\":1}}],[\"如记录操作者信息\",{\"1\":{\"344\":1}}],[\"如类\",{\"1\":{\"326\":1}}],[\"如需保证数据安全\",{\"1\":{\"225\":1}}],[\"如需不去重\",{\"1\":{\"76\":1}}],[\"如何实现下来刷新\",{\"0\":{\"554\":1}}],[\"如何实现跨域\",{\"0\":{\"220\":1}}],[\"如何项目上线需要\",{\"0\":{\"517\":1}}],[\"如何项目没有引入子组件\",{\"1\":{\"488\":1}}],[\"如何找到根组件\",{\"0\":{\"501\":1}}],[\"如何传递参数\",{\"0\":{\"480\":1}}],[\"如何安装使用\",{\"0\":{\"476\":1}}],[\"如何安装使用步骤\",{\"0\":{\"363\":1}}],[\"如何解除watch监听事件\",{\"0\":{\"468\":1}}],[\"如何解决\",{\"0\":{\"407\":1,\"513\":1}}],[\"如何在setup语法糖前提下\",{\"0\":{\"462\":1}}],[\"如何代码加了debugger报错\",{\"1\":{\"407\":1}}],[\"如何使用state数据\",{\"1\":{\"365\":1}}],[\"如何获取响应式的store数据\",{\"0\":{\"365\":1}}],[\"如何线程解析到link为止\",{\"1\":{\"256\":1}}],[\"如何服务器发现唯一标识不一致\",{\"1\":{\"58\":1}}],[\"如同jquery一样\",{\"1\":{\"213\":1}}],[\"如字符串\",{\"1\":{\"190\":1}}],[\"如\",{\"1\":{\"167\":1,\"288\":1}}],[\"如果跳转到tab标签页面\",{\"1\":{\"553\":1}}],[\"如果在运行时条件不大可能改变则\",{\"1\":{\"552\":1}}],[\"如果需要频繁切换的情景下\",{\"1\":{\"552\":1}}],[\"如果当前组件加入了keep\",{\"1\":{\"495\":1}}],[\"如果当前组件使用了缓存组件\",{\"1\":{\"493\":1}}],[\"如果业务父组件引入的子组件\",{\"1\":{\"488\":1}}],[\"如果参数是函数\",{\"1\":{\"473\":1}}],[\"如果参数是\",{\"1\":{\"473\":1}}],[\"如果有的话\",{\"1\":{\"449\":2}}],[\"如果不需要透传\",{\"1\":{\"421\":1}}],[\"如果发现数据触发了set\",{\"1\":{\"393\":1}}],[\"如果代理服务器使用\",{\"1\":{\"356\":1}}],[\"如果设置为0\",{\"1\":{\"356\":1}}],[\"如果\",{\"1\":{\"356\":1,\"473\":1}}],[\"如果请求时间超过\",{\"1\":{\"356\":1}}],[\"如果找不到就需要用到\",{\"1\":{\"347\":1}}],[\"如果你习惯了\",{\"1\":{\"326\":1}}],[\"如果嵌套超过5级\",{\"1\":{\"246\":1}}],[\"如果使用同步方法会导致主线程阻塞\",{\"1\":{\"243\":1}}],[\"如果主线程处于休眠状态就先唤醒继续循环拿任务\",{\"1\":{\"240\":1}}],[\"如果抛出了异常\",{\"1\":{\"190\":1}}],[\"如果属性重复\",{\"1\":{\"184\":1}}],[\"如果then抛出了错误\",{\"1\":{\"167\":1}}],[\"如果没有用缓存组件\",{\"1\":{\"493\":1}}],[\"如果没有使用setup语法糖\",{\"1\":{\"440\":1}}],[\"如果没有那么多记录\",{\"1\":{\"374\":1}}],[\"如果没有起点\",{\"1\":{\"139\":1}}],[\"如果没有符合条件的元素返回\",{\"1\":{\"103\":1,\"104\":1}}],[\"如果没有java编译器会自动提供一个默认的构造方法\",{\"1\":{\"31\":1}}],[\"如果m>d\",{\"1\":{\"83\":1}}],[\"如果父级没有设置\",{\"1\":{\"11\":1}}],[\"值则会跳过任何类型检查\",{\"1\":{\"440\":1}}],[\"值的http\",{\"1\":{\"356\":1}}],[\"值是\",{\"1\":{\"449\":1}}],[\"值是异常报错\",{\"1\":{\"190\":1}}],[\"值是该字符串\",{\"1\":{\"190\":1}}],[\"值2\",{\"1\":{\"65\":1}}],[\"值1\",{\"1\":{\"65\":1}}],[\"值\",{\"1\":{\"64\":1,\"248\":1}}],[\"值都是\",{\"1\":{\"58\":1}}],[\"值为8\",{\"1\":{\"35\":1}}],[\"最早缓存数据会被释放缓存生命周期函数\",{\"1\":{\"455\":1}}],[\"最小调用时间就会变成4毫秒\",{\"1\":{\"246\":1}}],[\"最新版\",{\"1\":{\"153\":1,\"291\":1,\"476\":1}}],[\"最后执行父组件的mounted\",{\"1\":{\"494\":1}}],[\"最后组装到一个store中\",{\"1\":{\"483\":1}}],[\"最后更新页面dom元素的值\",{\"1\":{\"394\":1}}],[\"最后构成联合类型\",{\"1\":{\"346\":1}}],[\"最后实现攻击网站窃取数据\",{\"1\":{\"271\":1}}],[\"最后交于gpu进程\",{\"1\":{\"263\":1}}],[\"最后生成浏览器显示屏的像素点\",{\"1\":{\"255\":1}}],[\"最后一个done返回true\",{\"1\":{\"165\":1}}],[\"最后使用描边绘制形状\",{\"1\":{\"140\":1}}],[\"最后隐式转换为\",{\"1\":{\"24\":1}}],[\"最终计算为一个值\",{\"1\":{\"118\":1}}],[\"最终校验ack=1\",{\"1\":{\"59\":1}}],[\"最大周期\",{\"1\":{\"58\":1}}],[\"先进先出\",{\"1\":{\"243\":1}}],[\"先向服务器发送一个请求\",{\"1\":{\"58\":1}}],[\"先执行一次\",{\"1\":{\"33\":1}}],[\"协商缓存\",{\"1\":{\"58\":1}}],[\"协议\",{\"1\":{\"57\":1,\"279\":1}}],[\"强制直接使用缓存\",{\"1\":{\"58\":1}}],[\"强制转换\",{\"1\":{\"24\":2}}],[\"强缓存\",{\"1\":{\"58\":1}}],[\"隐藏时\",{\"1\":{\"540\":1}}],[\"隐私保护\",{\"1\":{\"57\":1}}],[\"隐式传参\",{\"1\":{\"521\":1}}],[\"隐式的就是强制深度监听\",{\"1\":{\"467\":1}}],[\"隐式结果输出是\",{\"1\":{\"24\":1}}],[\"隐式\",{\"1\":{\"24\":1}}],[\"隐式转换\",{\"1\":{\"24\":1}}],[\"来启动和卸载副作用\",{\"1\":{\"412\":1}}],[\"来封装和复用有状态逻辑的函数\",{\"1\":{\"412\":1}}],[\"来自服务器响应的\",{\"1\":{\"357\":2}}],[\"来定义\",{\"1\":{\"216\":1}}],[\"来实现身份验证机制\",{\"1\":{\"57\":1}}],[\"来创建一个对象\",{\"1\":{\"32\":1}}],[\"身份验证\",{\"1\":{\"57\":1}}],[\"传送\",{\"1\":{\"456\":1}}],[\"传递数据使用\",{\"1\":{\"498\":1}}],[\"传递给指令的参数\",{\"1\":{\"449\":1}}],[\"传递给指令的值\",{\"1\":{\"449\":1}}],[\"传递props\",{\"0\":{\"440\":1}}],[\"传统实现双向通信的方法缺点\",{\"1\":{\"224\":1}}],[\"传统实现即时通讯的方法\",{\"1\":{\"224\":1}}],[\"传统写法\",{\"1\":{\"159\":1,\"207\":1}}],[\"传输层安全性\",{\"1\":{\"57\":1}}],[\"传参2\",{\"1\":{\"354\":1}}],[\"传参方式1\",{\"1\":{\"354\":1}}],[\"传参\",{\"1\":{\"25\":1}}],[\"安全检查\",{\"1\":{\"219\":1}}],[\"安全套接字层\",{\"1\":{\"57\":1}}],[\"安装vuex依赖\",{\"1\":{\"476\":1}}],[\"安装vue脚手架\",{\"0\":{\"397\":1}}],[\"安装命令后面加\",{\"1\":{\"397\":1}}],[\"安装axios出现异常报错\",{\"1\":{\"397\":1}}],[\"安装\",{\"1\":{\"349\":1,\"363\":1,\"367\":1,\"510\":1,\"525\":1}}],[\"安装typescript\",{\"0\":{\"294\":1}}],[\"安装socket\",{\"1\":{\"220\":1}}],[\"安装打包工具\",{\"1\":{\"20\":1}}],[\"安装依赖\",{\"0\":{\"16\":1}}],[\"安装步骤\",{\"0\":{\"14\":1}}],[\"安装node插件\",{\"1\":{\"185\":1}}],[\"安装node\",{\"0\":{\"293\":1},\"1\":{\"13\":1}}],[\"为\",{\"1\":{\"551\":1}}],[\"为`https`\",{\"1\":{\"356\":1}}],[\"为变量添加类型约束\",{\"1\":{\"305\":1}}],[\"为每一分层生成如何绘制的指令\",{\"1\":{\"260\":1}}],[\"为了简单起见\",{\"1\":{\"369\":1}}],[\"为了完整类型推理\",{\"1\":{\"365\":1}}],[\"为了不阻塞渲染进程\",{\"1\":{\"241\":1}}],[\"为了保持websocket稳定的长连接\",{\"1\":{\"228\":1}}],[\"为了解决js加载顺序先后导致异常问题\",{\"1\":{\"213\":1}}],[\"为了节省资源和缩短时间\",{\"1\":{\"56\":1}}],[\"为圆心\",{\"1\":{\"137\":1}}],[\"为什么vite打包速度快于webpack\",{\"0\":{\"533\":1}}],[\"为什么发送请求不在\",{\"0\":{\"489\":1}}],[\"为什么不同时在一个元素上\",{\"1\":{\"426\":1}}],[\"为什么使用pinia管理vue数据状态\",{\"0\":{\"362\":1}}],[\"为什么\",{\"0\":{\"266\":1}}],[\"为什么css不会阻塞html解析\",{\"1\":{\"256\":1}}],[\"为什么websocket需要心跳机制\",{\"0\":{\"228\":1}}],[\"为什么叫es6\",{\"0\":{\"153\":1}}],[\"为什么还新增一个方法\",{\"1\":{\"95\":1}}],[\"为什么有了http为什么还要https\",{\"0\":{\"57\":1}}],[\"为m+2否则为d+2\",{\"1\":{\"83\":1}}],[\"为user的name字段添加索引\",{\"1\":{\"79\":1}}],[\"为某个字段\",{\"1\":{\"79\":1}}],[\"每2s向服务端发送一次消息\",{\"1\":{\"228\":1}}],[\"每次修改都会对整个项目重新打包编译\",{\"1\":{\"535\":1}}],[\"每次都会执行\",{\"1\":{\"493\":1}}],[\"每次加3\",{\"1\":{\"481\":1}}],[\"每次加10\",{\"1\":{\"480\":1}}],[\"每次循环从消息队列去第一个任务执行\",{\"1\":{\"245\":1}}],[\"每次返回一个包含value和done属性的对象\",{\"1\":{\"165\":1}}],[\"每次http请求都需要创建一个连接\",{\"1\":{\"56\":1}}],[\"每个模块都有自己的state\",{\"1\":{\"483\":1}}],[\"每个模块都是单独的文件和上下文\",{\"1\":{\"337\":1}}],[\"每个路由都需要映射到一个组件\",{\"1\":{\"369\":1}}],[\"每个对象都有一个constructor构造函数\",{\"1\":{\"301\":1}}],[\"每个任务有不同类型\",{\"1\":{\"245\":1}}],[\"每个类都有自己的构造函数\",{\"1\":{\"171\":1}}],[\"每个类都有构造方法\",{\"1\":{\"31\":1}}],[\"每个颜色位进行比较\",{\"1\":{\"146\":2}}],[\"每个资源都是唯一的\",{\"1\":{\"58\":1}}],[\"每个请求都是独立的\",{\"1\":{\"44\":1}}],[\"就显示默认值\",{\"1\":{\"443\":1}}],[\"就会更新修改data里面的数据\",{\"1\":{\"394\":1}}],[\"就去调用监听器的更新方法更改页面的数据\",{\"1\":{\"393\":1}}],[\"就得到了对应接口的结果\",{\"1\":{\"358\":1}}],[\"就得到了对应虚线的形状了\",{\"1\":{\"140\":1}}],[\"就可以给每个插槽定义一个name属性分配唯一的id\",{\"1\":{\"444\":1}}],[\"就可以使用类型别名简化类型\",{\"1\":{\"309\":1}}],[\"就可以重用上次的连接\",{\"1\":{\"56\":1}}],[\"就需要先定义参数\",{\"1\":{\"440\":1}}],[\"就需要重新计算\",{\"1\":{\"265\":1}}],[\"就需要改变number的值\",{\"1\":{\"105\":1}}],[\"就是点击时触发\",{\"1\":{\"549\":1}}],[\"就是默认插槽\",{\"1\":{\"443\":1}}],[\"就是放到了number对象下面\",{\"1\":{\"178\":1}}],[\"就是方法重写\",{\"1\":{\"173\":1}}],[\"就是使用\",{\"1\":{\"86\":1}}],[\"就实现了一个数组拷贝\",{\"1\":{\"96\":1}}],[\"就很不方便了\",{\"1\":{\"95\":1}}],[\"就关闭连接\",{\"1\":{\"59\":1}}],[\"就建立连接\",{\"1\":{\"59\":1}}],[\"就返回304\",{\"1\":{\"58\":1}}],[\"就返回状态码\",{\"1\":{\"58\":1}}],[\"就相对根子号\",{\"1\":{\"11\":1}}],[\"在项目配置里排除指定目录\",{\"1\":{\"548\":1}}],[\"在项目中\",{\"1\":{\"464\":1}}],[\"在事件里面通过e\",{\"1\":{\"544\":1}}],[\"在事件循环机制作用下\",{\"1\":{\"255\":1}}],[\"在app\",{\"1\":{\"541\":1}}],[\"在路由的\",{\"1\":{\"516\":1}}],[\"在create阶段需要通过异步操作获取dom元素\",{\"1\":{\"491\":1}}],[\"在create阶段如何获取dom元素\",{\"0\":{\"491\":1}}],[\"在change事件后更新\",{\"1\":{\"433\":1}}],[\"在beforecreate阶段无法获取到methods的方法\",{\"1\":{\"489\":1}}],[\"在需要的子组件写\",{\"1\":{\"472\":1}}],[\"在编译时进行一些处理\",{\"1\":{\"460\":1}}],[\"在从\",{\"1\":{\"455\":1}}],[\"在这个作用上他们是一样的\",{\"1\":{\"549\":1}}],[\"在这里编写插件代码\",{\"1\":{\"451\":1}}],[\"在这一过程\",{\"1\":{\"257\":1}}],[\"在元素被插入到\",{\"1\":{\"448\":1}}],[\"在绑定元素的父组件\",{\"1\":{\"448\":2}}],[\"在绑定元素的\",{\"1\":{\"448\":1}}],[\"在绑定自定义属性时\",{\"1\":{\"417\":1}}],[\"在所有组件中都可用\",{\"1\":{\"447\":1}}],[\"在模板中启用\",{\"1\":{\"447\":2}}],[\"在父组件\",{\"1\":{\"440\":1}}],[\"在循环列表上使用ref模板引用得到包含所有元素的集合数组\",{\"1\":{\"437\":1}}],[\"在组件上使用动态class\",{\"1\":{\"419\":1}}],[\"在rules规则里面新增\",{\"1\":{\"407\":1}}],[\"在main\",{\"1\":{\"399\":1,\"400\":1}}],[\"在vue\",{\"1\":{\"398\":1}}],[\"在vue项目里使用\",{\"1\":{\"368\":1}}],[\"在构造函数中\",{\"1\":{\"390\":1}}],[\"在导航离开渲染该组件的对应路由时调用\",{\"1\":{\"383\":1}}],[\"在当前路由改变\",{\"1\":{\"383\":1}}],[\"在渲染该组件的对应路由被验证前调用\",{\"1\":{\"383\":1}}],[\"在发送请求之前做些什么\",{\"1\":{\"359\":1}}],[\"在浏览器中则是\",{\"1\":{\"357\":1}}],[\"在浏览器源码中\",{\"1\":{\"245\":1}}],[\"在node\",{\"1\":{\"357\":1}}],[\"在没有设置\",{\"1\":{\"356\":1}}],[\"在传递给\",{\"1\":{\"356\":1}}],[\"在ts项目中引入第三方库\",{\"1\":{\"347\":1}}],[\"在tsconfig\",{\"1\":{\"291\":1}}],[\"在实现上我们要注意严格判断两个参数的类型是否相等\",{\"1\":{\"345\":1}}],[\"在对\",{\"1\":{\"340\":1}}],[\"在对象原型链之间插入一个原型\",{\"1\":{\"184\":1}}],[\"在函数调用执行时\",{\"1\":{\"321\":1}}],[\"在函数外\",{\"1\":{\"288\":1}}],[\"在类前面就是抽象类\",{\"1\":{\"304\":1}}],[\"在类里面使用关键字\",{\"1\":{\"30\":1}}],[\"在不登出a的情况下\",{\"1\":{\"274\":1}}],[\"在标签的\",{\"1\":{\"270\":1}}],[\"在标签属性中\",{\"1\":{\"270\":1}}],[\"在内联的\",{\"1\":{\"270\":1}}],[\"在\",{\"1\":{\"270\":4,\"284\":1,\"344\":1,\"383\":1,\"440\":1,\"457\":1,\"484\":2,\"554\":1}}],[\"在下载js时\",{\"1\":{\"256\":1}}],[\"在一次事件循环中\",{\"1\":{\"245\":1}}],[\"在往返请求后继续保持连接打开\",{\"1\":{\"224\":1}}],[\"在数字后面+n\",{\"1\":{\"209\":1}}],[\"在用的时候导入\",{\"1\":{\"208\":1}}],[\"在调用next时执行参数\",{\"1\":{\"166\":1}}],[\"在function和函数名之间使用\",{\"1\":{\"166\":1}}],[\"在指定的\",{\"1\":{\"141\":2}}],[\"在js中创建canvas画布进行绘制\",{\"1\":{\"133\":1}}],[\"在html中添加canvas标签\",{\"1\":{\"133\":1}}],[\"在http1\",{\"1\":{\"56\":1}}],[\"在请求时告诉服务器不关闭tcp连接\",{\"1\":{\"56\":1}}],[\"在请求头加上\",{\"1\":{\"56\":1}}],[\"遵照浏览器标准\",{\"1\":{\"55\":1}}],[\"版本中新增的\",{\"1\":{\"473\":1}}],[\"版本\",{\"1\":{\"54\":1,\"291\":1}}],[\"无名字插槽\",{\"1\":{\"503\":1}}],[\"无需指定依赖项\",{\"1\":{\"469\":1}}],[\"无需再进行握手\",{\"1\":{\"56\":1}}],[\"无法关闭监听\",{\"1\":{\"467\":1}}],[\"无法获取state数据\",{\"1\":{\"364\":1}}],[\"无法做到精确计时\",{\"1\":{\"246\":1}}],[\"无法通信\",{\"1\":{\"218\":1}}],[\"无法处理请求\",{\"1\":{\"54\":1}}],[\"无论值是否更改\",{\"1\":{\"449\":1}}],[\"无论是amd还是cmd\",{\"1\":{\"213\":1}}],[\"无论是commonjs\",{\"1\":{\"213\":1}}],[\"无论绘制贝塞尔任何曲线\",{\"1\":{\"139\":1}}],[\"无符号\",{\"1\":{\"83\":1}}],[\"无限个\",{\"1\":{\"23\":1}}],[\"表现形态不一样\",{\"1\":{\"519\":1}}],[\"表达式代码\",{\"1\":{\"270\":1}}],[\"表达式会得到undefined\",{\"1\":{\"107\":1}}],[\"表单修饰符\",{\"0\":{\"433\":1}}],[\"表单model\",{\"0\":{\"432\":1}}],[\"表单默认的提交数据的格式\",{\"1\":{\"92\":1}}],[\"表单数据会被编码成一系列的部分\",{\"1\":{\"92\":1}}],[\"表关联\",{\"0\":{\"78\":1}}],[\"表别名\",{\"1\":{\"75\":1}}],[\"表名\",{\"1\":{\"64\":6,\"65\":4,\"66\":2,\"74\":2}}],[\"表明服务器暂时处于超负载或正在停机维护\",{\"1\":{\"54\":1}}],[\"表示html模板\",{\"1\":{\"415\":1}}],[\"表示用于解码响应的编码\",{\"1\":{\"356\":1}}],[\"表示浏览器将要响应的数据类型\",{\"1\":{\"356\":1}}],[\"表示跨域请求时是否需要使用凭证\",{\"1\":{\"356\":1}}],[\"表示一个不包含值的类型\",{\"1\":{\"339\":1}}],[\"表示一个值同时拥有多种类型的特性\",{\"1\":{\"334\":1}}],[\"表示一个值可以是几种类型之一\",{\"1\":{\"334\":1}}],[\"表示没有任何类型\",{\"1\":{\"339\":1}}],[\"表示任意类型\",{\"1\":{\"334\":1}}],[\"表示函数没有返回值\",{\"1\":{\"334\":1}}],[\"表示函数类型\",{\"1\":{\"334\":1}}],[\"表示非原始类型\",{\"1\":{\"334\":1}}],[\"表示枚举类型\",{\"1\":{\"334\":1}}],[\"表示元组\",{\"1\":{\"334\":1}}],[\"表示数组\",{\"1\":{\"334\":1}}],[\"表示数字\",{\"1\":{\"334\":1}}],[\"表示唯一的\",{\"1\":{\"334\":1}}],[\"表示布尔值\",{\"1\":{\"334\":1}}],[\"表示文本字符串\",{\"1\":{\"334\":1}}],[\"表示文件的最后修改时间\",{\"1\":{\"58\":1}}],[\"表示同时满足所有类型特性\",{\"1\":{\"323\":1}}],[\"表示可选链操作符\",{\"1\":{\"207\":1}}],[\"表示结束\",{\"1\":{\"165\":1}}],[\"表示\",{\"1\":{\"158\":1,\"318\":2}}],[\"表示对上一个请求连接的报文进行确认\",{\"1\":{\"59\":1}}],[\"表示对请求资源的访问被服务器拒绝\",{\"1\":{\"53\":1}}],[\"表示向服务端发起连接的请求\",{\"1\":{\"59\":1}}],[\"表示客户端应当采用get方法获取资源\",{\"1\":{\"55\":1}}],[\"表示服务器端在执行请求时发生了错误\",{\"1\":{\"54\":1}}],[\"表示服务器允许访问资源\",{\"1\":{\"52\":1}}],[\"表示在服务器上没有找到请求的资源\",{\"1\":{\"53\":1}}],[\"表示发送的请求需要有通过\",{\"1\":{\"53\":1}}],[\"表示资源存在着另一个\",{\"1\":{\"52\":1}}],[\"表示资源临时被分配了新的\",{\"1\":{\"52\":1}}],[\"表示资源已被分配了新的\",{\"1\":{\"52\":1}}],[\"表示请求成功\",{\"1\":{\"51\":1}}],[\"表示从客户端发来的请求在服务器端被正确处理\",{\"1\":{\"51\":1}}],[\"✨\",{\"1\":{\"54\":1}}],[\"认证的认证信息\",{\"1\":{\"53\":1}}],[\"临时重定向\",{\"1\":{\"52\":1}}],[\"临时性重定向\",{\"1\":{\"52\":1}}],[\"但特殊场景也可写\",{\"1\":{\"465\":1}}],[\"但我们在这里\",{\"1\":{\"369\":1}}],[\"但最好使用\",{\"1\":{\"363\":1}}],[\"但必须有一个微队列\",{\"1\":{\"245\":1}}],[\"但不能从根本上解决问题\",{\"1\":{\"535\":1}}],[\"但不保证顺序一致\",{\"1\":{\"437\":1}}],[\"但不影响其他的promise返回结果\",{\"1\":{\"206\":1}}],[\"但不是首选方法\",{\"1\":{\"35\":1}}],[\"但是前端开发是\",{\"0\":{\"517\":1}}],[\"但是组件里面修改数据可以使用\",{\"1\":{\"509\":1}}],[\"但是一般请求函数被封装到methods里面\",{\"1\":{\"489\":1}}],[\"但是子组件没有声明定义这样的属性\",{\"1\":{\"421\":1}}],[\"但是弥补了混入的以下缺点\",{\"1\":{\"412\":1}}],[\"但是该组件被复用时调用\",{\"1\":{\"383\":1}}],[\"但是该类的实例无法访问\",{\"1\":{\"338\":1}}],[\"但是实现只有最下面的一次\",{\"1\":{\"345\":1}}],[\"但是不推荐使用any类型\",{\"1\":{\"336\":1}}],[\"但是使用未知类型会类型报错\",{\"1\":{\"314\":1}}],[\"但是只能在\",{\"1\":{\"291\":1}}],[\"但是需要考虑全数据类型\",{\"1\":{\"288\":1}}],[\"但是已有属性可以修改\",{\"1\":{\"252\":1}}],[\"但是消息队列有优先级\",{\"1\":{\"243\":1}}],[\"但是也可以省略不写\",{\"1\":{\"171\":1}}],[\"但是\",{\"1\":{\"169\":1,\"524\":1}}],[\"但是可以用reflect\",{\"1\":{\"164\":1}}],[\"但是重叠区域的颜色做加处理\",{\"1\":{\"146\":1}}],[\"但是很多人会问\",{\"1\":{\"95\":1}}],[\"但是还没执行\",{\"1\":{\"51\":1}}],[\"但因发生请求未满足条件的情况\",{\"1\":{\"52\":1}}],[\"但响应报文不含实体的主体部分\",{\"1\":{\"51\":1}}],[\"聊一聊http的状态码有哪些\",{\"0\":{\"50\":1}}],[\"一定要在创建之后遍历添加组件\",{\"1\":{\"400\":1}}],[\"一样\",{\"1\":{\"383\":1}}],[\"一次为每个节点计算出它的最终样式\",{\"1\":{\"257\":1}}],[\"一种特殊的数据帧包\",{\"1\":{\"228\":1}}],[\"一种是arc方法\",{\"1\":{\"138\":1}}],[\"一班\",{\"1\":{\"165\":1}}],[\"一般常见的有数字枚举\",{\"1\":{\"329\":1}}],[\"一般常用t\",{\"1\":{\"321\":1}}],[\"一般常量使用大写\",{\"1\":{\"156\":1}}],[\"一般是promise对象\",{\"1\":{\"190\":1}}],[\"一般是覆盖数据\",{\"1\":{\"49\":1}}],[\"一\",{\"0\":{\"132\":1,\"486\":1}}],[\"一个new\",{\"1\":{\"498\":1}}],[\"一个包含上述内容的数组\",{\"1\":{\"467\":1}}],[\"一个包含修饰符的对象\",{\"1\":{\"449\":1}}],[\"一个很常见的情况是仅仅需要在\",{\"1\":{\"450\":1}}],[\"一个对象\",{\"1\":{\"449\":1}}],[\"一个组件内有多个插槽时\",{\"1\":{\"444\":1}}],[\"一个组合式函数也可以挂靠在所属组件的生命周期上\",{\"1\":{\"412\":1}}],[\"一个buffer实例\",{\"1\":{\"356\":1}}],[\"一个进程至少有一个线程\",{\"1\":{\"239\":1}}],[\"一个带括号一个不带\",{\"1\":{\"97\":1}}],[\"一个表的主键是另一个表的外键\",{\"1\":{\"78\":1}}],[\"一个表示一个任意字\",{\"1\":{\"71\":1}}],[\"一个查询的结果是另一个查询的条件\",{\"1\":{\"77\":1}}],[\"一个类不能同时被\",{\"1\":{\"28\":1}}],[\"只显示图片的右下边区域\",{\"1\":{\"546\":1}}],[\"只显示图片的右上边区域\",{\"1\":{\"546\":1}}],[\"只显示图片的右边区域\",{\"1\":{\"546\":1}}],[\"只显示图片的左下边区域\",{\"1\":{\"546\":1}}],[\"只显示图片的左上边区域\",{\"1\":{\"546\":1}}],[\"只显示图片的左边区域\",{\"1\":{\"546\":1}}],[\"只显示图片的中间区域\",{\"1\":{\"546\":1}}],[\"只显示图片的底部区域\",{\"1\":{\"546\":1}}],[\"只显示图片的顶部区域\",{\"1\":{\"546\":1}}],[\"只显示裁剪路径内的区域\",{\"1\":{\"145\":1}}],[\"只保证图片的短边能完全显示出来\",{\"1\":{\"546\":1}}],[\"只对发生变化的模块进行重新编译\",{\"1\":{\"535\":1}}],[\"只会执行一个\",{\"1\":{\"493\":1}}],[\"只读的计算属性\",{\"1\":{\"465\":1}}],[\"只读\",{\"1\":{\"338\":1}}],[\"只有经过身份验证的用户才能创建帖子\",{\"1\":{\"386\":1}}],[\"只有\",{\"1\":{\"356\":1}}],[\"只有类的成员可以访问它们\",{\"1\":{\"338\":1}}],[\"只有编译少量文件才使用\",{\"1\":{\"291\":1}}],[\"只有白名单中的地址才可以跨域访问\",{\"1\":{\"282\":1}}],[\"只有新图像会被保留\",{\"1\":{\"146\":1}}],[\"只能用于对象类型\",{\"1\":{\"464\":1}}],[\"只能用在数组上\",{\"1\":{\"196\":1}}],[\"只能指定\",{\"1\":{\"356\":1}}],[\"只能为对象指定类型\",{\"1\":{\"342\":1}}],[\"只能在声明时和构造函数内赋值\",{\"1\":{\"333\":1}}],[\"只能在消息队列排队\",{\"1\":{\"243\":1}}],[\"只能深拷贝顶层属性和值\",{\"1\":{\"288\":1}}],[\"只能等待一方发完\",{\"1\":{\"222\":1}}],[\"只返回成功结果\",{\"1\":{\"190\":1}}],[\"只返回请求头\",{\"1\":{\"46\":1}}],[\"只是看起来更像一个面向对象编程的类\",{\"1\":{\"170\":1}}],[\"只要满足条件就一直循环\",{\"1\":{\"33\":1}}],[\"隧道\",{\"1\":{\"45\":1}}],[\"诊断\",{\"1\":{\"45\":1}}],[\"删除文件夹\",{\"1\":{\"289\":1}}],[\"删除指定键值对\",{\"1\":{\"169\":1}}],[\"删除指定条数据\",{\"1\":{\"65\":1}}],[\"删除元素\",{\"1\":{\"168\":1}}],[\"删除并新增\",{\"1\":{\"125\":1}}],[\"删除时候并返回删除的内容\",{\"1\":{\"125\":1}}],[\"删除数量\",{\"1\":{\"125\":1}}],[\"删除数组的第一个元素\",{\"1\":{\"121\":1}}],[\"删除数组最后一项\",{\"1\":{\"116\":1}}],[\"删除数据\",{\"1\":{\"89\":1}}],[\"删除数据库\",{\"1\":{\"63\":1}}],[\"删除索引\",{\"1\":{\"79\":1}}],[\"删除字段\",{\"1\":{\"64\":1}}],[\"删除\",{\"0\":{\"353\":1},\"1\":{\"45\":1,\"125\":1,\"251\":1}}],[\"删除头尾空白符的字符串\",{\"1\":{\"36\":1}}],[\"新版本浏览器已经可以防范\",{\"1\":{\"270\":2}}],[\"新特性\",{\"0\":{\"154\":1,\"186\":1,\"189\":1,\"195\":1,\"199\":1,\"204\":1}}],[\"新老图像都显示\",{\"1\":{\"146\":1}}],[\"新图像会显示在老图像的下面\",{\"1\":{\"146\":1}}],[\"新图像会覆盖在原有图像\",{\"1\":{\"146\":1}}],[\"新建文件夹\",{\"1\":{\"289\":1}}],[\"新建一个表\",{\"1\":{\"77\":1}}],[\"新建入口文件main\",{\"0\":{\"18\":1}}],[\"新字段名\",{\"1\":{\"64\":1}}],[\"新增环境变量\",{\"1\":{\"513\":1}}],[\"新增验证码\",{\"1\":{\"276\":1}}],[\"新增元素\",{\"1\":{\"168\":1}}],[\"新增字段\",{\"1\":{\"64\":1}}],[\"新增\",{\"0\":{\"351\":1},\"1\":{\"45\":1}}],[\"请求返回后\",{\"1\":{\"554\":1}}],[\"请求的配置信息\",{\"1\":{\"357\":1}}],[\"请求的资源可能引起冲突\",{\"1\":{\"53\":1}}],[\"请求方式\",{\"1\":{\"356\":1}}],[\"请求方法\",{\"1\":{\"349\":1,\"356\":1}}],[\"请求体只有url是必填的\",{\"1\":{\"356\":1}}],[\"请求来源限制\",{\"1\":{\"276\":1}}],[\"请求还是比较频繁\",{\"1\":{\"224\":1}}],[\"请求处理中\",{\"1\":{\"90\":1}}],[\"请求未初始化\",{\"1\":{\"90\":1}}],[\"请求关闭连接\",{\"1\":{\"59\":1}}],[\"请求头\",{\"1\":{\"356\":2}}],[\"请求头名称\",{\"1\":{\"356\":1}}],[\"请求头配置\",{\"1\":{\"58\":1}}],[\"请求头命中协商缓存就返回304状态码\",{\"1\":{\"58\":1}}],[\"请求头和响应头都需要配置\",{\"1\":{\"58\":1}}],[\"请求超出服务器能力范围\",{\"1\":{\"54\":1}}],[\"请求报文存在语法错误\",{\"1\":{\"53\":1}}],[\"请求已完成\",{\"1\":{\"90\":1}}],[\"请求已接收\",{\"1\":{\"90\":1}}],[\"请求已接受\",{\"1\":{\"51\":1}}],[\"请求已经被实现\",{\"1\":{\"51\":1}}],[\"请求\",{\"0\":{\"85\":1,\"349\":1},\"1\":{\"46\":8,\"60\":1}}],[\"请继续输入\",{\"1\":{\"41\":1}}],[\"请输入\",{\"1\":{\"41\":1}}],[\"获取url\",{\"1\":{\"544\":1}}],[\"获取url属性\",{\"1\":{\"544\":1}}],[\"获取隐式参数方式\",{\"1\":{\"521\":1}}],[\"获取路由参数\",{\"1\":{\"521\":1}}],[\"获取元素dom\",{\"1\":{\"491\":1}}],[\"获取getter\",{\"1\":{\"482\":1}}],[\"获取自定义指令对象的属性\",{\"1\":{\"450\":1}}],[\"获取输入的值\",{\"1\":{\"394\":1}}],[\"获取事件名称\",{\"1\":{\"391\":1,\"393\":1,\"394\":2}}],[\"获取到事件名\",{\"1\":{\"391\":1}}],[\"获取动态参数\",{\"1\":{\"371\":1,\"403\":1}}],[\"获取一个变量或对象的类型\",{\"1\":{\"346\":1}}],[\"获取索引类型的属性名\",{\"1\":{\"346\":1}}],[\"获取`promise`中的结果类型\",{\"1\":{\"324\":1}}],[\"获取函数的返回值类型\",{\"1\":{\"324\":1}}],[\"获取函数的参数类型\",{\"1\":{\"324\":1}}],[\"获取href就会报不存在\",{\"1\":{\"315\":1}}],[\"获取客户端传来的回调函数名称\",{\"1\":{\"281\":1}}],[\"获取最终样式\",{\"1\":{\"257\":1}}],[\"获取symbolde描述\",{\"0\":{\"203\":1}}],[\"获取剩余参数\",{\"1\":{\"196\":1}}],[\"获取对象属性的描述\",{\"1\":{\"248\":1}}],[\"获取对象的描述\",{\"0\":{\"249\":1}}],[\"获取对象的某个对象的属性描述\",{\"1\":{\"194\":1}}],[\"获取对象的原型\",{\"1\":{\"184\":1}}],[\"获取对象所有属性的描述\",{\"0\":{\"194\":1},\"1\":{\"194\":1}}],[\"获取对象value值集合\",{\"1\":{\"192\":1}}],[\"获取对象key的键值集合\",{\"1\":{\"192\":1}}],[\"获取返回结果\",{\"1\":{\"190\":1}}],[\"获取静态属性和方法\",{\"1\":{\"172\":1}}],[\"获取文件内容异步\",{\"1\":{\"167\":1}}],[\"获取参数的参数集合\",{\"1\":{\"162\":1}}],[\"获取canvas画布渲染盒子\",{\"1\":{\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":2,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1}}],[\"获取数组\",{\"1\":{\"129\":1}}],[\"获取数据成功\",{\"1\":{\"281\":1}}],[\"获取数据\",{\"1\":{\"89\":1,\"478\":1,\"496\":1}}],[\"获取访问指定索引的元素值\",{\"1\":{\"95\":1}}],[\"获取3条记录\",{\"1\":{\"74\":1}}],[\"获取资源的元数据\",{\"1\":{\"46\":1}}],[\"获取\",{\"1\":{\"45\":1,\"435\":1,\"478\":1}}],[\"获取控制台输入的值\",{\"1\":{\"41\":2}}],[\"获取字符串长度\",{\"1\":{\"36\":1}}],[\"包装数据\",{\"0\":{\"482\":1}}],[\"包含页面变量的对象\",{\"1\":{\"460\":1}}],[\"包含以下属性\",{\"1\":{\"449\":1}}],[\"包含计划中的\",{\"1\":{\"326\":1}}],[\"包含类似\",{\"1\":{\"270\":2}}],[\"包含\",{\"1\":{\"270\":1}}],[\"包含位图的位置\",{\"1\":{\"263\":1}}],[\"包括深层嵌套的对象\",{\"1\":{\"463\":1}}],[\"包括整数和浮点数\",{\"1\":{\"334\":1}}],[\"包括\",{\"1\":{\"326\":1}}],[\"包括对象\",{\"1\":{\"169\":1}}],[\"包括对象名称和对象类型\",{\"1\":{\"32\":1}}],[\"包括其他的老图像区域也会透明\",{\"1\":{\"146\":1}}],[\"包括1和4\",{\"1\":{\"70\":1}}],[\"包名\",{\"1\":{\"41\":1}}],[\"设置最大缓存组件数\",{\"1\":{\"455\":1}}],[\"设置404路由\",{\"0\":{\"404\":1}}],[\"设置动态路由\",{\"1\":{\"403\":1}}],[\"设置路由元信息\",{\"1\":{\"386\":1}}],[\"设置之后所有的全局作用域中的代码会合并到同一个文件中\",{\"1\":{\"291\":1}}],[\"设置属性描述符\",{\"0\":{\"250\":1}}],[\"设置对象的原型对象\",{\"1\":{\"184\":1}}],[\"设置\",{\"1\":{\"140\":1,\"521\":1}}],[\"设置请求类型\",{\"0\":{\"91\":1}}],[\"设置默认值\",{\"1\":{\"64\":1}}],[\"设置序列号seq\",{\"1\":{\"59\":1}}],[\"设置左上角默认关闭最小化按钮\",{\"1\":{\"39\":1}}],[\"设计软件\",{\"1\":{\"7\":1}}],[\">close<\",{\"1\":{\"456\":1}}],[\">count\",{\"1\":{\"411\":1}}],[\">open\",{\"1\":{\"456\":1}}],[\">one<\",{\"1\":{\"432\":1}}],[\">hello<\",{\"1\":{\"453\":1}}],[\">hi\",{\"1\":{\"419\":1}}],[\">toggle<\",{\"1\":{\"453\":1}}],[\">two<\",{\"1\":{\"432\":1}}],[\">you\",{\"1\":{\"439\":1}}],[\">please\",{\"1\":{\"432\":1}}],[\">a<\",{\"1\":{\"431\":2}}],[\">add\",{\"1\":{\"428\":1}}],[\">do\",{\"1\":{\"431\":1}}],[\">say\",{\"1\":{\"429\":2}}],[\">button<\",{\"1\":{\"417\":1}}],[\">点击<\",{\"1\":{\"391\":1,\"393\":1}}],[\"><\",{\"1\":{\"215\":1,\"216\":1,\"219\":1,\"220\":1,\"285\":1,\"406\":1,\"416\":2,\"417\":3,\"419\":4,\"420\":4,\"432\":1,\"444\":3,\"446\":1,\"450\":2,\"504\":2,\"544\":1}}],[\">=5\",{\"1\":{\"123\":1}}],[\">=\",{\"1\":{\"70\":1,\"88\":1,\"356\":1}}],[\">客\",{\"1\":{\"59\":3}}],[\">服\",{\"1\":{\"59\":4}}],[\">\",{\"1\":{\"39\":1,\"66\":2,\"68\":7,\"76\":1,\"77\":3,\"100\":1,\"102\":1,\"103\":1,\"104\":1,\"133\":1,\"185\":1,\"215\":1,\"216\":1,\"219\":1,\"343\":1,\"372\":2,\"375\":1,\"389\":1,\"391\":1,\"393\":1,\"406\":2,\"416\":1,\"417\":4,\"419\":2,\"424\":3,\"426\":5,\"431\":8,\"432\":9,\"434\":4,\"435\":3,\"436\":2,\"437\":2,\"439\":2,\"440\":1,\"441\":1,\"443\":2,\"444\":3,\"445\":3,\"446\":1,\"453\":3,\"454\":2,\"455\":2,\"456\":2,\"457\":3,\"462\":1,\"498\":5,\"504\":3,\"505\":2}}],[\"注入数据\",{\"1\":{\"470\":1}}],[\"注入不受控制代码\",{\"1\":{\"270\":1}}],[\"注入其他属性或者标签\",{\"1\":{\"270\":1}}],[\"注意需要定义css\",{\"1\":{\"453\":1}}],[\"注意事项\",{\"1\":{\"190\":1}}],[\"注意显示的是老图像的部分区域\",{\"1\":{\"146\":1}}],[\"注意\",{\"1\":{\"97\":1,\"98\":1,\"101\":1,\"103\":1,\"105\":1,\"107\":1,\"108\":1,\"116\":1,\"218\":1,\"345\":1,\"356\":1,\"460\":1,\"465\":1,\"548\":1}}],[\"注意sql中\",{\"1\":{\"72\":1}}],[\"注册事件\",{\"1\":{\"39\":1}}],[\"注解\",{\"1\":{\"23\":1}}],[\"布局树不显示\",{\"1\":{\"258\":1}}],[\"布局树和dom树不一定一一对应\",{\"1\":{\"258\":1}}],[\"布局阶段会依次遍历\",{\"1\":{\"258\":1}}],[\"布局\",{\"0\":{\"258\":1},\"1\":{\"39\":1,\"255\":1}}],[\"布尔类型\",{\"0\":{\"307\":1},\"1\":{\"417\":1}}],[\"布尔\",{\"1\":{\"23\":2}}],[\"引入插件\",{\"1\":{\"531\":1}}],[\"引入usestore\",{\"1\":{\"484\":1}}],[\"引入\",{\"1\":{\"349\":1,\"363\":1,\"510\":1,\"553\":1}}],[\"引入需要使用import\",{\"1\":{\"337\":1}}],[\"引入socket\",{\"1\":{\"220\":1}}],[\"引入依赖\",{\"1\":{\"216\":1}}],[\"引入js模块文件\",{\"1\":{\"215\":1}}],[\"引入及使用模块文件\",{\"1\":{\"214\":1}}],[\"引入了新的原始数据类型symbol\",{\"1\":{\"164\":1}}],[\"引入基础类\",{\"1\":{\"39\":1}}],[\"引用值都是\",{\"1\":{\"97\":1}}],[\"引用类型变成响应式对象\",{\"1\":{\"463\":1}}],[\"引用类型\",{\"1\":{\"23\":1}}],[\"替换成\",{\"1\":{\"384\":1}}],[\"替换a标签\",{\"1\":{\"368\":1}}],[\"替换所有匹配的字符串\",{\"1\":{\"36\":1}}],[\"替换数组的元素\",{\"1\":{\"35\":1}}],[\"拆分字符串\",{\"1\":{\"36\":1}}],[\"返回来源页面\",{\"1\":{\"543\":1}}],[\"返回一条记录\",{\"1\":{\"374\":1}}],[\"返回一个渲染函数\",{\"1\":{\"460\":1}}],[\"返回一个包含所有初始数据状态的对象\",{\"1\":{\"364\":1}}],[\"返回一个\",{\"1\":{\"356\":1}}],[\"返回一个非promise对象\",{\"1\":{\"190\":1}}],[\"返回一个每一项被处理过的新数组\",{\"1\":{\"115\":1}}],[\"返回一个指定的元素在数组中最后出现的位置\",{\"1\":{\"114\":1}}],[\"返回一个数组的迭代对象\",{\"1\":{\"99\":1}}],[\"返回一个组合后的数组\",{\"1\":{\"96\":1}}],[\"返回\",{\"1\":{\"356\":1,\"379\":1}}],[\"返回不同类型的数据\",{\"1\":{\"345\":1}}],[\"返回剩余的属性类型\",{\"1\":{\"324\":1}}],[\"返回值是字符串\",{\"1\":{\"321\":1}}],[\"返回值是promise的成功值\",{\"1\":{\"190\":1}}],[\"返回对象在函数内定义属于深拷贝\",{\"1\":{\"288\":1}}],[\"返回的是一个数组\",{\"1\":{\"193\":1}}],[\"返回的结果是删除的部分\",{\"1\":{\"116\":1}}],[\"返回promise对象\",{\"1\":{\"190\":1}}],[\"返回键名对应的值\",{\"1\":{\"169\":1}}],[\"返回map的元素长度\",{\"1\":{\"169\":1}}],[\"返回结果是数字\",{\"1\":{\"321\":2}}],[\"返回结果是一个promise\",{\"1\":{\"167\":1}}],[\"返回结果是promise对象\",{\"1\":{\"167\":1}}],[\"返回结果是\",{\"1\":{\"165\":1}}],[\"返回数组中某个指定的元素位置\",{\"1\":{\"110\":1}}],[\"返回数组中满足条件的第一个元素索引值\",{\"1\":{\"104\":1}}],[\"返回数组中满足条件的第一个元素\",{\"1\":{\"103\":1}}],[\"返回数组中符合条件的元素\",{\"1\":{\"102\":1}}],[\"返回被改变后的数组\",{\"1\":{\"98\":1}}],[\"返回右表所有记录\",{\"1\":{\"78\":1}}],[\"返回左表所有记录\",{\"1\":{\"78\":1}}],[\"返回2个表都有的数据\",{\"1\":{\"78\":1}}],[\"返回0\",{\"1\":{\"77\":1}}],[\"返回查询结果的数量\",{\"1\":{\"77\":1}}],[\"返回最小值\",{\"1\":{\"76\":1}}],[\"返回最大值\",{\"1\":{\"76\":1}}],[\"返回集合数量\",{\"1\":{\"76\":1}}],[\"返回集合平均值\",{\"1\":{\"76\":1}}],[\"返回字符的字符串形式\",{\"1\":{\"37\":1}}],[\"返回替换后的新字符串\",{\"1\":{\"36\":1}}],[\"返回布尔值\",{\"1\":{\"36\":1,\"100\":1,\"109\":1,\"111\":1,\"123\":1}}],[\"返回此对象本身\",{\"1\":{\"36\":1}}],[\"将所有的模块转换为\",{\"1\":{\"534\":1}}],[\"将html也打包\",{\"1\":{\"531\":1}}],[\"将函数结果返回存放到不重复的对象集合中\",{\"1\":{\"526\":1}}],[\"将多个文件合并成一个对象的中\",{\"1\":{\"526\":1}}],[\"将多维转1维\",{\"1\":{\"202\":1}}],[\"将多维数组转低维数组\",{\"0\":{\"202\":1}}],[\"将模块化开发的碎片资源组合为一个或多个静态资源\",{\"1\":{\"526\":1}}],[\"将mutation的方法映射到methods中\",{\"1\":{\"480\":1}}],[\"将store对象挂载到vue实例中\",{\"1\":{\"476\":1}}],[\"将返回它的规范化值\",{\"1\":{\"473\":1}}],[\"将参数备份\",{\"1\":{\"391\":1}}],[\"将\",{\"1\":{\"384\":1}}],[\"将会\",{\"1\":{\"356\":1}}],[\"将自动加在\",{\"1\":{\"356\":1}}],[\"将对象所有属性都转换成指定类型\",{\"1\":{\"324\":1}}],[\"将类型的所有属性变为可选\",{\"1\":{\"324\":1}}],[\"将类型的所有属性变为必选\",{\"1\":{\"324\":1}}],[\"将每个参数类型放进一个元组中\",{\"1\":{\"324\":1}}],[\"将代码合并为一个文件\",{\"1\":{\"291\":1}}],[\"将cookie设置成\",{\"1\":{\"272\":1}}],[\"将来某一个层改变后\",{\"1\":{\"259\":1}}],[\"将字符串转换成\",{\"1\":{\"256\":1}}],[\"将字符串转换为字符数组\",{\"1\":{\"36\":1}}],[\"将消息广播给所有客户端\",{\"1\":{\"220\":1}}],[\"将3维转1维\",{\"1\":{\"202\":1}}],[\"将二维数组或map类型转成对象\",{\"0\":{\"200\":1}}],[\"将伪数组转成数组\",{\"1\":{\"163\":1}}],[\"将数组或对象的属性值转换为只读的\",{\"1\":{\"324\":1}}],[\"将数组转换为逗号分割的参数序列\",{\"1\":{\"163\":1}}],[\"将数据提交到危险网站\",{\"1\":{\"275\":1}}],[\"将数据更新到服务器\",{\"1\":{\"46\":1}}],[\"将处理结果更新到\",{\"1\":{\"88\":1}}],[\"将大于6的数据插入到新表中\",{\"1\":{\"77\":1}}],[\"将画布填充元素\",{\"1\":{\"39\":1}}],[\"将视口高度分层了100份\",{\"1\":{\"11\":1}}],[\"将视口宽度分成了100份\",{\"1\":{\"11\":1}}],[\"转一下响应式数据\",{\"1\":{\"464\":1}}],[\"转失败返回原始值\",{\"1\":{\"433\":1}}],[\"转后再解构\",{\"1\":{\"365\":1}}],[\"转译为\",{\"1\":{\"305\":1}}],[\"转成css树对象\",{\"1\":{\"256\":1}}],[\"转字符串\",{\"1\":{\"129\":1}}],[\"转换为小写\",{\"1\":{\"36\":1}}],[\"转换为大写\",{\"1\":{\"36\":1}}],[\"转为asc11码值\",{\"1\":{\"24\":1}}],[\"95\",{\"1\":{\"207\":1}}],[\"9999\",{\"1\":{\"83\":2}}],[\"967\",{\"1\":{\"83\":3}}],[\"9000\",{\"1\":{\"356\":1}}],[\"9007199254740991\",{\"1\":{\"209\":1}}],[\"90\",{\"1\":{\"39\":1}}],[\"9\",{\"0\":{\"36\":1,\"56\":1,\"142\":1,\"163\":1,\"314\":1,\"334\":1,\"447\":1},\"1\":{\"39\":1,\"83\":2}}],[\"97\",{\"1\":{\"24\":1}}],[\"查询结构判断\",{\"1\":{\"77\":1}}],[\"查询\",{\"0\":{\"350\":1},\"1\":{\"77\":1}}],[\"查询性别不为\",{\"1\":{\"72\":1}}],[\"查询性别为\",{\"1\":{\"72\":1}}],[\"查询名字为3个字姓王的用户\",{\"1\":{\"71\":1}}],[\"查询名字为2个字姓王的用户\",{\"1\":{\"71\":1}}],[\"查询名字带第一个是\",{\"1\":{\"71\":1}}],[\"查询等级大于100的数据是否存在\",{\"1\":{\"77\":1}}],[\"查询等级\",{\"1\":{\"70\":1}}],[\"查询数据\",{\"1\":{\"65\":1}}],[\"查找元素\",{\"1\":{\"129\":1}}],[\"查找\",{\"1\":{\"72\":1}}],[\"查找等级\",{\"1\":{\"69\":1}}],[\"查找数组元素\",{\"1\":{\"35\":1}}],[\"查看脚手架版本\",{\"1\":{\"397\":1}}],[\"查看config信息\",{\"1\":{\"290\":1}}],[\"查看镜像源\",{\"1\":{\"290\":1}}],[\"查看进程及内存使用情况\",{\"1\":{\"289\":2}}],[\"查看应用进程\",{\"1\":{\"289\":1}}],[\"查看路径下的文件信息\",{\"1\":{\"289\":1}}],[\"查看表结构都有哪些字段\",{\"1\":{\"64\":1}}],[\"查看方式\",{\"1\":{\"13\":1}}],[\"含有五个数\",{\"1\":{\"35\":1}}],[\"第3个接口返回结果\",{\"1\":{\"358\":1}}],[\"第3次\",{\"1\":{\"166\":3}}],[\"第1个接口返回结果\",{\"1\":{\"358\":1}}],[\"第1次\",{\"1\":{\"166\":4}}],[\"第四次分手\",{\"1\":{\"59\":1}}],[\"第2个接口返回结果\",{\"1\":{\"358\":1}}],[\"第2次\",{\"1\":{\"166\":5}}],[\"第2\",{\"1\":{\"59\":1}}],[\"第三次分手\",{\"1\":{\"59\":1}}],[\"第三次握手\",{\"1\":{\"59\":1}}],[\"第三个元素\",{\"1\":{\"35\":1}}],[\"第二种调用方法\",{\"1\":{\"480\":1}}],[\"第二种使用mapstate\",{\"1\":{\"478\":1}}],[\"第二种是使用泛型数组类型array\",{\"1\":{\"309\":1}}],[\"第二个参数是传参\",{\"1\":{\"481\":1}}],[\"第二个参数是失败回调\",{\"1\":{\"167\":1}}],[\"第二个元素\",{\"1\":{\"35\":1}}],[\"第二次或第n次进入页面会执行哪些生命周期\",{\"0\":{\"493\":1}}],[\"第二次清空再push\",{\"1\":{\"393\":1}}],[\"第二次分手\",{\"1\":{\"59\":1}}],[\"第二次握手\",{\"1\":{\"59\":1}}],[\"第一种\",{\"1\":{\"478\":1}}],[\"第一种在数组元素的类型后面跟着\",{\"1\":{\"309\":1}}],[\"第一个参数是你的应用中\",{\"1\":{\"363\":1}}],[\"第一个函数是成功回调\",{\"1\":{\"167\":1}}],[\"第一个元素\",{\"1\":{\"35\":1}}],[\"第一次进入页面\",{\"1\":{\"495\":1}}],[\"第一次调用next方法\",{\"1\":{\"165\":1}}],[\"第一次挥手\",{\"1\":{\"59\":1}}],[\"第一次握手\",{\"1\":{\"59\":1}}],[\"创建时\",{\"1\":{\"458\":1}}],[\"创建项目\",{\"1\":{\"397\":1}}],[\"创建事件监听\",{\"1\":{\"394\":1}}],[\"创建并挂载根实例\",{\"1\":{\"369\":1}}],[\"创建路由实例并传递\",{\"1\":{\"369\":1}}],[\"创建使用pinia\",{\"1\":{\"363\":1}}],[\"创建实例后修改默认值\",{\"1\":{\"355\":1}}],[\"创建实例时配置默认值\",{\"1\":{\"355\":1}}],[\"创建ts格式文件\",{\"0\":{\"295\":1}}],[\"创建store\",{\"1\":{\"476\":1}}],[\"创建script标签\",{\"1\":{\"281\":1}}],[\"创建symbol\",{\"1\":{\"164\":1}}],[\"创建连接\",{\"1\":{\"227\":1}}],[\"创建连接的过程又比较消耗资源和时间\",{\"1\":{\"56\":1}}],[\"创建服务器的实例对象\",{\"1\":{\"227\":1}}],[\"创建服务器\",{\"1\":{\"220\":1}}],[\"创建二维画布\",{\"1\":{\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":2,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1}}],[\"创建\",{\"1\":{\"88\":1,\"164\":1}}],[\"创建视图\",{\"1\":{\"80\":1}}],[\"创建索引\",{\"1\":{\"79\":1}}],[\"创建数据表\",{\"1\":{\"64\":1}}],[\"创建数据库\",{\"1\":{\"63\":1}}],[\"创建数组有两种方式\",{\"1\":{\"35\":1}}],[\"创建类入口与包名一致\",{\"1\":{\"41\":1}}],[\"创建画布\",{\"1\":{\"39\":1}}],[\"创建窗口\",{\"1\":{\"39\":1}}],[\"创建一个指针对象\",{\"1\":{\"165\":1}}],[\"创建一个数组迭代对象\",{\"1\":{\"113\":1}}],[\"创建一个视图\",{\"1\":{\"80\":1}}],[\"创建一个\",{\"1\":{\"37\":1}}],[\"创建字符串\",{\"1\":{\"36\":1}}],[\"创建对象时\",{\"1\":{\"32\":1}}],[\"创建对象需要三步\",{\"1\":{\"32\":1}}],[\"创建对象\",{\"0\":{\"32\":1},\"1\":{\"190\":1}}],[\"可获取\",{\"1\":{\"551\":1}}],[\"可与联合类型使用\",{\"1\":{\"317\":1}}],[\"可能获取到的不是最新的布局信息\",{\"1\":{\"264\":1}}],[\"可能影响到分层及绘制等其他渲染阶段\",{\"1\":{\"264\":1}}],[\"可迭代\",{\"1\":{\"129\":1,\"166\":1}}],[\"可为空\",{\"1\":{\"112\":1}}],[\"可存时间戳\",{\"1\":{\"83\":1}}],[\"可选的选项\",{\"1\":{\"451\":1}}],[\"可选的静态类型\",{\"1\":{\"326\":1}}],[\"可选值如下\",{\"1\":{\"370\":1}}],[\"可选属性通过\",{\"1\":{\"318\":1}}],[\"可选链操作符\",{\"0\":{\"207\":1}}],[\"可选\",{\"1\":{\"34\":3}}],[\"可以不做区分\",{\"1\":{\"549\":1}}],[\"可以携带参数跳转任意页面\",{\"1\":{\"543\":1}}],[\"可以共存\",{\"1\":{\"524\":1}}],[\"可以销毁数据\",{\"1\":{\"496\":1}}],[\"可以在函数中直接使用\",{\"1\":{\"480\":1}}],[\"可以在整个项目任意位置实现数据共享\",{\"1\":{\"475\":1}}],[\"可以在组件这样声明\",{\"1\":{\"421\":1}}],[\"可以持有任何类型的值\",{\"1\":{\"463\":1}}],[\"可以通过\",{\"1\":{\"421\":1}}],[\"可以通过控制台\",{\"1\":{\"315\":1}}],[\"可以改成\",{\"1\":{\"401\":1}}],[\"可以直接解构\",{\"1\":{\"365\":1}}],[\"可以直接简写\",{\"1\":{\"185\":1}}],[\"可以禁用代理功能\",{\"1\":{\"356\":1}}],[\"可以监视\",{\"1\":{\"344\":2}}],[\"可以观察\",{\"1\":{\"344\":1}}],[\"可以附加到类声明\",{\"1\":{\"344\":1}}],[\"可以为任意类型指定别名\",{\"1\":{\"342\":1}}],[\"可以为空\",{\"1\":{\"329\":1}}],[\"可以被赋值为\",{\"1\":{\"339\":1}}],[\"可以被任何对象缓存\",{\"1\":{\"58\":1}}],[\"可以使用wx\",{\"1\":{\"543\":1}}],[\"可以使用\",{\"1\":{\"491\":1}}],[\"可以使用keepalive组件\",{\"1\":{\"455\":1}}],[\"可以使用number\",{\"1\":{\"334\":1}}],[\"可以使用括号改变条件语句的优先级\",{\"1\":{\"68\":1}}],[\"可以修改\",{\"1\":{\"329\":1}}],[\"可以修改具体某个字段\",{\"1\":{\"49\":1}}],[\"可以用插槽\",{\"1\":{\"502\":1}}],[\"可以用extends\",{\"1\":{\"320\":1}}],[\"可以用来判断是否包含一个元素\",{\"1\":{\"110\":1}}],[\"可以用来优化if多条件判断语句\",{\"1\":{\"109\":1}}],[\"可以再tsconfig中写注释\",{\"1\":{\"291\":1}}],[\"可以指定不同的选项来告诉编译器如何编译当前项目\",{\"1\":{\"291\":1}}],[\"可以把这块内存空间简单的理解为进程\",{\"1\":{\"238\":1}}],[\"可以把default直接给别名\",{\"1\":{\"185\":1}}],[\"可以是任何类型的值\",{\"1\":{\"169\":1}}],[\"可以4个点控制\",{\"1\":{\"139\":1}}],[\"可以接受负数\",{\"1\":{\"95\":1}}],[\"可以实现局部刷新功能\",{\"1\":{\"87\":1}}],[\"可以放到变量名前后\",{\"1\":{\"35\":1}}],[\"可以相互调用\",{\"1\":{\"29\":1}}],[\"可以自定义\",{\"1\":{\"23\":1}}],[\"语法糖版本\",{\"1\":{\"460\":1}}],[\"语法\",{\"1\":{\"198\":2,\"218\":1}}],[\"语法替换动态变量\",{\"1\":{\"158\":1}}],[\"语法如下\",{\"1\":{\"33\":1}}],[\"语言不通\",{\"1\":{\"132\":1}}],[\"语言为内置数据类型\",{\"1\":{\"37\":1}}],[\"语句\",{\"1\":{\"34\":3}}],[\"7天\",{\"1\":{\"538\":1}}],[\"797\",{\"1\":{\"83\":3}}],[\"709\",{\"1\":{\"83\":1}}],[\"744\",{\"1\":{\"83\":1}}],[\"775\",{\"1\":{\"83\":2}}],[\"777\",{\"1\":{\"83\":3}}],[\"767\",{\"1\":{\"83\":1}}],[\"768\",{\"1\":{\"83\":1}}],[\"7>浏览器解析并渲染页面\",{\"1\":{\"60\":1}}],[\"7\",{\"0\":{\"34\":1,\"50\":1,\"140\":1,\"161\":1,\"262\":1,\"312\":1,\"332\":1,\"438\":1,\"495\":1,\"554\":1},\"1\":{\"39\":1,\"83\":3,\"98\":2,\"99\":1,\"100\":1,\"101\":2,\"102\":2,\"103\":2,\"104\":1,\"106\":1,\"107\":1,\"125\":3,\"126\":2,\"202\":2}}],[\"750rpx\",{\"1\":{\"11\":2}}],[\"继承接口\",{\"1\":{\"320\":1}}],[\"继承父类接口的所有属性\",{\"1\":{\"320\":1}}],[\"继承父类的所有属性\",{\"1\":{\"303\":1}}],[\"继承父类属性和方法\",{\"1\":{\"173\":1}}],[\"继承子类修饰符不能为\",{\"1\":{\"27\":1}}],[\"继续复习吧\",{\"1\":{\"129\":1}}],[\"继续用这个连接交互\",{\"1\":{\"56\":1}}],[\"继续下一次循环\",{\"1\":{\"33\":1}}],[\"循环结构\",{\"0\":{\"33\":1}}],[\"693\",{\"1\":{\"83\":3}}],[\"615\",{\"1\":{\"83\":1}}],[\"64\",{\"1\":{\"513\":1}}],[\"647\",{\"1\":{\"83\":1}}],[\"648\",{\"1\":{\"83\":1}}],[\"60\",{\"1\":{\"139\":1}}],[\"607\",{\"1\":{\"83\":1}}],[\"608\",{\"1\":{\"83\":1}}],[\"600\",{\"1\":{\"18\":1,\"151\":1}}],[\"65535\",{\"1\":{\"83\":1}}],[\"65\",{\"1\":{\"83\":3}}],[\"6>服务器处理请求\",{\"1\":{\"60\":1}}],[\"6\",{\"0\":{\"33\":1,\"49\":1,\"139\":1,\"160\":1,\"210\":1,\"261\":1,\"311\":1,\"331\":1,\"394\":1,\"437\":1,\"494\":1,\"553\":1},\"1\":{\"39\":1,\"77\":1,\"98\":3,\"99\":1,\"100\":1,\"101\":2,\"102\":2,\"103\":2,\"104\":3,\"105\":2,\"106\":2,\"107\":2,\"117\":1,\"125\":4,\"126\":2,\"127\":1,\"202\":2,\"234\":1}}],[\"下面会触发计算属性的可写方法\",{\"1\":{\"465\":1}}],[\"下面会介绍各个参数的细节\",{\"1\":{\"448\":1}}],[\"下面我们会解释这些\",{\"1\":{\"453\":1}}],[\"下面的语句将创建一个puppy对象\",{\"1\":{\"32\":1}}],[\"下边是实现\",{\"1\":{\"345\":1}}],[\"下载地址\",{\"1\":{\"293\":1}}],[\"下载指定版本安装即可完成升级或降级\",{\"1\":{\"20\":1}}],[\"会通过websocket通知浏览器\",{\"1\":{\"535\":1}}],[\"会通过\",{\"1\":{\"534\":1}}],[\"会出现代理接口跨域问题\",{\"0\":{\"513\":1}}],[\"会出现2个特殊的生命周期\",{\"1\":{\"458\":1}}],[\"会在mounted后执行一个activated周期\",{\"1\":{\"495\":1}}],[\"会执行5个生命周期\",{\"1\":{\"495\":1}}],[\"会先执行父的前3个生命周期\",{\"1\":{\"488\":1}}],[\"会使它的值具有深层响应性\",{\"1\":{\"463\":1}}],[\"会被发送\",{\"1\":{\"356\":1}}],[\"会生成一个个的指引信息\",{\"1\":{\"263\":1}}],[\"会继续解析后续的html\",{\"1\":{\"256\":1}}],[\"会产生一个渲染任务\",{\"1\":{\"255\":1}}],[\"会遇到不能立即执行的任务\",{\"1\":{\"241\":1}}],[\"会自动被添加到根元素上\",{\"1\":{\"421\":1}}],[\"会自动多个进程\",{\"1\":{\"240\":1}}],[\"会自动去重\",{\"1\":{\"168\":1}}],[\"会截取到后面的字母\",{\"1\":{\"178\":1}}],[\"会根据请求按需动态引入编译\",{\"1\":{\"534\":1}}],[\"会根据入口文件分析出所有的模块依赖关系\",{\"1\":{\"534\":1}}],[\"会根据表数据的修改而修改\",{\"1\":{\"80\":1}}],[\"会根据查询语句保存在数据字段中\",{\"1\":{\"80\":1}}],[\"会调用构造方法初始化对象\",{\"1\":{\"32\":1}}],[\"会把字符\",{\"1\":{\"24\":1}}],[\"声明响应式对象\",{\"1\":{\"463\":1}}],[\"声明响应数据\",{\"1\":{\"463\":1}}],[\"声明props参数\",{\"1\":{\"440\":1}}],[\"声明图片文件可使用\",{\"1\":{\"401\":1}}],[\"声明式\",{\"1\":{\"372\":1,\"373\":1}}],[\"声明类\",{\"1\":{\"335\":1}}],[\"声明类结构及方法\",{\"1\":{\"320\":1}}],[\"声明数组\",{\"1\":{\"335\":1}}],[\"声明函数\",{\"1\":{\"335\":1}}],[\"声明对象描述\",{\"1\":{\"194\":1}}],[\"声明一个对象\",{\"1\":{\"32\":1}}],[\"声明\",{\"1\":{\"32\":1}}],[\"通用请求\",{\"0\":{\"354\":1}}],[\"通用导入\",{\"1\":{\"185\":1}}],[\"通常会与\",{\"1\":{\"411\":1}}],[\"通常缩写为\",{\"1\":{\"274\":1}}],[\"通常用于发送表单数据\",{\"1\":{\"92\":1}}],[\"通常用于上传文件\",{\"1\":{\"92\":1}}],[\"通常用于普通文本文件\",{\"1\":{\"92\":1}}],[\"通常用于检查资源是否存在\",{\"1\":{\"46\":1}}],[\"通信的双方可以同时发送和接收消息\",{\"1\":{\"222\":1}}],[\"通信双方不能同时发消息\",{\"1\":{\"222\":1}}],[\"通信工程\",{\"1\":{\"2\":1}}],[\"通过路由的name属性和params\",{\"1\":{\"521\":1}}],[\"通过路由的\",{\"1\":{\"521\":1}}],[\"通过环境变量改变接口默认的url地址\",{\"1\":{\"513\":1}}],[\"通过插槽实现父子组件传递组件就需要用到插槽作用域\",{\"1\":{\"505\":1}}],[\"通过给子组件添加ref选择器\",{\"1\":{\"500\":1}}],[\"通过bus\",{\"1\":{\"498\":1}}],[\"通过mapmutations\",{\"1\":{\"480\":1}}],[\"通过commit调用motation的函数add\",{\"1\":{\"479\":1}}],[\"通过to指定到元素节点\",{\"1\":{\"456\":1}}],[\"通过setup参数传递进去\",{\"1\":{\"440\":1}}],[\"通过symbol\",{\"1\":{\"164\":1}}],[\"通过v\",{\"1\":{\"424\":1}}],[\"通过useattrs方法获取透传属性\",{\"1\":{\"422\":1}}],[\"通过返回值暴露所管理的状态\",{\"1\":{\"412\":1}}],[\"通过对象的多个选项\",{\"1\":{\"411\":1}}],[\"通过遍历根节点的子元素\",{\"1\":{\"389\":1}}],[\"通过选项式将state\",{\"1\":{\"364\":1}}],[\"通过接口+extends\",{\"1\":{\"321\":1}}],[\"通过断点工具可以直接显示原始代码\",{\"1\":{\"291\":1}}],[\"通过夸张的关键字\",{\"1\":{\"275\":1}}],[\"通过onmessage\",{\"1\":{\"232\":1}}],[\"通过需要的字符前面的字符获取后面所需的数据\",{\"1\":{\"198\":1}}],[\"通过需要的字符后面的字符获取前面的数据\",{\"1\":{\"198\":1}}],[\"通过关键字\",{\"1\":{\"173\":1}}],[\"通过关键字new实现\",{\"1\":{\"32\":1}}],[\"通过自定义迭代器实现对象数组属性可迭代\",{\"1\":{\"165\":1}}],[\"通过addcolorstop\",{\"1\":{\"149\":1,\"150\":1}}],[\"通过next方法放行\",{\"0\":{\"379\":1}}],[\"通过next\",{\"1\":{\"99\":1}}],[\"通过修改表结构添加索引\",{\"1\":{\"79\":1}}],[\"通过分组\",{\"1\":{\"76\":1}}],[\"通过\",{\"1\":{\"35\":4,\"88\":2,\"137\":1,\"140\":1,\"162\":1,\"172\":1,\"216\":2,\"257\":1,\"305\":1,\"359\":1,\"391\":1,\"478\":1}}],[\"这是默认值\",{\"1\":{\"472\":1}}],[\"这是默认设置\",{\"1\":{\"146\":1}}],[\"这会在\",{\"1\":{\"450\":1}}],[\"这会是一个用来作为默认值的函数\",{\"1\":{\"440\":1}}],[\"这可以用于直接操作\",{\"1\":{\"449\":1}}],[\"这不是一个\",{\"1\":{\"440\":1}}],[\"这不是和属性访问器\",{\"1\":{\"95\":1}}],[\"这意味\",{\"1\":{\"426\":1}}],[\"这将设置一个\",{\"1\":{\"356\":1}}],[\"这使用\",{\"1\":{\"356\":1}}],[\"这使测试更加容易\",{\"1\":{\"356\":1}}],[\"这几个请求方法\",{\"1\":{\"356\":1}}],[\"这对于日志记录\",{\"1\":{\"344\":1}}],[\"这时会有报错\",{\"1\":{\"426\":1}}],[\"这时解决办法就是使用类型断言\",{\"1\":{\"314\":1}}],[\"这时就需要使用bigint\",{\"1\":{\"209\":1}}],[\"这一步完成之后会得到一个带有样式的dom树\",{\"1\":{\"257\":1}}],[\"这种情况下我们可以直接用一个函数来定义指令\",{\"1\":{\"450\":1}}],[\"这种写法就叫\",{\"1\":{\"305\":1}}],[\"这种写法更接近于传统语言\",{\"1\":{\"170\":1}}],[\"这种说法已经无法满足复杂的浏览器环境\",{\"1\":{\"245\":1}}],[\"这种模式下\",{\"1\":{\"243\":1}}],[\"这里面的剩余参数会自动合并成一个对象\",{\"1\":{\"196\":1}}],[\"这里的constructor\",{\"1\":{\"97\":1}}],[\"这些方法比较灵活\",{\"1\":{\"129\":1}}],[\"这些请求方式具体的作用是什么\",{\"0\":{\"46\":1}}],[\"这也是数组拷贝的一个方法\",{\"1\":{\"96\":1}}],[\"这样的项目会越来臃肿\",{\"1\":{\"534\":1}}],[\"这样得到的name还是响应式的数据\",{\"1\":{\"464\":1}}],[\"这样也会造成js获取布局属性时\",{\"1\":{\"264\":1}}],[\"这样浏览器都可以支持bundle\",{\"1\":{\"185\":1}}],[\"这样我们就实现数组拼接组合\",{\"1\":{\"96\":1}}],[\"这样就造成浪费主线程时间\",{\"1\":{\"243\":1}}],[\"这样就可以把2个不同表关联起来\",{\"1\":{\"78\":1}}],[\"这样就启动了一个简单的应用了\",{\"1\":{\"19\":1}}],[\"这表示client端没有数据要发送给server端了\",{\"1\":{\"59\":1}}],[\"这个问题需要看项目了业务的情况\",{\"1\":{\"488\":1}}],[\"这个文件里保存的\",{\"1\":{\"291\":1}}],[\"这个时候就用到子查询\",{\"1\":{\"77\":1}}],[\"这个时间匹配不上\",{\"1\":{\"58\":1}}],[\"这个构造器仅有一个参数\",{\"1\":{\"31\":1,\"32\":1}}],[\"这2个属性\",{\"1\":{\"58\":2}}],[\"这三个属性\",{\"1\":{\"58\":1}}],[\"用这2个转换\",{\"1\":{\"530\":1}}],[\"用函数的方式\",{\"1\":{\"411\":1}}],[\"用法同transition\",{\"1\":{\"454\":1}}],[\"用法\",{\"1\":{\"349\":1}}],[\"用pick\",{\"1\":{\"324\":1}}],[\"用omit<t\",{\"1\":{\"324\":1}}],[\"用interface定义同一个接口名\",{\"1\":{\"320\":1}}],[\"用的轮询长轮询\",{\"1\":{\"224\":1}}],[\"用途\",{\"1\":{\"83\":3}}],[\"用户存放需要最快执行的任务\",{\"1\":{\"243\":1}}],[\"用户存放用户操作后产生的事件处理任务\",{\"1\":{\"243\":1}}],[\"用户交互\",{\"1\":{\"240\":1}}],[\"用户\",{\"1\":{\"66\":2,\"227\":1}}],[\"用于针对某个服务端\",{\"1\":{\"532\":1}}],[\"用于访问内置插件\",{\"1\":{\"531\":1}}],[\"用于避免数据污染\",{\"1\":{\"496\":1}}],[\"用于多数据状态分模块存储\",{\"1\":{\"477\":1}}],[\"用于将组件的参数和方法抛出\",{\"1\":{\"460\":1}}],[\"用于装饰类的访问器\",{\"1\":{\"344\":1}}],[\"用于描述对象的结构\",{\"1\":{\"334\":1}}],[\"用于定义具名常量集合\",{\"1\":{\"334\":1}}],[\"用于初始化对象\",{\"1\":{\"301\":1}}],[\"用于存放计时器达到后的回调任务\",{\"1\":{\"243\":1}}],[\"用于提供低延迟\",{\"1\":{\"222\":1}}],[\"用于接收消息的任何事件监听器必须首先使用origin和source属性来检查消息的发送者的身份\",{\"1\":{\"218\":1}}],[\"用于同源策略不同页面间通信\",{\"1\":{\"218\":1,\"220\":1}}],[\"用于表示固定数量和类型的数组\",{\"1\":{\"334\":1}}],[\"用于表示大整型的数字\",{\"1\":{\"209\":1}}],[\"用于表单提交数据\",{\"1\":{\"46\":1}}],[\"用于处理多个promise的返回结果\",{\"1\":{\"206\":1}}],[\"用于创建map\",{\"1\":{\"193\":1}}],[\"用于解决回调地狱的问题\",{\"1\":{\"167\":1}}],[\"用于开发图形秘籍类的游戏\",{\"1\":{\"132\":1}}],[\"用于展示通过\",{\"1\":{\"131\":1}}],[\"用于从数组创建一个包含数组值的可迭代对象\",{\"1\":{\"128\":1}}],[\"用于从数组的指定位置拷贝元素到数组的另一个指定位置中\",{\"1\":{\"98\":1}}],[\"用于添加或删除数组中的元素\",{\"1\":{\"125\":1}}],[\"用于对模块的源代码进行转换\",{\"1\":{\"530\":1}}],[\"用于对数组的元素进行排序\",{\"1\":{\"124\":1}}],[\"用于对已知资源的部分数据修改\",{\"1\":{\"49\":1}}],[\"用于把数组中的所有元素转换一个字符串\",{\"1\":{\"112\":1}}],[\"用于通过拥有\",{\"1\":{\"108\":1}}],[\"用于使用固定值填充数组\",{\"1\":{\"101\":1}}],[\"用于传输图像数据\",{\"1\":{\"92\":1}}],[\"用于传输\",{\"1\":{\"92\":3}}],[\"用于传输非http协议的数据\",{\"1\":{\"46\":1}}],[\"用于部分数据修改\",{\"1\":{\"46\":1}}],[\"用于获取服务器数据\",{\"1\":{\"46\":1}}],[\"用于上传指定资源\",{\"1\":{\"46\":1}}],[\"用于删除指定资源\",{\"1\":{\"46\":1}}],[\"用于检测数组所有元素是否都符合指定条件\",{\"1\":{\"100\":1}}],[\"用于检测服务器允许的\",{\"1\":{\"46\":1}}],[\"用于检测字符串是否以指定的前缀开始\",{\"1\":{\"36\":1}}],[\"用于建立隧道连接\",{\"1\":{\"46\":1}}],[\"用于向服务器请求获取某个资源的头部信息\",{\"1\":{\"46\":1}}],[\"用\",{\"1\":{\"30\":1,\"207\":1,\"322\":1,\"552\":1}}],[\"用来修改状态\",{\"1\":{\"411\":1}}],[\"用来修饰类\",{\"1\":{\"28\":1}}],[\"用来显示动态切换的组件内容\",{\"1\":{\"369\":1}}],[\"用来定义类应该包含哪些属性和方法\",{\"1\":{\"320\":1}}],[\"用来指定编译后文件的存放位置\",{\"1\":{\"291\":1}}],[\"用来指定项目中要使用的库\",{\"1\":{\"291\":1}}],[\"用来指定\",{\"1\":{\"291\":1}}],[\"用来指定被编译的文件列表\",{\"1\":{\"291\":1}}],[\"用来指定继承的配置文件\",{\"1\":{\"291\":1}}],[\"用来指定哪些文件不需要被编译\",{\"1\":{\"291\":1}}],[\"用来指定哪些文件需要被编译\",{\"1\":{\"291\":1}}],[\"用来判断一个数组是否包含一个指定的值\",{\"1\":{\"109\":1}}],[\"用来创建抽象类和抽象方法\",{\"1\":{\"28\":1}}],[\"用来创建类方法和类变量\",{\"1\":{\"28\":1}}],[\"局部变量\",{\"1\":{\"30\":2}}],[\"和map\",{\"1\":{\"464\":1}}],[\"和mutationobserver\",{\"1\":{\"243\":1}}],[\"和v\",{\"1\":{\"426\":1}}],[\"和es的模块一样\",{\"1\":{\"337\":1}}],[\"和es5的parseint\",{\"1\":{\"178\":1}}],[\"和undefined\",{\"1\":{\"324\":1}}],[\"和未知\",{\"1\":{\"317\":1}}],[\"和对应的转换前的位置\",{\"1\":{\"291\":1}}],[\"和object\",{\"0\":{\"192\":1}}],[\"和number\",{\"0\":{\"178\":1}}],[\"和reactive\",{\"0\":{\"463\":1}}],[\"和rejected\",{\"1\":{\"167\":1}}],[\"和return\",{\"1\":{\"160\":1}}],[\"和linedashoffset设置偏移量\",{\"1\":{\"140\":1}}],[\"和控制点2\",{\"1\":{\"138\":1}}],[\"和keys一样\",{\"1\":{\"128\":1}}],[\"和字符类型\",{\"1\":{\"83\":1}}],[\"和服务器协商确认下这个缓存能不能用\",{\"1\":{\"58\":1}}],[\"和302含义相同\",{\"1\":{\"52\":1}}],[\"和\",{\"0\":{\"190\":1,\"552\":1},\"1\":{\"28\":2,\"45\":2,\"76\":1,\"83\":4,\"119\":1,\"234\":1,\"320\":1,\"326\":1,\"339\":1,\"356\":3,\"365\":1,\"367\":1,\"383\":1,\"440\":1,\"449\":2,\"450\":2,\"457\":1,\"521\":1}}],[\"和index\",{\"0\":{\"18\":1}}],[\"是单向数据流\",{\"1\":{\"509\":1}}],[\"是做什么的\",{\"1\":{\"453\":1}}],[\"是响应式的\",{\"1\":{\"365\":1}}],[\"是所有结果集合\",{\"1\":{\"358\":1}}],[\"是所有的promise的返回结构都成功\",{\"1\":{\"206\":1}}],[\"是生成此响应的请求\",{\"1\":{\"357\":1}}],[\"是服务器响应头\",{\"1\":{\"357\":1}}],[\"是带有\",{\"1\":{\"356\":1}}],[\"是\",{\"1\":{\"356\":1,\"357\":1,\"362\":1}}],[\"是作为请求体被发送的数据\",{\"1\":{\"356\":1}}],[\"是与请求一起发送的\",{\"1\":{\"356\":1}}],[\"是创建请求时使用的方法\",{\"1\":{\"356\":1}}],[\"是用于请求的服务器\",{\"1\":{\"356\":1}}],[\"是用于请求接口数据的一种异步解决方案\",{\"1\":{\"349\":1}}],[\"是typescript提供的一个高级语法\",{\"1\":{\"344\":1}}],[\"是什么\",{\"0\":{\"329\":1}}],[\"是多种类型\",{\"1\":{\"322\":1}}],[\"是微软对js的升级\",{\"1\":{\"305\":1}}],[\"是javascript的超集\",{\"1\":{\"305\":1}}],[\"是转换后代码的位置\",{\"1\":{\"291\":1}}],[\"是将每个分块变成位图\",{\"1\":{\"262\":1}}],[\"是将对象转成二维数组\",{\"1\":{\"200\":1}}],[\"是浏览器渲染主线程的工作方式\",{\"1\":{\"245\":1}}],[\"是线程js的当前对象\",{\"1\":{\"230\":1}}],[\"是window对象的一个方法\",{\"1\":{\"218\":1}}],[\"是一个用于现代\",{\"1\":{\"526\":1}}],[\"是一个\",{\"1\":{\"473\":1}}],[\"是一个在\",{\"1\":{\"473\":1}}],[\"是一个利用\",{\"1\":{\"412\":1}}],[\"是一个绝对\",{\"1\":{\"356\":1}}],[\"是一个promise网络请求库\",{\"1\":{\"349\":1}}],[\"是一种能为\",{\"1\":{\"451\":1}}],[\"是一种基于http头的机制\",{\"1\":{\"282\":1}}],[\"是一种挟制用户在当前已登录的\",{\"1\":{\"274\":1}}],[\"是一种代码注入攻击\",{\"1\":{\"269\":1}}],[\"是一种用于传输超文本的应用层协议\",{\"1\":{\"44\":1}}],[\"是一样\",{\"1\":{\"178\":1}}],[\"是最帅的\",{\"1\":{\"158\":1}}],[\"是html5新增的一个标签\",{\"1\":{\"131\":1}}],[\"是http1\",{\"1\":{\"55\":1}}],[\"是数组的引用\",{\"1\":{\"97\":1}}],[\"是上次请求资源的etag值\",{\"1\":{\"58\":1}}],[\"是否检查不可达代码报错\",{\"1\":{\"291\":1}}],[\"是否检查未使用的参数\",{\"1\":{\"291\":1}}],[\"是否检查检查未使用的局部变量\",{\"1\":{\"291\":1}}],[\"是否检查switch语句包含正确的break\",{\"1\":{\"291\":1}}],[\"是否检查js代码是否符合语法规范\",{\"1\":{\"291\":1}}],[\"是否严格检查属性是否初始化\",{\"1\":{\"291\":1}}],[\"是否严格检查函数的类型\",{\"1\":{\"291\":1}}],[\"是否严格检查bind\",{\"1\":{\"291\":1}}],[\"是否严格的检查空值\",{\"1\":{\"291\":1}}],[\"是否生成sourcemap\",{\"1\":{\"291\":1}}],[\"是否不生成编译后文件\",{\"1\":{\"291\":1}}],[\"是否移除注释\",{\"1\":{\"291\":1}}],[\"是否对js文件进行编译\",{\"1\":{\"291\":1}}],[\"是否能重写\",{\"1\":{\"248\":1}}],[\"是否可遍历\",{\"1\":{\"248\":1}}],[\"是否可枚举\",{\"1\":{\"194\":1}}],[\"是否可以被赋值\",{\"1\":{\"194\":1}}],[\"是否包含某个元素\",{\"0\":{\"187\":1}}],[\"是否存在缓存\",{\"1\":{\"60\":1}}],[\"是否是小写字母\",{\"1\":{\"37\":1}}],[\"是否是大写字母\",{\"1\":{\"37\":1}}],[\"是否是一个数字字符\",{\"1\":{\"37\":1}}],[\"是否是一个字母\",{\"1\":{\"37\":1}}],[\"是否一个空格\",{\"1\":{\"37\":1}}],[\"是不可修改的\",{\"1\":{\"28\":1}}],[\"是小程序常用的相对单位\",{\"1\":{\"11\":1}}],[\"实战问题篇\",{\"0\":{\"402\":1}}],[\"实线长度\",{\"1\":{\"140\":1}}],[\"实线长度和间隔\",{\"1\":{\"140\":1}}],[\"实现输入框第一个字母大写功能\",{\"1\":{\"436\":1}}],[\"实现防抖\",{\"0\":{\"409\":1}}],[\"实现方式\",{\"1\":{\"390\":1}}],[\"实现泛型约束\",{\"1\":{\"321\":1}}],[\"实现一个类\",{\"1\":{\"320\":1}}],[\"实现\",{\"1\":{\"304\":1,\"392\":1}}],[\"实现继承\",{\"1\":{\"303\":1}}],[\"实现深拷贝\",{\"1\":{\"288\":1}}],[\"实现cors\",{\"1\":{\"282\":1}}],[\"实现父子页面通信\",{\"0\":{\"219\":1}}],[\"实现xhr请求数据的步骤\",{\"0\":{\"88\":1}}],[\"实现细节\",{\"1\":{\"27\":2}}],[\"实例\",{\"1\":{\"357\":1,\"498\":1}}],[\"实例的方法传递相对\",{\"1\":{\"356\":1}}],[\"实例变量\",{\"1\":{\"30\":3}}],[\"实例化属性\",{\"1\":{\"300\":1}}],[\"实例化scanner对象\",{\"1\":{\"41\":1}}],[\"实例化\",{\"1\":{\"32\":1,\"510\":1}}],[\"实例化对象\",{\"1\":{\"25\":1,\"389\":1,\"390\":1}}],[\"实例化方法传参\",{\"1\":{\"25\":1}}],[\"实例化方法\",{\"1\":{\"25\":1}}],[\"observe\",{\"1\":{\"393\":2}}],[\"obj3\",{\"1\":{\"196\":2,\"318\":1}}],[\"obj2\",{\"1\":{\"184\":1,\"196\":2,\"318\":1,\"320\":1}}],[\"obj1\",{\"1\":{\"184\":2,\"318\":1}}],[\"objectofattrs\",{\"1\":{\"417\":2}}],[\"objects\",{\"1\":{\"356\":1}}],[\"object\",{\"0\":{\"183\":1,\"184\":1,\"192\":1,\"193\":1,\"194\":1,\"200\":1,\"248\":1,\"318\":1},\"1\":{\"183\":1,\"184\":4,\"192\":4,\"193\":2,\"194\":5,\"200\":3,\"248\":1,\"249\":1,\"250\":1,\"251\":2,\"252\":1,\"288\":1,\"291\":1,\"332\":1,\"334\":1,\"356\":1,\"392\":2,\"393\":1,\"400\":1,\"440\":1}}],[\"obj的students每次的成员\",{\"1\":{\"165\":1}}],[\"obj\",{\"1\":{\"157\":2,\"159\":2,\"165\":2,\"184\":2,\"192\":3,\"193\":2,\"194\":6,\"196\":2,\"248\":1,\"249\":1,\"250\":1,\"320\":1,\"332\":9,\"463\":2,\"464\":2,\"466\":2}}],[\"omit<todo\",{\"1\":{\"343\":1}}],[\"omit<type\",{\"1\":{\"324\":1}}],[\"omit\",{\"0\":{\"343\":1},\"1\":{\"343\":1}}],[\"oop\",{\"1\":{\"326\":1}}],[\"ooo\",{\"1\":{\"196\":2}}],[\"o\",{\"1\":{\"185\":1}}],[\"off\",{\"1\":{\"356\":1,\"407\":1}}],[\"offset\",{\"1\":{\"74\":3}}],[\"of循环\",{\"1\":{\"169\":1}}],[\"of\",{\"1\":{\"165\":1,\"344\":2,\"356\":2,\"400\":1,\"440\":1}}],[\"of遍历\",{\"1\":{\"165\":1}}],[\"ownkeys获取对象的所有key名\",{\"1\":{\"164\":1}}],[\"over新图像会在老图像的下面\",{\"1\":{\"146\":1}}],[\"over\",{\"1\":{\"146\":1}}],[\"onshareappmessage\",{\"1\":{\"542\":1}}],[\"onshow\",{\"1\":{\"540\":1,\"542\":1}}],[\"onreachbottom\",{\"1\":{\"542\":1}}],[\"onready\",{\"1\":{\"542\":1}}],[\"onreadystatechange\",{\"0\":{\"90\":1},\"1\":{\"88\":1,\"190\":1}}],[\"onpulldownrefresh\",{\"1\":{\"542\":1,\"554\":1}}],[\"onpagedown\",{\"1\":{\"431\":1}}],[\"onhide\",{\"1\":{\"540\":1,\"542\":1}}],[\"onbeforeunmount\",{\"1\":{\"458\":1}}],[\"onbeforeupdate\",{\"1\":{\"458\":1}}],[\"onbeforemount\",{\"1\":{\"458\":1}}],[\"ondeactivated\",{\"1\":{\"455\":2,\"458\":1}}],[\"ondownloadprogress\",{\"1\":{\"356\":1}}],[\"onactivated\",{\"1\":{\"455\":2,\"458\":1}}],[\"onctrlclick\",{\"1\":{\"431\":1}}],[\"once\",{\"1\":{\"430\":1,\"466\":1}}],[\"onclose\",{\"1\":{\"226\":1}}],[\"onclick\",{\"1\":{\"208\":1,\"270\":1,\"272\":1,\"281\":1,\"431\":1}}],[\"onunload\",{\"1\":{\"542\":1}}],[\"onunmounted\",{\"1\":{\"412\":4,\"458\":2}}],[\"onupdated\",{\"1\":{\"458\":1}}],[\"onuploadprogress\",{\"1\":{\"356\":1}}],[\"onmounted\",{\"1\":{\"411\":2,\"412\":4,\"437\":4,\"458\":1}}],[\"onmessage\",{\"1\":{\"226\":1,\"227\":2,\"234\":2,\"286\":1}}],[\"onlaunch\",{\"1\":{\"540\":1}}],[\"only\",{\"1\":{\"272\":1,\"356\":1}}],[\"onload=\",{\"1\":{\"285\":1}}],[\"onload\",{\"1\":{\"151\":1,\"219\":1,\"270\":1,\"281\":1,\"542\":2,\"545\":1}}],[\"onfoucs\",{\"1\":{\"272\":1}}],[\"onopen\",{\"1\":{\"226\":1,\"227\":2,\"286\":1}}],[\"on\",{\"1\":{\"78\":3,\"79\":2,\"220\":4,\"227\":3,\"281\":1,\"282\":1,\"286\":2,\"427\":1}}],[\"one<\",{\"1\":{\"432\":1}}],[\"onerrorcaptured\",{\"1\":{\"458\":1}}],[\"onerror\",{\"1\":{\"226\":1,\"270\":1,\"272\":1,\"540\":1}}],[\"one会被改成bbb\",{\"1\":{\"166\":1}}],[\"one\",{\"1\":{\"39\":4,\"166\":1,\"274\":1,\"432\":3,\"440\":1}}],[\"origin\",{\"1\":{\"219\":1,\"282\":7,\"283\":1,\"285\":5}}],[\"org\",{\"1\":{\"215\":1,\"290\":2,\"293\":1,\"513\":1}}],[\"orange\",{\"1\":{\"112\":1,\"113\":1,\"115\":2,\"116\":2,\"117\":2,\"121\":2,\"122\":2,\"127\":2,\"128\":2}}],[\"order\",{\"0\":{\"73\":1},\"1\":{\"73\":3,\"80\":1,\"166\":2}}],[\"or\",{\"1\":{\"68\":3,\"219\":2,\"291\":1,\"356\":2}}],[\"otherwindow\",{\"1\":{\"218\":2}}],[\"other\",{\"1\":{\"52\":1}}],[\"ok\",{\"1\":{\"51\":1,\"357\":1}}],[\"option>\",{\"1\":{\"432\":4}}],[\"option\",{\"1\":{\"358\":2}}],[\"options\",{\"1\":{\"45\":1,\"46\":1,\"354\":1,\"356\":1,\"389\":3,\"390\":11,\"391\":4,\"393\":12,\"411\":1,\"451\":2,\"545\":2}}],[\"opacity\",{\"1\":{\"259\":1,\"453\":4,\"454\":1}}],[\"open返回的窗口对象\",{\"1\":{\"218\":1}}],[\"open方法\",{\"0\":{\"89\":1}}],[\"open\",{\"1\":{\"88\":2,\"89\":1,\"91\":1,\"190\":1,\"228\":1,\"456\":3}}],[\"openspeaker\",{\"1\":{\"27\":2}}],[\"oldv\",{\"1\":{\"466\":1,\"468\":1}}],[\"oldvalue\",{\"1\":{\"449\":1}}],[\"old\",{\"1\":{\"36\":1}}],[\"output属性是配置webpack模块打包后的位置\",{\"1\":{\"529\":1}}],[\"output\",{\"0\":{\"529\":1},\"1\":{\"527\":1,\"529\":1,\"530\":1}}],[\"outfile\",{\"1\":{\"291\":1}}],[\"outdir\",{\"1\":{\"291\":1}}],[\"out仅仅老图像与新图像没有重叠的部分\",{\"1\":{\"146\":1}}],[\"out仅仅显示新图像与老图像没有重叠的部分\",{\"1\":{\"146\":1}}],[\"out\",{\"1\":{\"23\":1,\"24\":2,\"25\":2,\"32\":1,\"33\":4,\"35\":2,\"41\":4}}],[\"不缩放图片\",{\"1\":{\"546\":9}}],[\"不保持纵横比缩放图片\",{\"1\":{\"546\":1}}],[\"不保证完成请求\",{\"1\":{\"51\":1}}],[\"不相等重新发起请求\",{\"1\":{\"496\":1}}],[\"不像对象或数组的默认\",{\"1\":{\"440\":1}}],[\"不清楚数据来源\",{\"1\":{\"412\":1}}],[\"不便于维护和复用\",{\"1\":{\"411\":1}}],[\"不可修改\",{\"1\":{\"480\":1}}],[\"不可变的值\",{\"1\":{\"334\":1}}],[\"不可达代码将引起错误\",{\"1\":{\"291\":1}}],[\"不关心实际值\",{\"1\":{\"320\":1}}],[\"不断言就无法获取到a元素的类型\",{\"1\":{\"315\":1}}],[\"不推荐使用\",{\"1\":{\"313\":1}}],[\"不允许隐式的this\",{\"1\":{\"291\":1}}],[\"不允许隐式的any\",{\"1\":{\"291\":1}}],[\"不允许新增原型\",{\"1\":{\"251\":1}}],[\"不足\",{\"1\":{\"288\":1}}],[\"不足会补空格\",{\"1\":{\"83\":1}}],[\"不同模式有不同的优化\",{\"1\":{\"532\":1}}],[\"不同选其他的vuex\",{\"1\":{\"397\":1}}],[\"不同点\",{\"1\":{\"342\":1,\"549\":1}}],[\"不同队列有不同的优先级\",{\"1\":{\"245\":1}}],[\"不同任务可以属于不同的队列\",{\"1\":{\"245\":1}}],[\"不同的是\",{\"1\":{\"119\":1}}],[\"不支持ie10以前浏览器\",{\"1\":{\"225\":1}}],[\"不提供加密功能\",{\"1\":{\"225\":1}}],[\"不需要对整个项目进行打包\",{\"1\":{\"534\":1}}],[\"不需要等待对方相应和传输完成\",{\"1\":{\"222\":1}}],[\"不需要加js后缀\",{\"1\":{\"215\":1}}],[\"不然数据每次都会被清空\",{\"1\":{\"455\":1}}],[\"不然一直在\",{\"1\":{\"233\":1}}],[\"不然会过度消耗服务器资源\",{\"1\":{\"225\":1}}],[\"不然就失败\",{\"1\":{\"206\":1}}],[\"不然导入打包工具时会报错\",{\"1\":{\"20\":1}}],[\"不是\",{\"1\":{\"365\":1}}],[\"不是同一个线程\",{\"1\":{\"256\":1}}],[\"不是必须的\",{\"1\":{\"156\":1}}],[\"不是返回所有满足元素\",{\"1\":{\"103\":1}}],[\"不影响作用域链\",{\"1\":{\"155\":1}}],[\"不适合做游戏等大型渲染的程序\",{\"1\":{\"132\":1}}],[\"不依赖分辨率\",{\"1\":{\"132\":1}}],[\"不进则退\",{\"1\":{\"129\":1}}],[\"不过需要通过调用mutation\",{\"1\":{\"477\":1}}],[\"不过写法不同\",{\"1\":{\"441\":1}}],[\"不过写法有所不同\",{\"1\":{\"440\":1}}],[\"不过是以value值组成的数组\",{\"1\":{\"128\":1}}],[\"不过没有\",{\"1\":{\"30\":1}}],[\"不改变原数组\",{\"1\":{\"122\":1}}],[\"不设置end就从start到默认最后\",{\"1\":{\"98\":1}}],[\"不定长字符\",{\"1\":{\"83\":1}}],[\"不超过\",{\"1\":{\"83\":1}}],[\"不存在变量提升\",{\"1\":{\"155\":1}}],[\"不存在返回\",{\"1\":{\"110\":1}}],[\"不存在\",{\"1\":{\"77\":1}}],[\"不一样\",{\"1\":{\"72\":1}}],[\"不在\",{\"1\":{\"70\":1}}],[\"不使用缓存\",{\"1\":{\"58\":1}}],[\"不发服务器请求\",{\"1\":{\"58\":1}}],[\"不会修改state数据\",{\"1\":{\"482\":1}}],[\"不会重新执行\",{\"1\":{\"465\":1}}],[\"不会阻塞主线程\",{\"1\":{\"230\":1}}],[\"不会被第三方截获\",{\"1\":{\"57\":1}}],[\"不会从post变为get\",{\"1\":{\"55\":1}}],[\"不安全\",{\"1\":{\"57\":1}}],[\"不能调用\",{\"1\":{\"524\":1}}],[\"不能声明\",{\"1\":{\"464\":1}}],[\"不能声明为\",{\"1\":{\"27\":1}}],[\"不能使用this访问选项式的方法和数据\",{\"1\":{\"460\":1}}],[\"不能使用argument变量\",{\"1\":{\"160\":1}}],[\"不能获取组件实例\",{\"1\":{\"383\":1}}],[\"不能修改\",{\"1\":{\"338\":1}}],[\"不能被修改\",{\"1\":{\"333\":1}}],[\"不能通过实例化方式获取\",{\"1\":{\"300\":1}}],[\"不能通过类实例化对象获取\",{\"1\":{\"172\":1}}],[\"不能\",{\"1\":{\"246\":1}}],[\"不能直接访问window和dom元素\",{\"1\":{\"230\":1}}],[\"不能是小数\",{\"1\":{\"209\":1}}],[\"不能作为构造函数\",{\"1\":{\"160\":1}}],[\"不能用表达式方式\",{\"1\":{\"107\":1}}],[\"不能够被继承\",{\"1\":{\"27\":1}}],[\"父子通信的组件\",{\"1\":{\"506\":1}}],[\"父使用插槽\",{\"1\":{\"504\":1}}],[\"父传孙\",{\"1\":{\"498\":1}}],[\"父传子\",{\"1\":{\"498\":1}}],[\"父\",{\"1\":{\"441\":1,\"494\":2}}],[\"父级方法\",{\"1\":{\"441\":1}}],[\"父组件通过属性传递数据\",{\"1\":{\"550\":1}}],[\"父组件通过props传递数据\",{\"1\":{\"498\":1}}],[\"父组件通过prop向子组件传递参数\",{\"1\":{\"440\":1}}],[\"父组件向子组件内传递\",{\"1\":{\"502\":1}}],[\"父组件修改子组件的值\",{\"0\":{\"500\":1}}],[\"父组件引入子组件\",{\"0\":{\"494\":1}}],[\"父组件\",{\"1\":{\"434\":1,\"435\":1,\"436\":1}}],[\"父页面接收子线程处理后的数据\",{\"1\":{\"234\":1}}],[\"父页面传递数据\",{\"1\":{\"234\":1}}],[\"父页面\",{\"1\":{\"234\":1,\"285\":1}}],[\"父页面和线程js通过postmessage传递消息\",{\"1\":{\"232\":1}}],[\"父页面使用\",{\"1\":{\"219\":1}}],[\"父类\",{\"1\":{\"303\":1}}],[\"父类无效\",{\"1\":{\"173\":1}}],[\"父类protected\",{\"1\":{\"27\":1}}],[\"父类中声明为\",{\"1\":{\"27\":3}}],[\"父元素的字号\",{\"1\":{\"11\":1}}],[\"访问state\",{\"1\":{\"365\":1}}],[\"访问器装饰器\",{\"1\":{\"344\":1}}],[\"访问符\",{\"1\":{\"344\":1}}],[\"访问危险网站b\",{\"1\":{\"274\":1}}],[\"访问控制和继承\",{\"1\":{\"27\":1}}],[\"访问修饰符\",{\"0\":{\"27\":1}}],[\"同步可以获取dom元素\",{\"1\":{\"496\":1}}],[\"同步请求多个接口\",{\"1\":{\"358\":1}}],[\"同理定义数组响应式的value就是数组类型\",{\"1\":{\"463\":1}}],[\"同vue2一样\",{\"1\":{\"440\":1,\"441\":1}}],[\"同名函数后面的会覆盖前面的函数\",{\"1\":{\"345\":1}}],[\"同名接口属性可以合并\",{\"1\":{\"342\":1}}],[\"同一个函数名\",{\"1\":{\"345\":1}}],[\"同一类内可见\",{\"1\":{\"27\":1}}],[\"同type描述对象属性类型结构\",{\"1\":{\"320\":1}}],[\"同事可以在子类构造函数里新增自己的属性\",{\"1\":{\"303\":1}}],[\"同上只能深拷贝顶层属性和方法\",{\"1\":{\"288\":1}}],[\"同类型任务必须在同一个队列\",{\"1\":{\"245\":1}}],[\"同年nodejs基于commonjs应用而生\",{\"1\":{\"213\":1}}],[\"同样通过name可以使用css3的动画属性animation\",{\"1\":{\"453\":1}}],[\"同样的action也支持使用扩展运算符将方法映射到methods中\",{\"1\":{\"481\":1}}],[\"同样的绑定值为假时\",{\"1\":{\"417\":1}}],[\"同样的渲染主线程再卡顿也不会影响到\",{\"1\":{\"266\":1}}],[\"同样也不和自己相等\",{\"1\":{\"72\":1}}],[\"同样是重定向307\",{\"0\":{\"55\":1}}],[\"同时setup函数必须返回一个对象\",{\"1\":{\"460\":1}}],[\"同时选上\",{\"1\":{\"397\":1}}],[\"同时通过插件添加的属性也会被提取为\",{\"1\":{\"365\":1}}],[\"同时以\",{\"1\":{\"363\":1}}],[\"同时环境变量也会被忽略\",{\"1\":{\"356\":1}}],[\"同时\",{\"1\":{\"320\":1}}],[\"同时返回\",{\"1\":{\"166\":1}}],[\"同时返回对上一个报文的seq的确认号\",{\"1\":{\"59\":1}}],[\"同时client端进入last\",{\"1\":{\"59\":1}}],[\"同时设置ack=seq+1=184689410\",{\"1\":{\"59\":1}}],[\"同时生成序列号seq=84689409\",{\"1\":{\"59\":1}}],[\"同包内的类和所有子类可见\",{\"1\":{\"27\":1}}],[\"对seo网络优化不友好\",{\"1\":{\"520\":1}}],[\"对seo不友好\",{\"1\":{\"87\":1}}],[\"对state数据进行包装\",{\"1\":{\"477\":1}}],[\"对响应错误做点什么\",{\"1\":{\"359\":1}}],[\"对响应数据做点什么\",{\"1\":{\"359\":1}}],[\"对请求错误做些什么\",{\"1\":{\"359\":1}}],[\"对接收的\",{\"1\":{\"356\":1}}],[\"对发送的\",{\"1\":{\"356\":1}}],[\"对类方法中的参数进行注解\",{\"1\":{\"344\":1}}],[\"对渲染内容编码转义\",{\"1\":{\"272\":1}}],[\"对于其他文件需要通过对应的loader做转换\",{\"1\":{\"530\":1}}],[\"对于自定义指令来说\",{\"1\":{\"450\":1}}],[\"对于需要登录查看的路由\",{\"1\":{\"386\":1}}],[\"对于一个带有动态参数的路径\",{\"1\":{\"383\":1}}],[\"对于getter和action不需要转\",{\"1\":{\"365\":1}}],[\"对于隐藏的dom节点\",{\"1\":{\"258\":1}}],[\"对于涉及个人隐私和敏感信息的传输\",{\"1\":{\"57\":1}}],[\"对比传统方法\",{\"0\":{\"224\":1}}],[\"对比如下\",{\"1\":{\"106\":1}}],[\"对外提供接口\",{\"1\":{\"216\":1}}],[\"对齐方式\",{\"1\":{\"141\":2}}],[\"对decimal\",{\"1\":{\"83\":1}}],[\"对应的\",{\"1\":{\"60\":1}}],[\"对应asc码值\",{\"1\":{\"24\":1}}],[\"对传输的数据进行加密\",{\"1\":{\"57\":1}}],[\"对数组排序\",{\"1\":{\"35\":1}}],[\"对象接收父传参属性\",{\"1\":{\"550\":1}}],[\"对象中\",{\"1\":{\"482\":1}}],[\"对象或数组的默认值\",{\"1\":{\"440\":1}}],[\"对象属性和方法\",{\"1\":{\"411\":1}}],[\"对象类型的数据\",{\"1\":{\"463\":1}}],[\"对象类型的默认值\",{\"1\":{\"440\":1}}],[\"对象类型\",{\"1\":{\"334\":1}}],[\"对象主要包含\",{\"1\":{\"300\":1}}],[\"对象封闭\",{\"0\":{\"252\":1}}],[\"对象冻结\",{\"0\":{\"251\":1}}],[\"对象描述操作\",{\"0\":{\"248\":1}}],[\"对象转成键值对的集合\",{\"0\":{\"193\":1}}],[\"对象方法扩展\",{\"0\":{\"191\":1}}],[\"对象合并时\",{\"1\":{\"184\":1}}],[\"对象合并\",{\"0\":{\"184\":1}}],[\"对象简化写法\",{\"0\":{\"159\":1}}],[\"对象提供的\",{\"1\":{\"88\":1}}],[\"对象的属性描述由6部分组成\",{\"1\":{\"248\":1}}],[\"对象的状态由函数执行的结果决定\",{\"1\":{\"167\":1}}],[\"对象的一个属性\",{\"1\":{\"165\":1}}],[\"对象的\",{\"1\":{\"88\":2}}],[\"对象\",{\"0\":{\"299\":1,\"318\":1},\"1\":{\"88\":1,\"234\":3,\"356\":1,\"393\":1,\"464\":1,\"476\":1}}],[\"对象与服务器通信\",{\"1\":{\"86\":1}}],[\"对象是类的实例化\",{\"1\":{\"32\":1}}],[\"对象和类\",{\"0\":{\"29\":1}}],[\"对所有类可见\",{\"1\":{\"27\":1}}],[\"修改state数据\",{\"1\":{\"477\":2}}],[\"修改标题了\",{\"1\":{\"441\":1}}],[\"修改一个功能或新增一个功能\",{\"1\":{\"411\":1}}],[\"修改请求数据\",{\"1\":{\"356\":1}}],[\"修改或替换类的属性定义\",{\"1\":{\"344\":1}}],[\"修改或者替换类的方法定义\",{\"1\":{\"344\":1}}],[\"修改\",{\"0\":{\"352\":1},\"1\":{\"251\":1,\"344\":1}}],[\"修改数据的异步方法\",{\"1\":{\"508\":1}}],[\"修改数据的同步方法\",{\"1\":{\"508\":1}}],[\"修改数据比vuex更加方便灵活\",{\"1\":{\"362\":1}}],[\"修改数据\",{\"1\":{\"89\":2,\"477\":1}}],[\"修改表字段名\",{\"1\":{\"64\":1}}],[\"修改表结构\",{\"1\":{\"64\":1}}],[\"修改某个字段的话\",{\"1\":{\"49\":1}}],[\"修改package\",{\"0\":{\"17\":1}}],[\"修饰\",{\"1\":{\"28\":1,\"30\":2}}],[\"修饰的变量为常量\",{\"1\":{\"28\":1}}],[\"修饰的方法不能被继承类重新定义\",{\"1\":{\"28\":1}}],[\"修饰的类不能够被继承\",{\"1\":{\"28\":1}}],[\"修饰符对象是\",{\"1\":{\"449\":1}}],[\"修饰符\",{\"1\":{\"28\":4,\"406\":1,\"431\":1}}],[\"修饰符使用\",{\"0\":{\"26\":1}}],[\"+files\",{\"1\":{\"545\":1}}],[\"+index\",{\"1\":{\"115\":1}}],[\"+number2\",{\"1\":{\"41\":1}}],[\"+number1\",{\"1\":{\"41\":1}}],[\"+state\",{\"1\":{\"482\":1}}],[\"+s\",{\"1\":{\"33\":4}}],[\"+\",{\"1\":{\"24\":4,\"32\":1,\"33\":2,\"39\":2,\"209\":1,\"227\":1,\"286\":1,\"315\":1,\"335\":1,\"345\":3,\"365\":1,\"420\":2,\"431\":2,\"436\":1,\"449\":1,\"465\":2,\"553\":1}}],[\"<view\",{\"1\":{\"544\":1}}],[\"<dashboard\",{\"1\":{\"457\":1}}],[\"<div\",{\"1\":{\"389\":1,\"391\":1,\"393\":1,\"406\":2,\"417\":3,\"419\":4,\"420\":4,\"424\":4,\"431\":1,\"444\":1,\"450\":2,\"456\":1,\"504\":1}}],[\"<div>parent\",{\"1\":{\"434\":1}}],[\"<div>picked\",{\"1\":{\"432\":1}}],[\"<div>selected\",{\"1\":{\"432\":1}}],[\"<div>\",{\"1\":{\"416\":2}}],[\"<div>about<\",{\"1\":{\"369\":1}}],[\"<div>home<\",{\"1\":{\"369\":1}}],[\"<keepalive>\",{\"1\":{\"455\":1}}],[\"<footer>\",{\"1\":{\"444\":1,\"504\":1}}],[\"<username\",{\"1\":{\"435\":1}}],[\"<ul>\",{\"1\":{\"426\":1,\"437\":1}}],[\"<component\",{\"1\":{\"455\":1}}],[\"<child\",{\"1\":{\"434\":1}}],[\"<canvas\",{\"1\":{\"133\":1}}],[\"<option>c<\",{\"1\":{\"432\":1}}],[\"<option>b<\",{\"1\":{\"432\":1}}],[\"<option>a<\",{\"1\":{\"432\":1}}],[\"<option\",{\"1\":{\"432\":1}}],[\"<label\",{\"1\":{\"432\":3}}],[\"<li\",{\"1\":{\"426\":4,\"437\":1,\"454\":1}}],[\"<input\",{\"1\":{\"431\":3,\"432\":4,\"434\":1,\"435\":2,\"436\":1,\"437\":1}}],[\"<iframe\",{\"1\":{\"219\":1,\"285\":1}}],[\"<main>\",{\"1\":{\"444\":1,\"504\":1}}],[\"<mycomponent>\",{\"1\":{\"446\":1}}],[\"<mycomponent\",{\"1\":{\"419\":1,\"436\":1}}],[\"<meta\",{\"1\":{\"216\":1}}],[\"<p\",{\"1\":{\"419\":1,\"453\":2}}],[\"<p>hello\",{\"1\":{\"456\":1}}],[\"<p>count\",{\"1\":{\"428\":1}}],[\"<p>\",{\"1\":{\"389\":1}}],[\"<a\",{\"1\":{\"417\":2}}],[\"<base\",{\"1\":{\"445\":1}}],[\"<baselayout>\",{\"1\":{\"444\":1}}],[\"<button>\",{\"1\":{\"440\":1}}],[\"<buttoncounter\",{\"1\":{\"439\":1,\"440\":1,\"441\":1}}],[\"<button\",{\"1\":{\"391\":1,\"393\":1,\"411\":1,\"417\":1,\"428\":1,\"429\":2,\"431\":2,\"439\":2,\"443\":2,\"453\":1,\"456\":2}}],[\"<body>\",{\"1\":{\"215\":1,\"216\":1}}],[\"<router\",{\"1\":{\"372\":3,\"373\":1,\"375\":1,\"408\":1}}],[\"<transitiongroup\",{\"1\":{\"454\":1}}],[\"<transition\",{\"1\":{\"453\":2}}],[\"<transition>\",{\"1\":{\"453\":1}}],[\"<teleport\",{\"1\":{\"456\":1}}],[\"<textarea\",{\"1\":{\"432\":1}}],[\"<template\",{\"1\":{\"426\":1,\"444\":2,\"445\":2,\"446\":1,\"457\":1,\"504\":2,\"505\":1}}],[\"<template>mouse\",{\"1\":{\"412\":1}}],[\"<template>\",{\"1\":{\"411\":1,\"434\":2,\"435\":1,\"436\":1,\"437\":1,\"439\":2,\"440\":1}}],[\"<t>\",{\"1\":{\"321\":1}}],[\"<title>hello\",{\"1\":{\"216\":1}}],[\"<title>my\",{\"1\":{\"215\":1}}],[\"<suspense>\",{\"1\":{\"457\":1}}],[\"<select\",{\"1\":{\"432\":1}}],[\"<span>this\",{\"1\":{\"419\":1}}],[\"<span>message\",{\"1\":{\"415\":1}}],[\"<span\",{\"1\":{\"416\":2}}],[\"<slot>保存<\",{\"1\":{\"443\":1}}],[\"<slot><\",{\"1\":{\"443\":1,\"504\":1}}],[\"<slot\",{\"1\":{\"406\":1,\"444\":3,\"446\":1,\"504\":2}}],[\"<string>e\",{\"1\":{\"315\":1}}],[\"<script>\",{\"1\":{\"216\":1,\"281\":1,\"285\":1,\"389\":1,\"391\":1,\"393\":1,\"460\":2,\"524\":1}}],[\"<script\",{\"1\":{\"185\":1,\"215\":1,\"216\":1,\"219\":1,\"220\":1,\"365\":1,\"411\":2,\"412\":1,\"421\":1,\"422\":1,\"434\":2,\"435\":1,\"436\":1,\"437\":2,\"439\":2,\"440\":1,\"441\":2,\"447\":1,\"455\":1,\"460\":1,\"462\":1,\"463\":1,\"465\":1,\"471\":1,\"472\":1}}],[\"<类型>值\",{\"0\":{\"315\":1}}],[\"<header>\",{\"1\":{\"444\":1,\"504\":1}}],[\"<head>\",{\"1\":{\"215\":1,\"216\":1}}],[\"<h1>here\",{\"1\":{\"439\":1}}],[\"<h1>\",{\"1\":{\"389\":1,\"391\":1,\"393\":1}}],[\"<h1>my\",{\"1\":{\"215\":1}}],[\"<html>\",{\"1\":{\"215\":1,\"216\":1}}],[\"<200\",{\"1\":{\"190\":1}}],[\"<=是\",{\"1\":{\"198\":1}}],[\"<=所需字符前面的字符\",{\"1\":{\"198\":1}}],[\"<=\",{\"1\":{\"70\":1}}],[\"<\",{\"1\":{\"24\":6,\"66\":2,\"77\":1,\"88\":1,\"133\":1,\"165\":1,\"176\":1,\"185\":1,\"215\":5,\"216\":5,\"219\":1,\"281\":1,\"285\":1,\"356\":1,\"365\":1,\"375\":1,\"389\":4,\"391\":3,\"393\":3,\"406\":2,\"411\":3,\"412\":2,\"415\":1,\"416\":1,\"417\":4,\"419\":2,\"421\":1,\"422\":1,\"424\":4,\"426\":6,\"428\":1,\"431\":5,\"432\":7,\"434\":7,\"435\":2,\"436\":2,\"437\":5,\"439\":7,\"440\":3,\"441\":2,\"443\":2,\"444\":9,\"445\":4,\"446\":2,\"447\":1,\"453\":4,\"454\":2,\"455\":3,\"456\":3,\"457\":4,\"460\":3,\"462\":1,\"463\":1,\"465\":1,\"471\":1,\"472\":1,\"504\":8,\"505\":2,\"524\":1}}],[\"由服务器提供的响应\",{\"1\":{\"357\":1}}],[\"由于webpack只认识js和json文件\",{\"1\":{\"530\":1}}],[\"由于插槽的内容无法访问子组件的状态和数据\",{\"1\":{\"446\":1}}],[\"由于会渲染同样的\",{\"1\":{\"383\":1}}],[\"由于是未知\",{\"1\":{\"321\":1}}],[\"由于受到浏览器同源策略\",{\"1\":{\"279\":1}}],[\"由于元素的布局信息属于可见样式\",{\"1\":{\"265\":1}}],[\"由于js调用操作系统的函数\",{\"1\":{\"246\":1}}],[\"由大变小会报错\",{\"1\":{\"24\":1}}],[\"由大到小\",{\"1\":{\"24\":1}}],[\"由小变大不报错\",{\"1\":{\"24\":1}}],[\"由小到大\",{\"1\":{\"24\":1}}],[\"枚举会被编译成对象\",{\"1\":{\"329\":1}}],[\"枚举是将变量所有能出现的值都一一枚举出来\",{\"1\":{\"329\":1}}],[\"枚举和常量枚举的区别\",{\"0\":{\"329\":1},\"1\":{\"329\":1}}],[\"枚举属性值未赋值会从0递增\",{\"1\":{\"312\":1}}],[\"枚举类型\",{\"0\":{\"312\":1}}],[\"枚举\",{\"0\":{\"329\":1},\"1\":{\"23\":1}}],[\"类似vue\",{\"1\":{\"550\":1}}],[\"类似vue2的methods\",{\"1\":{\"364\":1}}],[\"类似vue2的计算属性\",{\"1\":{\"364\":1}}],[\"类似vue2的data\",{\"1\":{\"364\":1}}],[\"类似计算属性\",{\"1\":{\"482\":1}}],[\"类似获取state的数据一样\",{\"1\":{\"480\":1}}],[\"类装饰器\",{\"1\":{\"344\":1}}],[\"类里面使用泛型\",{\"1\":{\"321\":1}}],[\"类里面的this指向当前实例化的对象\",{\"1\":{\"302\":1}}],[\"类class\",{\"0\":{\"299\":1}}],[\"类的所有成员\",{\"1\":{\"338\":1}}],[\"类的继承通过关键字\",{\"1\":{\"303\":1}}],[\"类的私有属性\",{\"0\":{\"205\":1}}],[\"类的getter\",{\"1\":{\"174\":1}}],[\"类的getter和seter方法\",{\"0\":{\"174\":1}}],[\"类继承\",{\"0\":{\"173\":1,\"303\":1}}],[\"类名\",{\"1\":{\"170\":1,\"300\":1}}],[\"类是java\",{\"1\":{\"37\":1}}],[\"类型校验\",{\"1\":{\"440\":1}}],[\"类型有什么作用\",{\"0\":{\"343\":1}}],[\"类型会更加严格\",{\"1\":{\"340\":1}}],[\"类型的默认值\",{\"1\":{\"440\":1}}],[\"类型的值执行大多数操作之前\",{\"1\":{\"340\":1}}],[\"类型的值执行操作之前\",{\"1\":{\"340\":1}}],[\"类型的作用是什么\",{\"0\":{\"336\":1}}],[\"类型守卫作用\",{\"1\":{\"332\":1}}],[\"类型守卫是一种判断变量类型是否满足条件的检测方式\",{\"1\":{\"332\":1}}],[\"类型断言\",{\"1\":{\"330\":1}}],[\"类型推断是变量不指定类型\",{\"1\":{\"327\":1}}],[\"类型声明时显式为变量指定类型\",{\"1\":{\"327\":1}}],[\"类型声明和类型推断的区别\",{\"0\":{\"327\":1}}],[\"类型别名写法\",{\"1\":{\"342\":1}}],[\"类型别名类似\",{\"1\":{\"342\":1}}],[\"类型别名不可以\",{\"1\":{\"342\":1}}],[\"类型别名type不能\",{\"1\":{\"342\":1}}],[\"类型别名type\",{\"1\":{\"342\":1}}],[\"类型别名需要用\",{\"1\":{\"309\":1}}],[\"类型别名\",{\"1\":{\"309\":1}}],[\"类型注解\",{\"1\":{\"305\":2}}],[\"类型变成\",{\"1\":{\"209\":1}}],[\"类型总结\",{\"1\":{\"83\":1}}],[\"类型\",{\"0\":{\"92\":1},\"1\":{\"33\":1,\"83\":3,\"300\":2,\"305\":1,\"440\":1}}],[\"类方法中的变量\",{\"1\":{\"30\":1}}],[\"类变量\",{\"1\":{\"30\":3}}],[\"类实例化方法\",{\"0\":{\"25\":1}}],[\"类\",{\"0\":{\"170\":1},\"1\":{\"23\":1,\"37\":1,\"321\":1}}],[\"数值最小精度\",{\"0\":{\"176\":1}}],[\"数值类型\",{\"0\":{\"306\":1},\"1\":{\"83\":1}}],[\"数值\",{\"1\":{\"83\":1}}],[\"数据修改\",{\"1\":{\"509\":1}}],[\"数据发生变化的时候也会跟着变化\",{\"1\":{\"482\":1}}],[\"数据存储\",{\"0\":{\"478\":1}}],[\"数据\",{\"1\":{\"475\":1}}],[\"数据都遵循单向数据流的原则\",{\"1\":{\"440\":1}}],[\"数据的变化会自动运行数据相关的函数\",{\"1\":{\"394\":1}}],[\"数据响应式\",{\"1\":{\"394\":1}}],[\"数据劫持\",{\"1\":{\"393\":1}}],[\"数据监听\",{\"1\":{\"393\":2}}],[\"数据代理\",{\"1\":{\"393\":1}}],[\"数据被拼在get请求的url中\",{\"1\":{\"275\":1}}],[\"数据结构只要有这个结果就可以进行遍历操作\",{\"1\":{\"165\":1}}],[\"数据会被编码为键值对的形式\",{\"1\":{\"92\":1}}],[\"数据提交\",{\"1\":{\"89\":1}}],[\"数据类型symbol\",{\"0\":{\"164\":1}}],[\"数据类型大致分三类\",{\"1\":{\"83\":1}}],[\"数据类型\",{\"0\":{\"83\":1}}],[\"数据为查询小于5的数据\",{\"1\":{\"77\":1}}],[\"数据表操作\",{\"0\":{\"64\":1}}],[\"数据库名\",{\"1\":{\"63\":3}}],[\"数据库操作\",{\"0\":{\"63\":1}}],[\"数据库和数据表创建\",{\"0\":{\"62\":1}}],[\"数据安全性和完整性\",{\"1\":{\"57\":1}}],[\"数组或者\",{\"1\":{\"463\":1}}],[\"数组中最后一个函数必须返回一个字符串\",{\"1\":{\"356\":1}}],[\"数组中的每个值\",{\"1\":{\"118\":1}}],[\"数组和具有索引签名的类\",{\"1\":{\"335\":1}}],[\"数组类型\",{\"0\":{\"309\":1},\"1\":{\"358\":1}}],[\"数组去重\",{\"1\":{\"168\":1}}],[\"数组克隆\",{\"1\":{\"163\":1}}],[\"数组合并\",{\"1\":{\"163\":1}}],[\"数组格式\",{\"1\":{\"162\":1}}],[\"数组的长度\",{\"1\":{\"129\":1}}],[\"数组转字符串\",{\"1\":{\"126\":1}}],[\"数组原型方法学习\",{\"0\":{\"94\":1}}],[\"数组结构\",{\"0\":{\"35\":1}}],[\"数组增强for循环\",{\"1\":{\"33\":1}}],[\"数组\",{\"1\":{\"23\":1,\"192\":2,\"464\":1}}],[\"数字枚举的值默认从0自增\",{\"1\":{\"329\":1}}],[\"数字枚举可以部分有值\",{\"1\":{\"312\":1}}],[\"数字枚举成员的值默认是从0自增的\",{\"1\":{\"312\":1}}],[\"数字类型运算时\",{\"1\":{\"24\":1}}],[\"数字类型由小到大排序\",{\"1\":{\"24\":1}}],[\"数字\",{\"1\":{\"23\":1,\"24\":1}}],[\"fallback>loading\",{\"1\":{\"457\":1}}],[\"fallback\",{\"1\":{\"457\":2}}],[\"false\",{\"1\":{\"138\":1,\"165\":1,\"176\":2,\"177\":1,\"183\":1,\"187\":1,\"194\":1,\"250\":2,\"290\":1,\"291\":19,\"356\":1,\"379\":2,\"380\":1,\"382\":1,\"419\":2,\"421\":2,\"456\":1}}],[\"false表示顺时针\",{\"1\":{\"137\":1}}],[\"failure\",{\"1\":{\"381\":2}}],[\"fetch\",{\"1\":{\"241\":1}}],[\"fs\",{\"1\":{\"167\":3,\"354\":1}}],[\"func\",{\"1\":{\"526\":2}}],[\"function\",{\"0\":{\"118\":1,\"119\":1},\"1\":{\"88\":1,\"107\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":2,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1,\"151\":1,\"159\":2,\"161\":1,\"162\":2,\"163\":1,\"165\":1,\"166\":6,\"167\":2,\"169\":1,\"176\":1,\"185\":3,\"190\":3,\"196\":1,\"207\":1,\"208\":1,\"214\":2,\"215\":2,\"216\":1,\"219\":2,\"227\":4,\"228\":5,\"234\":3,\"281\":3,\"285\":1,\"286\":2,\"288\":2,\"311\":1,\"316\":1,\"319\":1,\"321\":3,\"332\":2,\"334\":1,\"335\":1,\"344\":3,\"345\":3,\"354\":7,\"356\":8,\"359\":4,\"364\":1,\"390\":4,\"391\":1,\"393\":4,\"409\":1,\"411\":1,\"412\":3,\"429\":1,\"434\":1,\"440\":2,\"460\":1,\"463\":1,\"473\":1,\"524\":1,\"526\":4}}],[\"fullname\",{\"1\":{\"465\":2}}],[\"fullpath\",{\"1\":{\"381\":1}}],[\"fulfilled\",{\"1\":{\"167\":1}}],[\"fninter<string>\",{\"1\":{\"321\":1}}],[\"fninter<t>\",{\"1\":{\"321\":1}}],[\"fninter\",{\"1\":{\"321\":2}}],[\"fn<t\",{\"1\":{\"321\":2}}],[\"fn<t>\",{\"1\":{\"321\":1}}],[\"fn\",{\"1\":{\"159\":2,\"311\":1,\"316\":1,\"321\":7}}],[\"f3\",{\"1\":{\"157\":2}}],[\"ff00ff\",{\"1\":{\"146\":1}}],[\"ff0000\",{\"1\":{\"146\":2}}],[\"flex\",{\"1\":{\"420\":1}}],[\"flexbox\",{\"1\":{\"420\":1}}],[\"flag\",{\"1\":{\"386\":2}}],[\"flatmap是flat和map方法的结合\",{\"1\":{\"202\":1}}],[\"flatmap\",{\"0\":{\"106\":1},\"1\":{\"106\":1,\"129\":1}}],[\"flat\",{\"0\":{\"105\":1,\"202\":1},\"1\":{\"105\":3,\"129\":1,\"202\":2}}],[\"float\",{\"1\":{\"23\":1,\"24\":1,\"83\":3}}],[\"fred\",{\"1\":{\"356\":1}}],[\"freeze\",{\"0\":{\"251\":1},\"1\":{\"251\":2}}],[\"fromentries\",{\"0\":{\"200\":1},\"1\":{\"200\":1}}],[\"from\",{\"0\":{\"108\":1},\"1\":{\"65\":5,\"68\":4,\"69\":1,\"70\":3,\"71\":4,\"72\":3,\"73\":3,\"74\":3,\"75\":2,\"76\":11,\"77\":6,\"78\":3,\"80\":1,\"108\":2,\"129\":1,\"185\":6,\"220\":1,\"349\":1,\"356\":1,\"363\":4,\"365\":2,\"379\":1,\"381\":1,\"382\":1,\"383\":3,\"384\":1,\"386\":1,\"399\":1,\"400\":1,\"401\":2,\"403\":2,\"409\":1,\"411\":1,\"412\":2,\"422\":1,\"437\":2,\"439\":3,\"440\":1,\"441\":1,\"451\":1,\"453\":2,\"454\":1,\"455\":1,\"456\":1,\"458\":1,\"460\":1,\"463\":2,\"465\":1,\"471\":2,\"472\":1,\"473\":1,\"476\":1,\"478\":1,\"480\":1,\"481\":1,\"482\":1,\"484\":2,\"522\":1}}],[\"frame\",{\"1\":{\"39\":5}}],[\"folder\",{\"1\":{\"548\":1}}],[\"focus\",{\"1\":{\"437\":1,\"447\":6}}],[\"footer>\",{\"1\":{\"444\":1,\"504\":1}}],[\"footer\",{\"1\":{\"444\":1,\"504\":1}}],[\"foo\",{\"1\":{\"426\":1,\"449\":4}}],[\"fontsize\",{\"1\":{\"420\":5}}],[\"font\",{\"1\":{\"141\":2,\"420\":1}}],[\"found\",{\"1\":{\"52\":1,\"53\":1,\"555\":1}}],[\"for中模板引用\",{\"1\":{\"437\":1}}],[\"for作用域的变量\",{\"1\":{\"426\":1}}],[\"for渲染对象\",{\"1\":{\"426\":1}}],[\"for渲染数组\",{\"1\":{\"426\":1}}],[\"for=\",{\"1\":{\"426\":4,\"432\":3,\"437\":1,\"454\":1}}],[\"forward\",{\"1\":{\"374\":1}}],[\"force\",{\"1\":{\"290\":1}}],[\"foreach没有返回值\",{\"1\":{\"107\":1}}],[\"foreach\",{\"0\":{\"107\":1},\"1\":{\"107\":1,\"129\":1,\"389\":1,\"391\":1,\"393\":2,\"394\":1}}],[\"formattime\",{\"1\":{\"542\":1}}],[\"formdata\",{\"1\":{\"356\":2}}],[\"form\",{\"1\":{\"91\":1,\"92\":2,\"167\":1,\"355\":1}}],[\"forbidden\",{\"1\":{\"53\":1}}],[\"forarr\",{\"1\":{\"33\":1}}],[\"for\",{\"1\":{\"33\":3,\"164\":3,\"165\":1,\"356\":1,\"392\":1,\"393\":1,\"400\":1,\"426\":2}}],[\"forfn\",{\"1\":{\"33\":1}}],[\"for循环\",{\"1\":{\"33\":2}}],[\"forgery\",{\"1\":{\"274\":1}}],[\"forge\",{\"1\":{\"20\":2}}],[\"first\",{\"1\":{\"435\":2}}],[\"firstname\",{\"1\":{\"356\":1,\"435\":3,\"465\":3}}],[\"findindex\",{\"0\":{\"104\":1},\"1\":{\"104\":1,\"129\":1}}],[\"find\",{\"0\":{\"103\":1},\"1\":{\"103\":1,\"129\":1}}],[\"finally\",{\"1\":{\"354\":2}}],[\"final\",{\"1\":{\"27\":1,\"28\":3}}],[\"filename\",{\"1\":{\"529\":1,\"530\":1}}],[\"file\",{\"1\":{\"356\":1,\"528\":3,\"529\":1,\"530\":1}}],[\"files\",{\"1\":{\"289\":2,\"291\":2}}],[\"filter\",{\"0\":{\"102\":1},\"1\":{\"102\":1,\"129\":1}}],[\"filltext\",{\"1\":{\"141\":2}}],[\"filltext绘制文字\",{\"1\":{\"141\":1}}],[\"fillstyle=\",{\"1\":{\"137\":1}}],[\"fillstyle\",{\"1\":{\"134\":2,\"143\":2,\"145\":1,\"146\":2,\"147\":2,\"150\":1,\"151\":1}}],[\"fillrect\",{\"0\":{\"134\":1},\"1\":{\"134\":2,\"142\":1,\"143\":2,\"144\":1,\"145\":1,\"146\":2,\"150\":1}}],[\"fill\",{\"0\":{\"101\":1},\"1\":{\"35\":2,\"101\":2,\"129\":1,\"136\":1,\"137\":1,\"151\":1}}],[\"~\",{\"1\":{\"23\":4}}],[\"bus\",{\"1\":{\"498\":2}}],[\"buttoncounter\",{\"1\":{\"439\":2}}],[\"button>`\",{\"1\":{\"439\":1}}],[\"button>\",{\"1\":{\"391\":1,\"393\":1,\"411\":1,\"417\":1,\"428\":1,\"429\":2,\"431\":2,\"439\":1,\"440\":1,\"443\":2,\"453\":1,\"456\":2}}],[\"buffer\",{\"1\":{\"356\":1}}],[\"bundle\",{\"1\":{\"185\":1,\"529\":1,\"530\":1}}],[\"btnevent\",{\"1\":{\"391\":2,\"393\":2}}],[\"btn\",{\"1\":{\"208\":1,\"215\":1,\"281\":3}}],[\"blue\",{\"1\":{\"143\":1,\"146\":3,\"149\":1,\"150\":1}}],[\"blob\",{\"1\":{\"83\":3,\"356\":2}}],[\"bouncy\",{\"1\":{\"453\":1}}],[\"bounce\",{\"1\":{\"453\":6}}],[\"bound\",{\"1\":{\"434\":1}}],[\"bob\",{\"1\":{\"335\":1}}],[\"bool\",{\"1\":{\"307\":1}}],[\"boolean类型只可能是两种值\",{\"1\":{\"307\":1}}],[\"boolean\",{\"0\":{\"307\":1},\"1\":{\"23\":1,\"27\":2,\"307\":1,\"334\":2,\"343\":1}}],[\"body\",{\"1\":{\"281\":2,\"356\":1,\"456\":1}}],[\"body>\",{\"1\":{\"215\":1,\"216\":1}}],[\"box\",{\"1\":{\"259\":1,\"420\":1}}],[\"bottom\",{\"1\":{\"141\":1,\"546\":3}}],[\"beforedestory\",{\"1\":{\"487\":1}}],[\"beforecreat之前\",{\"1\":{\"460\":1}}],[\"beforecreate钩子函数\",{\"1\":{\"524\":1}}],[\"beforecreate无法获取method方法\",{\"1\":{\"490\":1}}],[\"beforecreate没有$data\",{\"1\":{\"490\":1}}],[\"beforecreate和created有什么区别\",{\"0\":{\"490\":1}}],[\"beforecreate里\",{\"0\":{\"489\":1}}],[\"beforecreate\",{\"1\":{\"390\":5,\"393\":2,\"487\":1,\"492\":1,\"493\":1,\"494\":2,\"495\":1}}],[\"beforeunmount\",{\"1\":{\"448\":1}}],[\"beforeupdate\",{\"1\":{\"448\":1,\"449\":2,\"487\":1}}],[\"beforemount\",{\"1\":{\"390\":5,\"393\":2,\"448\":1,\"487\":1,\"492\":1,\"493\":1,\"494\":2,\"495\":1}}],[\"beforerouteleave\",{\"1\":{\"383\":2,\"522\":1}}],[\"beforerouteupdate\",{\"1\":{\"383\":2,\"522\":1}}],[\"beforerouteenter\",{\"1\":{\"383\":2,\"522\":1}}],[\"beforeresolve\",{\"0\":{\"380\":1},\"1\":{\"380\":1,\"522\":1}}],[\"beforeenter\",{\"1\":{\"382\":2,\"522\":1}}],[\"beforeeach\",{\"0\":{\"379\":1},\"1\":{\"379\":1,\"386\":1,\"522\":1}}],[\"be\",{\"1\":{\"356\":3}}],[\"beziercurveto\",{\"1\":{\"139\":2}}],[\"beginpath\",{\"1\":{\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":3,\"145\":1,\"149\":1}}],[\"between\",{\"0\":{\"70\":1},\"1\":{\"70\":2,\"76\":3}}],[\"bar\",{\"1\":{\"426\":1,\"449\":2}}],[\"baz\",{\"1\":{\"419\":1}}],[\"back\",{\"1\":{\"374\":1}}],[\"background\",{\"1\":{\"270\":1}}],[\"basic\",{\"1\":{\"356\":2}}],[\"baselayout>\",{\"1\":{\"444\":1}}],[\"base\",{\"1\":{\"216\":1,\"291\":1,\"445\":1,\"513\":2}}],[\"baseurl\",{\"1\":{\"215\":1,\"355\":2,\"356\":1}}],[\"babel\",{\"1\":{\"185\":3,\"305\":1}}],[\"banana|orange|apple|mango\",{\"1\":{\"112\":1}}],[\"banana\",{\"1\":{\"112\":1,\"113\":1,\"115\":2,\"116\":2,\"117\":2,\"121\":2,\"122\":1,\"127\":2,\"128\":2}}],[\"bad\",{\"1\":{\"53\":1}}],[\"bindtap和catchtap的区别是什么\",{\"0\":{\"549\":1}}],[\"binding\",{\"1\":{\"448\":7,\"449\":1,\"450\":5}}],[\"bind=\",{\"1\":{\"417\":1}}],[\"bind\",{\"1\":{\"390\":4,\"391\":2,\"393\":5,\"394\":1,\"417\":2}}],[\"binary\",{\"1\":{\"83\":1}}],[\"binarysearch\",{\"1\":{\"35\":2}}],[\"bigint数据类型\",{\"0\":{\"209\":1}}],[\"bigint\",{\"1\":{\"83\":2,\"209\":4}}],[\"bye<\",{\"1\":{\"429\":1}}],[\"bye\",{\"1\":{\"429\":1}}],[\"by\",{\"0\":{\"73\":1},\"1\":{\"73\":3,\"76\":3,\"80\":1,\"356\":1}}],[\"byte\",{\"1\":{\"23\":1,\"24\":7}}],[\"b\",{\"1\":{\"36\":1,\"124\":4,\"157\":2,\"160\":1,\"162\":2,\"163\":3,\"176\":2,\"196\":1,\"214\":3,\"215\":1,\"216\":1,\"234\":2,\"319\":2,\"321\":2,\"424\":3,\"483\":1,\"513\":1,\"524\":1,\"526\":1}}],[\"brackets\",{\"1\":{\"356\":1}}],[\"brand\",{\"1\":{\"332\":3}}],[\"broadcast\",{\"1\":{\"220\":1}}],[\"browserify\",{\"1\":{\"185\":2}}],[\"browserwindow\",{\"1\":{\"18\":2}}],[\"break\",{\"1\":{\"34\":2}}],[\"break用于在循环语句和switch语句中\",{\"1\":{\"33\":1}}],[\"break关键字\",{\"1\":{\"33\":1}}],[\"bb\",{\"1\":{\"24\":2}}],[\"bbb\",{\"1\":{\"24\":2,\"166\":1}}],[\"小整数值\",{\"1\":{\"83\":1}}],[\"小数值\",{\"1\":{\"83\":1}}],[\"小数\",{\"1\":{\"23\":2}}],[\"小程序对wx\",{\"0\":{\"552\":1}}],[\"小程序关联微信公众号如何确定用户的唯一性\",{\"0\":{\"551\":1}}],[\"小程序页面之间传递参数的方法有哪些\",{\"0\":{\"550\":1}}],[\"小程序体积不得超过2m\",{\"0\":{\"548\":1}}],[\"小程序获取html数据\",{\"0\":{\"544\":1}}],[\"小程序跳转\",{\"0\":{\"543\":1}}],[\"小程序后台\",{\"1\":{\"538\":1}}],[\"小程序编辑器\",{\"1\":{\"538\":1}}],[\"小程序商店发布步骤\",{\"1\":{\"538\":1}}],[\"小程序规定屏幕宽度\",{\"1\":{\"11\":1}}],[\"小程序\",{\"1\":{\"8\":1}}],[\"小程序开发\",{\"1\":{\"3\":1}}],[\"8+2\",{\"0\":{\"495\":1}}],[\"838\",{\"1\":{\"83\":2}}],[\"85\",{\"1\":{\"119\":1}}],[\"858\",{\"1\":{\"83\":3}}],[\"854\",{\"1\":{\"83\":2}}],[\"862\",{\"1\":{\"83\":3}}],[\"823\",{\"1\":{\"83\":3}}],[\"8020\",{\"1\":{\"219\":2}}],[\"80\",{\"1\":{\"136\":1}}],[\"807\",{\"1\":{\"83\":1}}],[\"8088\",{\"1\":{\"398\":1,\"513\":2}}],[\"8081\",{\"1\":{\"286\":2}}],[\"8080\",{\"1\":{\"227\":2,\"228\":1,\"283\":1}}],[\"808\",{\"1\":{\"83\":1}}],[\"800\",{\"1\":{\"18\":1}}],[\"8>关闭\",{\"1\":{\"60\":1}}],[\"8\",{\"0\":{\"35\":1,\"55\":1,\"141\":1,\"162\":1,\"263\":1,\"313\":1,\"333\":1,\"442\":1,\"496\":1},\"1\":{\"35\":1,\"39\":1,\"83\":5,\"98\":2,\"99\":1,\"100\":1,\"101\":2,\"102\":2,\"103\":1,\"104\":1,\"107\":2,\"125\":3,\"126\":2,\"139\":1,\"216\":1}}],[\"8个\",{\"0\":{\"45\":1,\"487\":1},\"1\":{\"23\":1}}],[\"以上写法在3\",{\"1\":{\"434\":1}}],[\"以上就是数组的全部方法了\",{\"1\":{\"129\":1}}],[\"以取消导航\",{\"1\":{\"379\":1}}],[\"以及组件卸载时调用\",{\"1\":{\"455\":1}}],[\"以及每次从缓存中被重新插入时\",{\"1\":{\"455\":1}}],[\"以及某些应用程序级别的业务逻辑\",{\"1\":{\"344\":1}}],[\"以及入口命令改为\",{\"1\":{\"17\":1}}],[\"以实现对所修饰对象的行为的修改或增强\",{\"1\":{\"344\":1}}],[\"以一个类型为基础支持删除某些属性\",{\"1\":{\"343\":1}}],[\"以房子长时间没有数据传输而被切断\",{\"1\":{\"228\":1}}],[\"以下\",{\"1\":{\"165\":1}}],[\"以下是node的各个版本地址\",{\"1\":{\"20\":1}}],[\"以弧度为单位的值\",{\"1\":{\"143\":1}}],[\"以控制点1\",{\"1\":{\"138\":1}}],[\"以r为半径\",{\"1\":{\"137\":1}}],[\"以\",{\"1\":{\"126\":1,\"137\":1}}],[\"官方打包工具需要node最低版本是14x\",{\"1\":{\"20\":1}}],[\"tt\",{\"1\":{\"441\":3}}],[\"turn\",{\"1\":{\"356\":1}}],[\"ture\",{\"1\":{\"176\":2,\"392\":1}}],[\"tuple\",{\"0\":{\"310\":1},\"1\":{\"334\":1}}],[\"ts的可选参数用\",{\"1\":{\"331\":1}}],[\"ts的类型断言有2种写法\",{\"0\":{\"315\":1}}],[\"ts扩展了类\",{\"1\":{\"326\":1}}],[\"ts不能直接在各端运行\",{\"1\":{\"326\":1}}],[\"ts内置很多工具类型\",{\"1\":{\"324\":1}}],[\"ts也可以在定义函数之前先声明函数参数及返回值的类型\",{\"1\":{\"319\":1}}],[\"ts里面定义对象通过\",{\"1\":{\"318\":1}}],[\"ts除了类型断言\",{\"1\":{\"315\":1}}],[\"ts优势\",{\"0\":{\"297\":1}}],[\"tsc\",{\"1\":{\"296\":1}}],[\"tsconfig\",{\"1\":{\"291\":2,\"344\":1}}],[\"ts\",{\"1\":{\"291\":2,\"296\":1,\"321\":1,\"397\":1,\"399\":1,\"400\":1,\"401\":1,\"458\":1}}],[\"ts可以根据它的信息来对待吗进行编译\",{\"1\":{\"291\":1}}],[\"txt文件用raw\",{\"1\":{\"530\":1}}],[\"txt$\",{\"1\":{\"530\":1,\"531\":1}}],[\"txt\",{\"1\":{\"167\":1}}],[\"t\",{\"1\":{\"108\":1,\"321\":11}}],[\"tab页面跳转方式\",{\"1\":{\"543\":1}}],[\"table\",{\"1\":{\"64\":13,\"77\":1,\"79\":1}}],[\"tag=\",{\"1\":{\"454\":1}}],[\"taobao\",{\"1\":{\"290\":1}}],[\"targetorigin\",{\"1\":{\"218\":2}}],[\"target参数时插入指定位置\",{\"1\":{\"98\":1}}],[\"target\",{\"0\":{\"98\":1},\"1\":{\"291\":1,\"344\":5,\"392\":1,\"434\":1,\"532\":1}}],[\"type和interface区别和相同点\",{\"0\":{\"342\":1}}],[\"types\",{\"1\":{\"334\":2}}],[\"typescript中什么是函数重载\",{\"0\":{\"345\":1}}],[\"typescript中什么是装饰器\",{\"0\":{\"344\":1}}],[\"typescript中any和unknown有什么区别\",{\"0\":{\"340\":1}}],[\"typescript中never和void的区别\",{\"0\":{\"339\":1}}],[\"typescript中的泛型是什么\",{\"0\":{\"341\":1}}],[\"typescript中的interface可以被用来声明函数\",{\"1\":{\"335\":1}}],[\"typescript中的可选参数和默认参数是什么\",{\"0\":{\"331\":1}}],[\"typescript支持的类访问修饰符有哪些\",{\"0\":{\"338\":1}}],[\"typescript数据类型都有哪些\",{\"0\":{\"334\":1}}],[\"typescript自动推断变量类型\",{\"1\":{\"327\":1}}],[\"typescript是微软公司为了弥补js存在类型缺陷开源的一门语言\",{\"1\":{\"326\":1}}],[\"typescript基本类型\",{\"0\":{\"305\":1}}],[\"typescript\",{\"0\":{\"336\":1},\"1\":{\"4\":1,\"8\":1,\"294\":1,\"305\":3,\"308\":1,\"326\":5}}],[\"typeof\",{\"1\":{\"332\":2,\"345\":4,\"346\":1,\"390\":4,\"391\":1,\"393\":4,\"458\":1}}],[\"type=\",{\"1\":{\"185\":2,\"219\":1,\"432\":3,\"435\":2,\"436\":1,\"443\":2}}],[\"typedarrays\",{\"1\":{\"291\":1}}],[\"typedarray\",{\"1\":{\"165\":1}}],[\"type\",{\"0\":{\"92\":1},\"1\":{\"91\":1,\"309\":2,\"318\":2,\"323\":3,\"342\":1,\"343\":1,\"355\":1,\"357\":1,\"401\":1,\"424\":3,\"440\":4,\"548\":1}}],[\"titlehandle\",{\"1\":{\"441\":2}}],[\"title=\",{\"1\":{\"440\":1,\"441\":1}}],[\"title\",{\"1\":{\"343\":1,\"403\":2,\"426\":1,\"440\":5,\"513\":2,\"531\":1}}],[\"title>\",{\"1\":{\"215\":1,\"216\":1}}],[\"tiling\",{\"0\":{\"261\":1}}],[\"tianqi\",{\"1\":{\"190\":2}}],[\"tinytext\",{\"1\":{\"83\":1}}],[\"tinyblob\",{\"1\":{\"83\":1}}],[\"tinyint\",{\"1\":{\"83\":1}}],[\"times\",{\"1\":{\"439\":2}}],[\"timestamp\",{\"1\":{\"83\":3,\"542\":1}}],[\"timer\",{\"1\":{\"228\":4,\"409\":3}}],[\"time\",{\"1\":{\"83\":2}}],[\"timeout\",{\"1\":{\"53\":1,\"228\":2,\"356\":1}}],[\"tcp\",{\"1\":{\"60\":2}}],[\"tcp连接减少了\",{\"1\":{\"56\":1}}],[\"teleport>\",{\"1\":{\"456\":1}}],[\"teleport\",{\"0\":{\"456\":1}}],[\"team\",{\"1\":{\"372\":2}}],[\"template>\",{\"1\":{\"411\":1,\"412\":1,\"426\":1,\"434\":2,\"435\":1,\"436\":1,\"437\":1,\"439\":2,\"440\":1,\"444\":2,\"445\":2,\"446\":1,\"457\":1,\"504\":2,\"505\":1}}],[\"template\",{\"1\":{\"369\":2,\"383\":1,\"439\":3,\"531\":1}}],[\"temporary\",{\"1\":{\"52\":1}}],[\"terminate\",{\"1\":{\"233\":1}}],[\"textarea>\",{\"1\":{\"432\":1}}],[\"textalign\",{\"1\":{\"141\":2}}],[\"texts\",{\"1\":{\"389\":2,\"393\":2}}],[\"textcontent\",{\"1\":{\"219\":1,\"389\":2,\"393\":3}}],[\"textbaseline\",{\"1\":{\"141\":1}}],[\"text\",{\"1\":{\"83\":3,\"92\":2,\"141\":2,\"219\":1,\"356\":1,\"419\":3,\"435\":2,\"436\":1,\"450\":2,\"453\":2}}],[\"test\",{\"1\":{\"25\":2,\"33\":1,\"39\":1,\"41\":1,\"530\":2,\"531\":1}}],[\"two\",{\"1\":{\"39\":4,\"432\":3}}],[\"triggerevent\",{\"1\":{\"550\":1}}],[\"trigger\",{\"1\":{\"409\":2}}],[\"trimend\",{\"1\":{\"201\":1}}],[\"trimstart\",{\"1\":{\"201\":1}}],[\"trimstart与trimend\",{\"0\":{\"201\":1}}],[\"trim\",{\"1\":{\"36\":1,\"389\":1,\"391\":1,\"393\":2,\"394\":2,\"433\":1}}],[\"trunc\",{\"1\":{\"180\":1}}],[\"truc\",{\"0\":{\"180\":1}}],[\"true表示逆时针\",{\"1\":{\"137\":1}}],[\"true\",{\"1\":{\"35\":1,\"39\":1,\"91\":1,\"100\":1,\"109\":1,\"111\":1,\"123\":1,\"149\":1,\"165\":1,\"176\":1,\"179\":1,\"183\":1,\"187\":1,\"194\":11,\"281\":1,\"291\":2,\"307\":1,\"344\":3,\"356\":3,\"365\":1,\"373\":1,\"386\":2,\"398\":1,\"419\":2,\"434\":1,\"440\":1,\"449\":2,\"456\":1,\"466\":3,\"551\":1}}],[\"try\",{\"1\":{\"167\":1,\"190\":1,\"380\":1}}],[\"track\",{\"1\":{\"409\":2}}],[\"trace\",{\"1\":{\"45\":1,\"46\":1}}],[\"transitiongroup>\",{\"1\":{\"454\":1}}],[\"transitiongroup\",{\"0\":{\"454\":1}}],[\"transition\",{\"1\":{\"453\":2,\"454\":1}}],[\"transition>\",{\"1\":{\"453\":3}}],[\"transition过渡动画组件\",{\"0\":{\"453\":1}}],[\"transpiledependencies\",{\"1\":{\"398\":1}}],[\"transformresponse\",{\"1\":{\"356\":1}}],[\"transformrequest\",{\"1\":{\"356\":1}}],[\"transform效率那么高\",{\"0\":{\"266\":1}}],[\"transform变形矩阵\",{\"1\":{\"144\":1}}],[\"transform\",{\"0\":{\"144\":1},\"1\":{\"144\":1,\"259\":2,\"266\":2,\"453\":3,\"454\":1}}],[\"transfer\",{\"1\":{\"44\":1,\"218\":1}}],[\"translatex\",{\"1\":{\"454\":1}}],[\"translate坐标原点移动\",{\"1\":{\"142\":1}}],[\"translate\",{\"0\":{\"142\":1},\"1\":{\"142\":2,\"143\":2}}],[\"tovalue\",{\"0\":{\"473\":1},\"1\":{\"473\":3}}],[\"torefs\",{\"1\":{\"464\":2}}],[\"to=\",{\"1\":{\"372\":2,\"373\":1,\"375\":1,\"456\":1}}],[\"todos\",{\"1\":{\"426\":2}}],[\"todopreview\",{\"1\":{\"343\":1}}],[\"todo\",{\"1\":{\"343\":1,\"426\":6}}],[\"tom\",{\"1\":{\"281\":1}}],[\"tommy\",{\"1\":{\"32\":1}}],[\"token\",{\"1\":{\"276\":1,\"355\":2,\"356\":4}}],[\"tolocalestring\",{\"1\":{\"228\":1}}],[\"tolowercase\",{\"1\":{\"36\":1,\"37\":1}}],[\"tou\",{\"1\":{\"144\":1,\"145\":1,\"146\":1}}],[\"touppercase\",{\"1\":{\"36\":1,\"37\":1,\"436\":1}}],[\"top\",{\"1\":{\"141\":1,\"289\":2,\"546\":3}}],[\"top10\",{\"1\":{\"80\":1}}],[\"total+item\",{\"1\":{\"118\":2}}],[\"total的初始值\",{\"1\":{\"118\":1,\"119\":1}}],[\"total\",{\"0\":{\"118\":1,\"119\":1},\"1\":{\"118\":3,\"119\":5}}],[\"to\",{\"1\":{\"64\":2,\"356\":3,\"379\":1,\"380\":2,\"381\":2,\"382\":1,\"383\":3,\"386\":2,\"426\":1,\"453\":2,\"454\":1,\"456\":1,\"522\":1,\"528\":3,\"529\":1,\"530\":1}}],[\"tochararray\",{\"1\":{\"36\":1}}],[\"tostring\",{\"0\":{\"126\":1},\"1\":{\"35\":1,\"36\":1,\"37\":1,\"126\":1,\"129\":1,\"167\":1}}],[\"throw\",{\"1\":{\"316\":1,\"380\":1}}],[\"these\",{\"1\":{\"440\":1}}],[\"the\",{\"1\":{\"228\":1,\"356\":3,\"382\":1,\"440\":1,\"456\":1}}],[\"then的返回值就是抛出的错误值\",{\"1\":{\"167\":1}}],[\"then的返回值是promise的返回值\",{\"1\":{\"167\":1}}],[\"then如果返回结果是非promise\",{\"1\":{\"167\":1}}],[\"then返回结果\",{\"1\":{\"167\":1}}],[\"then\",{\"1\":{\"18\":1,\"167\":3,\"190\":2,\"208\":1,\"243\":1,\"354\":3,\"356\":1,\"358\":2}}],[\"that\",{\"1\":{\"165\":3,\"356\":1,\"393\":3}}],[\"this指向了undefined\",{\"1\":{\"460\":1}}],[\"this指向\",{\"0\":{\"302\":1}}],[\"this\",{\"1\":{\"25\":1,\"165\":1,\"170\":1,\"172\":1,\"173\":2,\"205\":4,\"228\":11,\"251\":1,\"252\":1,\"300\":2,\"303\":1,\"304\":1,\"320\":2,\"321\":1,\"344\":2,\"356\":1,\"364\":1,\"389\":6,\"390\":16,\"391\":9,\"392\":5,\"393\":37,\"394\":8,\"478\":2,\"479\":1,\"480\":1,\"481\":1,\"482\":3,\"498\":2,\"499\":1,\"500\":1,\"501\":1,\"521\":6,\"524\":2,\"542\":1}}],[\"lazy\",{\"1\":{\"433\":1}}],[\"label>\",{\"1\":{\"432\":3}}],[\"layerboom\",{\"1\":{\"406\":1}}],[\"layer\",{\"0\":{\"259\":1},\"1\":{\"406\":1}}],[\"layout>\",{\"1\":{\"445\":2}}],[\"layout\",{\"0\":{\"258\":1},\"1\":{\"264\":1}}],[\"lastname\",{\"1\":{\"435\":3,\"465\":3}}],[\"lastindexof\",{\"0\":{\"114\":1},\"1\":{\"114\":1,\"129\":1}}],[\"last\",{\"1\":{\"58\":2,\"435\":2}}],[\"ltr\",{\"1\":{\"141\":1}}],[\"li>\",{\"1\":{\"426\":4,\"437\":1,\"454\":1}}],[\"lib\",{\"1\":{\"215\":1,\"291\":1,\"356\":1}}],[\"lili\",{\"1\":{\"205\":1}}],[\"lists\",{\"1\":{\"426\":1}}],[\"listening\",{\"1\":{\"227\":1}}],[\"listen\",{\"1\":{\"220\":1,\"227\":1,\"283\":1}}],[\"list\",{\"1\":{\"184\":1,\"290\":1,\"437\":2,\"454\":5,\"523\":4,\"545\":1}}],[\"lisan\",{\"1\":{\"25\":1}}],[\"linux\",{\"1\":{\"326\":1}}],[\"link>\",{\"1\":{\"372\":1,\"375\":1}}],[\"link\",{\"0\":{\"368\":1},\"1\":{\"315\":1,\"368\":1,\"369\":1,\"372\":2,\"373\":1,\"375\":1}}],[\"linnercolor\",{\"1\":{\"149\":4}}],[\"lines\",{\"1\":{\"432\":1}}],[\"linewidth\",{\"1\":{\"149\":1}}],[\"linewidth=\",{\"1\":{\"135\":1}}],[\"linedashoffset属性设置起始偏移量\",{\"1\":{\"140\":1}}],[\"linedashoffset\",{\"1\":{\"140\":1}}],[\"lineto\",{\"1\":{\"135\":1,\"136\":2}}],[\"lighten\",{\"1\":{\"146\":1}}],[\"lighter\",{\"1\":{\"146\":1}}],[\"limit\",{\"1\":{\"74\":6,\"80\":1}}],[\"like\",{\"0\":{\"71\":1},\"1\":{\"71\":4,\"356\":1}}],[\"leave\",{\"1\":{\"453\":5,\"454\":2}}],[\"legacy\",{\"1\":{\"397\":2,\"399\":1,\"400\":1}}],[\"lemon\",{\"1\":{\"127\":2}}],[\"let声明变量及特性\",{\"0\":{\"155\":1}}],[\"let\",{\"1\":{\"95\":1,\"96\":3,\"97\":2,\"98\":3,\"99\":2,\"100\":2,\"101\":3,\"102\":2,\"103\":2,\"104\":2,\"105\":2,\"106\":3,\"107\":1,\"108\":2,\"109\":1,\"110\":1,\"111\":1,\"112\":2,\"113\":2,\"114\":1,\"115\":2,\"116\":2,\"117\":2,\"118\":3,\"119\":3,\"120\":2,\"121\":2,\"122\":3,\"123\":2,\"124\":3,\"125\":3,\"126\":2,\"127\":2,\"128\":2,\"149\":2,\"150\":1,\"151\":1,\"157\":2,\"158\":2,\"159\":3,\"160\":1,\"163\":5,\"164\":5,\"165\":5,\"166\":7,\"167\":2,\"168\":2,\"169\":1,\"184\":5,\"185\":3,\"188\":2,\"190\":2,\"192\":1,\"193\":1,\"194\":1,\"196\":4,\"198\":2,\"202\":2,\"203\":1,\"205\":1,\"207\":2,\"209\":4,\"214\":1,\"219\":5,\"227\":1,\"234\":1,\"300\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":6,\"310\":1,\"315\":4,\"317\":1,\"318\":3,\"319\":1,\"320\":2,\"321\":5,\"322\":1,\"335\":3,\"389\":2,\"391\":1,\"392\":1,\"393\":7,\"394\":2,\"409\":1,\"464\":1}}],[\"left\",{\"1\":{\"78\":2,\"141\":1,\"312\":4,\"546\":3}}],[\"level\",{\"1\":{\"64\":3,\"65\":2,\"68\":4,\"69\":1,\"70\":4,\"73\":3,\"76\":8,\"77\":6,\"80\":1}}],[\"length>0\",{\"1\":{\"389\":1,\"391\":1,\"393\":1,\"394\":1}}],[\"length\",{\"0\":{\"129\":1},\"1\":{\"36\":1,\"108\":1,\"165\":1,\"321\":2}}],[\"length方法\",{\"1\":{\"36\":1}}],[\"less前端技术\",{\"1\":{\"4\":1}}],[\"lovelace\",{\"1\":{\"354\":1}}],[\"localstorage自己写\",{\"1\":{\"510\":1}}],[\"localstorage\",{\"1\":{\"386\":1}}],[\"localhost\",{\"1\":{\"220\":1,\"227\":1,\"228\":1,\"281\":1,\"284\":1,\"285\":3,\"286\":1,\"398\":1,\"512\":1,\"513\":1}}],[\"location\",{\"1\":{\"283\":1}}],[\"loader转换以下\",{\"1\":{\"530\":1}}],[\"loader\",{\"0\":{\"530\":1},\"1\":{\"527\":1,\"530\":4,\"531\":1}}],[\"loadend\",{\"1\":{\"88\":1}}],[\"load\",{\"1\":{\"285\":2}}],[\"loadfile\",{\"1\":{\"18\":1}}],[\"logs\",{\"1\":{\"542\":3}}],[\"logo\",{\"1\":{\"401\":2}}],[\"login\",{\"1\":{\"386\":1,\"553\":2}}],[\"loginsatus\",{\"1\":{\"386\":1}}],[\"logmethod\",{\"1\":{\"344\":2}}],[\"logclass\",{\"1\":{\"344\":2}}],[\"log\",{\"1\":{\"25\":4,\"95\":2,\"99\":3,\"106\":2,\"109\":1,\"110\":1,\"111\":1,\"113\":3,\"114\":1,\"116\":2,\"117\":2,\"121\":2,\"125\":4,\"126\":1,\"127\":2,\"128\":3,\"163\":1,\"165\":2,\"166\":4,\"167\":3,\"173\":1,\"176\":2,\"178\":2,\"190\":2,\"205\":1,\"220\":4,\"227\":6,\"228\":1,\"281\":2,\"285\":2,\"286\":2,\"311\":1,\"320\":1,\"321\":1,\"332\":2,\"344\":4,\"354\":4,\"390\":4,\"411\":1,\"422\":1,\"437\":1,\"440\":2,\"450\":2,\"466\":1,\"469\":2,\"526\":2,\"542\":3}}],[\"logname\",{\"1\":{\"25\":4}}],[\"longtext\",{\"1\":{\"83\":1}}],[\"longblob\",{\"1\":{\"83\":1}}],[\"long\",{\"1\":{\"23\":1,\"24\":1}}],[\"4+\",{\"1\":{\"440\":1}}],[\"4之前如下\",{\"1\":{\"434\":1}}],[\"44\",{\"1\":{\"513\":1}}],[\"444\",{\"1\":{\"283\":1}}],[\"446\",{\"1\":{\"83\":1}}],[\"4354\",{\"1\":{\"389\":1,\"391\":1}}],[\"43\",{\"1\":{\"162\":2}}],[\"456\",{\"1\":{\"526\":1}}],[\"45\",{\"1\":{\"143\":1}}],[\"46\",{\"1\":{\"139\":2}}],[\"466\",{\"1\":{\"83\":3}}],[\"494\",{\"1\":{\"83\":3}}],[\"483\",{\"1\":{\"83\":2}}],[\"4的用户\",{\"1\":{\"69\":1}}],[\"4>根据\",{\"1\":{\"60\":1}}],[\"4>是否重复提交\",{\"1\":{\"47\":1}}],[\"402\",{\"1\":{\"83\":3}}],[\"409\",{\"1\":{\"53\":1}}],[\"408\",{\"1\":{\"53\":1}}],[\"404配置\",{\"0\":{\"385\":1}}],[\"404\",{\"1\":{\"53\":1,\"555\":1}}],[\"403\",{\"1\":{\"53\":1}}],[\"401\",{\"1\":{\"53\":1}}],[\"4000\",{\"1\":{\"284\":1,\"512\":1}}],[\"400\",{\"1\":{\"53\":1,\"149\":1,\"151\":1}}],[\"40\",{\"1\":{\"33\":1,\"35\":4,\"138\":1,\"318\":1,\"513\":1}}],[\"4\",{\"0\":{\"18\":1,\"26\":1,\"47\":1,\"137\":1,\"158\":1,\"203\":1,\"208\":1,\"216\":1,\"259\":1,\"296\":1,\"309\":1,\"329\":1,\"365\":1,\"392\":1,\"427\":1,\"484\":1,\"492\":1,\"501\":1,\"522\":1,\"537\":1,\"551\":1},\"1\":{\"39\":1,\"41\":1,\"69\":1,\"70\":4,\"76\":4,\"83\":9,\"88\":1,\"90\":1,\"95\":3,\"96\":2,\"98\":2,\"99\":1,\"100\":1,\"101\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":4,\"107\":2,\"108\":2,\"118\":1,\"119\":1,\"120\":2,\"123\":1,\"124\":3,\"125\":3,\"126\":2,\"162\":2,\"165\":1,\"168\":3,\"190\":2,\"202\":4,\"246\":1,\"297\":1,\"367\":1,\"369\":1,\"476\":1}}],[\"333\",{\"1\":{\"162\":2,\"166\":1}}],[\"31\",{\"1\":{\"83\":2,\"168\":2}}],[\"315\",{\"1\":{\"83\":3}}],[\"38\",{\"1\":{\"83\":3}}],[\"388\",{\"1\":{\"83\":2}}],[\"351\",{\"1\":{\"83\":4}}],[\"372\",{\"1\":{\"83\":2}}],[\"375px\",{\"1\":{\"11\":1}}],[\"32\",{\"1\":{\"83\":2,\"207\":1}}],[\"3>dns\",{\"1\":{\"60\":1}}],[\"3>数据类型不同\",{\"1\":{\"47\":1}}],[\"3次是服务器向客户端发送的包\",{\"1\":{\"59\":1}}],[\"30px\",{\"1\":{\"454\":1}}],[\"308\",{\"1\":{\"83\":3}}],[\"307\",{\"1\":{\"52\":1,\"55\":2}}],[\"304\",{\"1\":{\"52\":1}}],[\"303\",{\"0\":{\"55\":1},\"1\":{\"52\":1,\"55\":1}}],[\"302的区别\",{\"0\":{\"55\":1}}],[\"302\",{\"1\":{\"52\":1,\"55\":1}}],[\"301\",{\"1\":{\"52\":1}}],[\"3000\",{\"1\":{\"220\":3,\"227\":2,\"281\":1,\"285\":3}}],[\"300\",{\"1\":{\"39\":1,\"88\":1,\"133\":2,\"135\":1,\"149\":1,\"150\":2,\"356\":1}}],[\"30\",{\"1\":{\"35\":2,\"39\":4,\"68\":2,\"125\":2,\"323\":1,\"335\":1,\"420\":1}}],[\"3\",{\"0\":{\"17\":1,\"25\":1,\"46\":1,\"88\":1,\"136\":1,\"157\":1,\"198\":1,\"202\":1,\"207\":1,\"215\":1,\"241\":1,\"258\":1,\"295\":1,\"308\":1,\"328\":1,\"364\":1,\"391\":1,\"423\":1,\"477\":1,\"491\":1,\"500\":1,\"505\":1,\"510\":1,\"517\":1,\"521\":1,\"533\":1,\"536\":1,\"550\":1},\"1\":{\"24\":1,\"35\":1,\"39\":1,\"41\":1,\"69\":2,\"74\":1,\"83\":6,\"90\":1,\"95\":1,\"96\":2,\"98\":2,\"99\":2,\"100\":1,\"101\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":4,\"106\":1,\"107\":1,\"115\":1,\"118\":1,\"119\":1,\"120\":2,\"122\":1,\"123\":1,\"124\":3,\"125\":3,\"126\":2,\"162\":2,\"163\":2,\"165\":1,\"168\":3,\"176\":3,\"177\":1,\"179\":1,\"180\":2,\"190\":1,\"202\":4,\"234\":1,\"246\":1,\"297\":1,\"309\":4,\"312\":2,\"335\":1,\"369\":1,\"374\":2,\"389\":1,\"391\":1,\"393\":1,\"440\":1,\"473\":2,\"476\":1,\"481\":1,\"538\":1,\"550\":1}}],[\"或actions修改数据\",{\"1\":{\"509\":1}}],[\"或array<number>来声明其中元素的类型\",{\"1\":{\"334\":1}}],[\"或数组\",{\"1\":{\"455\":2}}],[\"或事件监听器应用前调用\",{\"1\":{\"448\":1}}],[\"或在路由定义里直接使用它\",{\"1\":{\"384\":1}}],[\"或非响应式\",{\"1\":{\"365\":1}}],[\"或图片\",{\"1\":{\"347\":1}}],[\"或替换类定义\",{\"1\":{\"344\":1}}],[\"或tls\",{\"1\":{\"57\":1}}],[\"或者记录数据\",{\"1\":{\"496\":1}}],[\"或者一定等级能查看的鉴权功能\",{\"1\":{\"386\":1}}],[\"或者设置为\",{\"1\":{\"356\":1}}],[\"或者是客户端请求\",{\"1\":{\"356\":1}}],[\"或者实现相关get\",{\"1\":{\"344\":1}}],[\"或者没有终止条件造成内存泄漏\",{\"1\":{\"288\":1}}],[\"或者\",{\"1\":{\"274\":2,\"444\":1}}],[\"或者通过\",{\"1\":{\"216\":1}}],[\"或者拒绝支持在请求中使用的\",{\"1\":{\"54\":1}}],[\"或者请求是服务器不支持的某个方法\",{\"1\":{\"54\":1}}],[\"或更新指定资源\",{\"1\":{\"46\":1}}],[\"或\",{\"1\":{\"16\":2,\"35\":1,\"129\":2,\"318\":1,\"321\":1,\"356\":3,\"365\":1,\"416\":1,\"417\":1,\"422\":1,\"473\":2,\"482\":1}}],[\"dynamicslotname\",{\"1\":{\"445\":2}}],[\"dynamicid\",{\"1\":{\"417\":2}}],[\"duration\",{\"1\":{\"409\":2}}],[\"db\",{\"1\":{\"207\":4}}],[\"d+\",{\"1\":{\"198\":2}}],[\"danger\",{\"1\":{\"419\":3,\"440\":1}}],[\"darken\",{\"1\":{\"146\":1}}],[\"datetime\",{\"1\":{\"64\":1,\"83\":3}}],[\"date\",{\"1\":{\"64\":1,\"83\":2,\"162\":2,\"228\":1,\"465\":1,\"542\":2}}],[\"dataset\",{\"1\":{\"544\":2}}],[\"data和methods等可以使用this调用setup里面的数据和方法\",{\"1\":{\"524\":1}}],[\"data的数据改变又触发了模板变量的监听器的updata方法\",{\"1\":{\"394\":1}}],[\"data数据在created前解构\",{\"1\":{\"390\":1}}],[\"data变成string等\",{\"1\":{\"288\":1}}],[\"database\",{\"1\":{\"63\":2}}],[\"databases\",{\"1\":{\"63\":1}}],[\"data\",{\"0\":{\"351\":1,\"352\":1},\"1\":{\"35\":4,\"88\":2,\"92\":1,\"167\":2,\"215\":2,\"219\":1,\"220\":5,\"227\":1,\"234\":2,\"281\":3,\"285\":4,\"286\":5,\"354\":5,\"356\":8,\"357\":1,\"364\":1,\"389\":2,\"390\":2,\"391\":1,\"393\":2,\"411\":1,\"524\":2,\"542\":1,\"544\":1}}],[\"datatype\",{\"1\":{\"35\":3}}],[\"dispatch\",{\"1\":{\"481\":1,\"484\":1}}],[\"display\",{\"1\":{\"420\":1}}],[\"disabled\",{\"1\":{\"432\":1,\"456\":1}}],[\"disabled=\",{\"1\":{\"417\":1,\"456\":1}}],[\"dist\",{\"1\":{\"185\":3,\"291\":2,\"293\":1,\"399\":1,\"529\":1,\"530\":1}}],[\"distinct\",{\"1\":{\"76\":2}}],[\"dio\",{\"1\":{\"365\":1}}],[\"dirname\",{\"1\":{\"529\":1,\"530\":1}}],[\"directive=\",{\"1\":{\"449\":1}}],[\"directive\",{\"1\":{\"447\":1,\"449\":2,\"450\":2}}],[\"directives\",{\"1\":{\"447\":1}}],[\"direction\",{\"1\":{\"141\":1,\"312\":3}}],[\"dir\",{\"1\":{\"289\":1,\"315\":1,\"449\":1}}],[\"div>\",{\"1\":{\"369\":2,\"389\":1,\"391\":1,\"393\":1,\"406\":2,\"416\":2,\"417\":3,\"419\":4,\"420\":4,\"424\":4,\"431\":1,\"432\":2,\"434\":1,\"444\":1,\"450\":2,\"456\":1,\"504\":1}}],[\"div\",{\"1\":{\"163\":3}}],[\"draw\",{\"0\":{\"263\":1},\"1\":{\"134\":2,\"135\":2,\"136\":2,\"137\":2,\"138\":2,\"139\":4,\"140\":2,\"141\":2,\"142\":2,\"143\":2,\"144\":2,\"145\":2,\"146\":2}}],[\"drop\",{\"1\":{\"63\":1,\"64\":2,\"79\":1}}],[\"dd\",{\"1\":{\"83\":2}}],[\"d\",{\"1\":{\"83\":1,\"108\":1,\"163\":1,\"185\":1,\"188\":1,\"289\":1,\"401\":1}}],[\"detail\",{\"1\":{\"523\":1}}],[\"details\",{\"1\":{\"523\":1}}],[\"deactivated\",{\"1\":{\"495\":1}}],[\"deep\",{\"1\":{\"466\":1}}],[\"debounceref\",{\"1\":{\"409\":1}}],[\"debugger\",{\"1\":{\"407\":1}}],[\"deps\",{\"1\":{\"397\":2,\"399\":1,\"400\":1}}],[\"decompress\",{\"1\":{\"356\":1}}],[\"decompression\",{\"1\":{\"356\":1}}],[\"decompressed\",{\"1\":{\"356\":2}}],[\"decorator\",{\"1\":{\"344\":1}}],[\"declare定义成全局变量\",{\"1\":{\"347\":1}}],[\"declare是用来定义全局变量\",{\"1\":{\"347\":1}}],[\"declare有什么用\",{\"0\":{\"347\":1}}],[\"declare\",{\"1\":{\"345\":1,\"347\":2,\"401\":4,\"458\":1}}],[\"decimal\",{\"1\":{\"83\":2}}],[\"defineemits\",{\"1\":{\"434\":1,\"441\":1}}],[\"defineprops\",{\"1\":{\"434\":1,\"440\":3}}],[\"defineproperty\",{\"0\":{\"250\":1},\"1\":{\"194\":1,\"250\":1,\"392\":2,\"393\":1}}],[\"definemodel\",{\"0\":{\"434\":1},\"1\":{\"434\":3,\"435\":3,\"436\":1}}],[\"defineoptions\",{\"1\":{\"421\":1}}],[\"definecomponent<\",{\"1\":{\"401\":1}}],[\"definecomponent\",{\"1\":{\"401\":1,\"403\":2}}],[\"defineconfig\",{\"1\":{\"398\":2}}],[\"definestore\",{\"1\":{\"363\":2,\"364\":3,\"365\":2}}],[\"define\",{\"1\":{\"215\":1,\"216\":2,\"356\":1}}],[\"defaults\",{\"1\":{\"355\":4}}],[\"default\",{\"1\":{\"34\":1,\"64\":2,\"146\":1,\"185\":4,\"356\":3,\"401\":1,\"403\":1,\"422\":1,\"434\":1,\"439\":1,\"440\":5,\"441\":1,\"447\":1,\"451\":1,\"457\":1,\"460\":3,\"478\":1,\"480\":1,\"481\":1,\"482\":1,\"484\":1,\"524\":1}}],[\"destoryed\",{\"1\":{\"487\":1,\"496\":1}}],[\"destination\",{\"1\":{\"146\":4}}],[\"descriptor\",{\"1\":{\"344\":1}}],[\"description\",{\"0\":{\"203\":1},\"1\":{\"203\":1,\"343\":2}}],[\"desc\",{\"1\":{\"64\":1,\"73\":4,\"80\":1}}],[\"demo=\",{\"1\":{\"450\":1}}],[\"demo\",{\"1\":{\"91\":1,\"450\":1}}],[\"delete\",{\"0\":{\"353\":1},\"1\":{\"45\":1,\"46\":1,\"65\":2,\"89\":1,\"168\":2,\"169\":2,\"356\":1}}],[\"development\",{\"1\":{\"513\":1,\"532\":1}}],[\"devtool\",{\"1\":{\"407\":1}}],[\"devserver\",{\"1\":{\"284\":1,\"398\":1,\"512\":2,\"513\":1}}],[\"devdependencies\",{\"1\":{\"17\":1}}],[\"dev\",{\"1\":{\"16\":2,\"20\":1,\"513\":1}}],[\"doe\",{\"1\":{\"426\":1,\"465\":2}}],[\"down=\",{\"1\":{\"431\":1}}],[\"down\",{\"1\":{\"312\":4}}],[\"dowhilefn\",{\"1\":{\"33\":1}}],[\"domain\",{\"1\":{\"356\":1}}],[\"dom型\",{\"1\":{\"271\":1}}],[\"dom\",{\"1\":{\"258\":1,\"271\":1,\"291\":2,\"439\":1,\"448\":1,\"449\":1,\"455\":1}}],[\"dom树对象\",{\"1\":{\"256\":1}}],[\"dosomething\",{\"1\":{\"216\":1,\"431\":1}}],[\"docker\",{\"1\":{\"356\":2}}],[\"docs\",{\"1\":{\"216\":1,\"356\":1}}],[\"doctype\",{\"1\":{\"215\":1,\"216\":1}}],[\"document\",{\"1\":{\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":2,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1,\"151\":1,\"163\":1,\"219\":2,\"234\":1,\"281\":4,\"315\":1,\"356\":1,\"389\":1,\"390\":1,\"393\":1}}],[\"done\",{\"1\":{\"165\":2}}],[\"doit\",{\"1\":{\"33\":5}}],[\"do\",{\"1\":{\"33\":3,\"426\":1}}],[\"doublecount\",{\"1\":{\"364\":2,\"365\":1}}],[\"double\",{\"1\":{\"23\":1,\"24\":1,\"35\":2,\"83\":3,\"364\":1,\"484\":2}}],[\"dpr\",{\"1\":{\"11\":1}}],[\"ignore\",{\"1\":{\"548\":1}}],[\"ignored\",{\"1\":{\"356\":1}}],[\"itme\",{\"1\":{\"544\":1}}],[\"iterable\",{\"1\":{\"291\":2}}],[\"iterator\",{\"0\":{\"165\":1},\"1\":{\"99\":1,\"113\":1,\"128\":1,\"165\":5}}],[\"iteror\",{\"1\":{\"166\":12}}],[\"itemrefs\",{\"1\":{\"437\":3}}],[\"items\",{\"1\":{\"426\":2,\"454\":1}}],[\"item=>\",{\"1\":{\"389\":1,\"391\":1,\"393\":1,\"394\":1}}],[\"item2\",{\"0\":{\"125\":1}}],[\"item1\",{\"0\":{\"125\":1}}],[\"item+\",{\"1\":{\"115\":1}}],[\"item\",{\"1\":{\"33\":3,\"100\":2,\"102\":2,\"103\":2,\"104\":2,\"107\":2,\"115\":1,\"118\":2,\"119\":4,\"123\":2,\"125\":1,\"389\":6,\"391\":7,\"393\":12,\"394\":11,\"426\":2,\"437\":2,\"454\":3}}],[\"i18n\",{\"1\":{\"451\":1}}],[\"icons\",{\"1\":{\"400\":2}}],[\"io实现转发广播\",{\"1\":{\"220\":1}}],[\"io\",{\"1\":{\"216\":1,\"220\":11}}],[\"immediate\",{\"1\":{\"466\":1}}],[\"img和link标签也是不受浏览器同源策略限制\",{\"1\":{\"281\":1}}],[\"img\",{\"1\":{\"151\":5}}],[\"images\",{\"1\":{\"401\":1}}],[\"image\",{\"0\":{\"546\":1},\"1\":{\"92\":3,\"151\":1,\"270\":1,\"546\":1}}],[\"implements\",{\"1\":{\"320\":2}}],[\"implemented\",{\"1\":{\"54\":1}}],[\"import导入数据的方式\",{\"1\":{\"185\":1}}],[\"import\",{\"1\":{\"20\":1,\"39\":1,\"41\":1,\"167\":1,\"185\":7,\"208\":1,\"349\":1,\"363\":4,\"365\":2,\"384\":3,\"399\":2,\"400\":1,\"401\":3,\"403\":3,\"404\":1,\"409\":1,\"411\":1,\"412\":2,\"422\":1,\"437\":2,\"439\":3,\"440\":1,\"441\":1,\"451\":1,\"455\":1,\"458\":1,\"460\":1,\"463\":2,\"465\":1,\"471\":2,\"472\":1,\"473\":1,\"476\":1,\"478\":1,\"480\":1,\"481\":1,\"482\":1,\"484\":2,\"523\":1}}],[\"id`\",{\"1\":{\"383\":1}}],[\"ideographic\",{\"1\":{\"141\":1}}],[\"id=12345\",{\"1\":{\"354\":2}}],[\"id=\",{\"1\":{\"133\":1,\"389\":1,\"391\":1,\"393\":1,\"417\":2,\"432\":3}}],[\"id\",{\"1\":{\"64\":1,\"65\":3,\"75\":3,\"78\":3,\"282\":1,\"354\":1,\"356\":1,\"363\":1,\"364\":1,\"371\":2,\"382\":1,\"384\":2,\"417\":1,\"521\":7,\"523\":1,\"551\":1}}],[\"iper\",{\"1\":{\"342\":2}}],[\"ip\",{\"1\":{\"60\":2}}],[\"if条件无法访问到v\",{\"1\":{\"426\":1}}],[\"if的优先级高于v\",{\"1\":{\"426\":1}}],[\"if可以\",{\"1\":{\"425\":1}}],[\"if=\",{\"1\":{\"406\":1,\"424\":3,\"426\":2,\"453\":2,\"456\":1}}],[\"iframe嵌套页面\",{\"1\":{\"285\":1}}],[\"iframe>\",{\"1\":{\"219\":1,\"285\":1}}],[\"iframe\",{\"1\":{\"218\":1,\"219\":5,\"285\":1}}],[\"if\",{\"0\":{\"424\":2,\"552\":1},\"1\":{\"58\":4,\"88\":2,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":2,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1,\"165\":1,\"167\":1,\"176\":1,\"190\":2,\"219\":1,\"228\":1,\"282\":1,\"285\":2,\"332\":1,\"345\":2,\"356\":1,\"380\":2,\"381\":1,\"386\":2,\"389\":2,\"390\":4,\"391\":5,\"393\":11,\"394\":5,\"424\":2,\"426\":1,\"436\":1,\"526\":1,\"552\":2}}],[\"if语句\",{\"1\":{\"34\":1}}],[\"i++\",{\"1\":{\"33\":1}}],[\"i<=10\",{\"1\":{\"33\":1}}],[\"ismobile\",{\"1\":{\"456\":1}}],[\"is=\",{\"1\":{\"455\":1}}],[\"iscomplete\",{\"1\":{\"426\":2}}],[\"iscar\",{\"1\":{\"332\":2}}],[\"isbuttondisabled\",{\"1\":{\"417\":1}}],[\"isactive\",{\"1\":{\"419\":3}}],[\"isadmin\",{\"1\":{\"365\":1}}],[\"isarray\",{\"0\":{\"111\":1},\"1\":{\"111\":1,\"129\":1}}],[\"isinteger\",{\"0\":{\"179\":1},\"1\":{\"179\":1}}],[\"isnan\",{\"0\":{\"177\":1},\"1\":{\"177\":1}}],[\"isfinite\",{\"1\":{\"176\":3}}],[\"islowercase\",{\"1\":{\"37\":1}}],[\"isletter\",{\"1\":{\"37\":1}}],[\"isuppercase\",{\"1\":{\"37\":1}}],[\"iswhitespace\",{\"1\":{\"37\":1}}],[\"isdigit\",{\"1\":{\"37\":1}}],[\"is\",{\"0\":{\"72\":1,\"183\":1},\"1\":{\"32\":1,\"72\":2,\"76\":2,\"183\":1,\"220\":2,\"332\":1,\"344\":3,\"411\":2,\"412\":1,\"419\":1,\"428\":1,\"434\":1,\"439\":1,\"453\":1,\"466\":1,\"469\":2}}],[\"i\",{\"1\":{\"30\":1,\"33\":3,\"289\":1,\"294\":1}}],[\"inject注入数据\",{\"0\":{\"472\":1}}],[\"inject\",{\"0\":{\"470\":1},\"1\":{\"470\":1,\"472\":4,\"498\":1}}],[\"input=\",{\"1\":{\"434\":1}}],[\"input\",{\"1\":{\"394\":1,\"437\":3}}],[\"indicates\",{\"1\":{\"356\":1}}],[\"indexable\",{\"0\":{\"335\":1}}],[\"index++\",{\"1\":{\"165\":1}}],[\"indexof\",{\"0\":{\"110\":1},\"1\":{\"110\":1,\"129\":1}}],[\"indexname\",{\"1\":{\"79\":3}}],[\"index\",{\"0\":{\"15\":1,\"125\":1},\"1\":{\"18\":1,\"35\":1,\"79\":3,\"107\":2,\"115\":1,\"125\":1,\"165\":3,\"215\":1,\"259\":1,\"335\":2,\"393\":1,\"399\":1,\"426\":2,\"526\":1,\"528\":1,\"531\":1,\"545\":1}}],[\"invalid\",{\"1\":{\"332\":1}}],[\"increment\",{\"1\":{\"364\":3,\"365\":2,\"411\":2,\"463\":1,\"481\":4,\"484\":2}}],[\"include\",{\"1\":{\"291\":3,\"455\":1}}],[\"includes\",{\"0\":{\"109\":1,\"187\":1},\"1\":{\"109\":1,\"129\":1,\"187\":2,\"282\":1,\"440\":1}}],[\"incoming\",{\"1\":{\"227\":1}}],[\"inheritattrs\",{\"1\":{\"421\":2}}],[\"inherit\",{\"1\":{\"141\":2}}],[\"infinity\",{\"1\":{\"105\":1}}],[\"inner\",{\"1\":{\"78\":2}}],[\"insert\",{\"1\":{\"65\":2,\"77\":1}}],[\"instance\",{\"1\":{\"344\":1,\"355\":2,\"449\":1}}],[\"instanceof\",{\"1\":{\"23\":2,\"380\":1}}],[\"install\",{\"1\":{\"16\":2,\"20\":1,\"220\":1,\"290\":1,\"349\":1,\"363\":1,\"367\":1,\"397\":2,\"399\":1,\"400\":1,\"451\":2,\"476\":2,\"525\":1}}],[\"in\",{\"0\":{\"69\":1},\"1\":{\"41\":1,\"69\":1,\"146\":3,\"356\":1,\"357\":1,\"392\":1,\"393\":1,\"426\":5,\"437\":1,\"453\":3,\"454\":1}}],[\"intl\",{\"1\":{\"291\":3}}],[\"int或integer\",{\"1\":{\"83\":1}}],[\"into\",{\"1\":{\"65\":2,\"77\":1}}],[\"interceptors\",{\"1\":{\"359\":3}}],[\"inter>\",{\"1\":{\"321\":1}}],[\"inter\",{\"1\":{\"321\":1}}],[\"intersection\",{\"1\":{\"334\":1}}],[\"intersect\",{\"1\":{\"76\":2}}],[\"internal\",{\"1\":{\"54\":1}}],[\"interface可以给function\",{\"0\":{\"335\":1}}],[\"interface\",{\"0\":{\"320\":1},\"1\":{\"23\":2,\"320\":6,\"321\":3,\"332\":1,\"334\":1,\"335\":3,\"342\":1,\"343\":1,\"347\":1,\"458\":1}}],[\"integer\",{\"1\":{\"39\":2,\"83\":1,\"209\":2}}],[\"ints\",{\"1\":{\"35\":2}}],[\"int类型\",{\"1\":{\"24\":2}}],[\"int\",{\"1\":{\"23\":1,\"24\":3,\"30\":2,\"33\":9,\"35\":10,\"39\":2,\"41\":2,\"64\":5,\"83\":1}}],[\"initial\",{\"1\":{\"411\":1}}],[\"initialvalue\",{\"0\":{\"118\":1,\"119\":1},\"1\":{\"118\":1,\"119\":1}}],[\"initheartcheck\",{\"1\":{\"228\":2}}],[\"init\",{\"1\":{\"15\":1,\"205\":1}}],[\"iview\",{\"1\":{\"4\":1}}],[\"mutation对应的方法\",{\"1\":{\"481\":1}}],[\"mutations\",{\"1\":{\"479\":1,\"480\":1,\"481\":1,\"483\":2,\"508\":1,\"509\":1}}],[\"mutation\",{\"0\":{\"479\":1,\"480\":1},\"1\":{\"477\":1,\"480\":1,\"483\":1,\"484\":1}}],[\"must\",{\"1\":{\"440\":1}}],[\"multiple\",{\"1\":{\"432\":1}}],[\"multipart\",{\"1\":{\"92\":1}}],[\"ms\",{\"1\":{\"420\":1}}],[\"msg\",{\"1\":{\"315\":1,\"415\":1,\"460\":3}}],[\"md=\",{\"1\":{\"545\":1}}],[\"md\",{\"1\":{\"356\":1,\"545\":1}}],[\"mkdir\",{\"1\":{\"289\":1}}],[\"m3\",{\"1\":{\"185\":4}}],[\"m2\",{\"1\":{\"185\":1}}],[\"m1\",{\"1\":{\"185\":6}}],[\"mixins\",{\"1\":{\"412\":1}}],[\"mikeymike\",{\"1\":{\"356\":1}}],[\"middle\",{\"1\":{\"141\":1}}],[\"miniprogram\",{\"1\":{\"553\":1}}],[\"miniprogram调用navigateto跳转方式\",{\"1\":{\"553\":1}}],[\"min\",{\"1\":{\"76\":1,\"215\":1,\"220\":1}}],[\"mm\",{\"1\":{\"83\":4}}],[\"me\",{\"1\":{\"432\":1,\"439\":2}}],[\"meta\",{\"1\":{\"380\":1,\"386\":2}}],[\"methods的数据和方法\",{\"1\":{\"524\":1}}],[\"methods等同时使用吗\",{\"0\":{\"524\":1}}],[\"methods\",{\"1\":{\"364\":1,\"391\":2,\"393\":2,\"394\":1,\"411\":2,\"480\":1,\"481\":1,\"490\":1,\"524\":1}}],[\"method请求方法\",{\"1\":{\"89\":1}}],[\"method\",{\"1\":{\"30\":1,\"89\":1,\"354\":1,\"356\":1}}],[\"memory模式\",{\"1\":{\"370\":1}}],[\"memory\",{\"1\":{\"367\":1}}],[\"message变化时自动触发\",{\"1\":{\"469\":1}}],[\"message=\",{\"1\":{\"446\":1}}],[\"message\",{\"1\":{\"218\":2,\"219\":1,\"220\":7,\"227\":3,\"228\":1,\"285\":2,\"286\":1,\"426\":3,\"429\":2,\"432\":2,\"440\":1,\"446\":2,\"469\":2,\"471\":2,\"472\":3}}],[\"mediumtext\",{\"1\":{\"83\":1}}],[\"mediumblob\",{\"1\":{\"83\":1}}],[\"mediumint\",{\"1\":{\"83\":1}}],[\"m\",{\"1\":{\"74\":2,\"83\":1,\"138\":2,\"169\":6,\"193\":1,\"321\":1}}],[\"mouse\",{\"1\":{\"412\":1}}],[\"mousemove\",{\"1\":{\"412\":4}}],[\"mounted阶段可以获取到跟元素\",{\"1\":{\"390\":1,\"393\":1}}],[\"mounted\",{\"1\":{\"390\":5,\"391\":2,\"393\":2,\"447\":1,\"448\":1,\"450\":1,\"487\":1,\"488\":1,\"492\":1,\"493\":1,\"494\":2,\"495\":1,\"496\":1}}],[\"mount\",{\"1\":{\"369\":1,\"399\":1,\"400\":1}}],[\"modal\",{\"1\":{\"456\":2}}],[\"modal<\",{\"1\":{\"456\":1}}],[\"mode用于指定当前项目的环境\",{\"1\":{\"532\":1}}],[\"mode属性改为\",{\"1\":{\"516\":1}}],[\"mode\",{\"0\":{\"532\":1},\"1\":{\"370\":1,\"527\":1,\"532\":1}}],[\"mode的可选值如下\",{\"1\":{\"370\":1}}],[\"model接收参数\",{\"0\":{\"435\":1}}],[\"modelvalue\",{\"1\":{\"434\":4}}],[\"model=\",{\"1\":{\"432\":6,\"434\":1,\"435\":2,\"436\":1}}],[\"model双向绑定\",{\"1\":{\"394\":1}}],[\"model的数据响应式是在编译阶段捕获到\",{\"1\":{\"394\":1}}],[\"model\",{\"1\":{\"332\":4,\"394\":3,\"434\":7,\"435\":3,\"436\":3}}],[\"module文件\",{\"1\":{\"534\":1}}],[\"module模块转换\",{\"0\":{\"530\":1}}],[\"modulekey\",{\"1\":{\"526\":5}}],[\"moduleexport\",{\"1\":{\"526\":4}}],[\"moduleb\",{\"1\":{\"483\":2}}],[\"modulea\",{\"1\":{\"483\":2}}],[\"module是为了解决store存储的数据臃肿的\",{\"1\":{\"483\":1}}],[\"modules\",{\"1\":{\"216\":2,\"397\":1,\"483\":1,\"508\":1,\"526\":2}}],[\"module\",{\"0\":{\"483\":1},\"1\":{\"185\":2,\"208\":2,\"214\":1,\"216\":3,\"284\":1,\"291\":2,\"398\":1,\"401\":4,\"458\":1,\"477\":1,\"512\":1,\"515\":1,\"526\":7,\"528\":3,\"529\":1,\"530\":2,\"531\":2,\"532\":2}}],[\"modifiers\",{\"1\":{\"436\":2,\"449\":1}}],[\"modified\",{\"1\":{\"52\":1,\"58\":4}}],[\"modify\",{\"1\":{\"64\":4}}],[\"moveto\",{\"1\":{\"135\":1,\"136\":1,\"139\":2}}],[\"moved\",{\"1\":{\"52\":1}}],[\"mydirective\",{\"1\":{\"448\":1}}],[\"mydict\",{\"1\":{\"335\":1}}],[\"my\",{\"1\":{\"439\":1,\"449\":3,\"528\":3,\"529\":1,\"530\":1}}],[\"mytext\",{\"1\":{\"436\":1}}],[\"mytype\",{\"1\":{\"318\":2}}],[\"mycomponent>\",{\"1\":{\"446\":1}}],[\"mycomponent\",{\"1\":{\"419\":1}}],[\"myclass<t>\",{\"1\":{\"321\":1}}],[\"myclass\",{\"1\":{\"320\":1,\"321\":1,\"344\":2}}],[\"mymethod\",{\"1\":{\"344\":2}}],[\"myarray\",{\"1\":{\"335\":2}}],[\"myadd\",{\"1\":{\"335\":1}}],[\"myfunc\",{\"1\":{\"335\":2}}],[\"myplugin\",{\"1\":{\"451\":2}}],[\"mypoint\",{\"1\":{\"320\":2}}],[\"mypuppy\",{\"1\":{\"32\":1}}],[\"myint\",{\"1\":{\"320\":2}}],[\"myobject\",{\"1\":{\"426\":2}}],[\"myobj\",{\"1\":{\"320\":4}}],[\"mysql\",{\"1\":{\"66\":2,\"83\":1}}],[\"mysqldump\",{\"1\":{\"66\":2}}],[\"mysql基础知识\",{\"0\":{\"82\":1}}],[\"mysql基础\",{\"1\":{\"8\":1}}],[\"mylist\",{\"1\":{\"35\":3}}],[\"maybereforgetter\",{\"1\":{\"473\":3}}],[\"macos\",{\"1\":{\"326\":1}}],[\"manager\",{\"1\":{\"323\":1}}],[\"mango\",{\"1\":{\"112\":1,\"113\":1,\"115\":2,\"116\":2,\"117\":2,\"121\":2,\"122\":2,\"127\":2,\"128\":1}}],[\"male\",{\"1\":{\"303\":1}}],[\"math\",{\"0\":{\"180\":1,\"181\":1},\"1\":{\"137\":1,\"138\":1,\"143\":1,\"145\":1,\"149\":1,\"176\":1,\"180\":1,\"181\":3,\"188\":1,\"214\":4}}],[\"match\",{\"1\":{\"58\":2,\"389\":1,\"393\":1,\"440\":1}}],[\"mapgetters\",{\"1\":{\"482\":2}}],[\"mapactions\",{\"1\":{\"481\":2}}],[\"mapmutations\",{\"1\":{\"480\":2}}],[\"mapstate\",{\"1\":{\"478\":2}}],[\"map原型也有interator接口\",{\"1\":{\"169\":1}}],[\"map\",{\"0\":{\"115\":1,\"169\":1},\"1\":{\"106\":1,\"115\":1,\"129\":1,\"165\":1,\"169\":2,\"193\":1,\"288\":1,\"407\":1,\"463\":1,\"542\":1}}],[\"maxredirects\",{\"1\":{\"356\":1}}],[\"maxbodylength\",{\"1\":{\"356\":1}}],[\"maxcontentlength\",{\"1\":{\"356\":1}}],[\"maxwidth\",{\"1\":{\"141\":2}}],[\"max\",{\"1\":{\"58\":1,\"76\":1,\"209\":4,\"455\":1}}],[\"make\",{\"1\":{\"20\":1}}],[\"main>\",{\"1\":{\"444\":2,\"504\":1}}],[\"main定义模块\",{\"1\":{\"216\":1}}],[\"main入口文件配置\",{\"1\":{\"215\":1}}],[\"main=\",{\"1\":{\"215\":1}}],[\"main\",{\"0\":{\"15\":1},\"1\":{\"18\":1,\"25\":2,\"32\":1,\"33\":1,\"39\":1,\"41\":1,\"190\":2,\"196\":2,\"207\":2,\"215\":3,\"216\":1,\"296\":1,\"444\":1,\"526\":1,\"528\":1}}],[\"nginx反向代理\",{\"1\":{\"283\":1}}],[\"navigator\",{\"1\":{\"543\":1}}],[\"navigateback\",{\"1\":{\"543\":1}}],[\"navigateto\",{\"1\":{\"543\":1,\"545\":1,\"553\":1}}],[\"navigation\",{\"1\":{\"382\":1}}],[\"nan\",{\"1\":{\"183\":4}}],[\"name属性\",{\"1\":{\"462\":1}}],[\"name=\",{\"1\":{\"406\":1,\"435\":2,\"444\":3,\"446\":1,\"453\":2,\"454\":1,\"462\":1,\"504\":2}}],[\"name=值\",{\"1\":{\"65\":1}}],[\"name\",{\"0\":{\"461\":1},\"1\":{\"25\":7,\"31\":2,\"32\":4,\"64\":4,\"65\":3,\"71\":4,\"75\":2,\"79\":2,\"157\":2,\"159\":4,\"165\":1,\"169\":4,\"171\":2,\"172\":3,\"173\":5,\"174\":2,\"184\":3,\"192\":2,\"193\":1,\"194\":4,\"196\":2,\"200\":4,\"205\":4,\"281\":1,\"282\":1,\"300\":5,\"304\":4,\"315\":1,\"318\":6,\"320\":8,\"321\":4,\"323\":2,\"335\":1,\"342\":2,\"344\":2,\"358\":2,\"365\":2,\"372\":1,\"375\":3,\"376\":1,\"385\":1,\"386\":1,\"403\":4,\"404\":1,\"426\":2,\"444\":2,\"453\":5,\"460\":2,\"463\":2,\"464\":2,\"466\":1,\"468\":1,\"505\":2,\"521\":1,\"523\":2,\"524\":2}}],[\"nick\",{\"1\":{\"64\":1}}],[\"now\",{\"1\":{\"465\":2,\"469\":2}}],[\"nonnullable<type>\",{\"1\":{\"324\":1}}],[\"none\",{\"1\":{\"58\":2,\"291\":1,\"532\":1}}],[\"nounusedparameters\",{\"1\":{\"291\":1}}],[\"nounusedlocals\",{\"1\":{\"291\":1}}],[\"nofallthroughcasesinswitch\",{\"1\":{\"291\":1}}],[\"noimplicitreturns\",{\"1\":{\"291\":1}}],[\"noimplicitthis\",{\"1\":{\"291\":1}}],[\"noimplicitany\",{\"1\":{\"291\":1}}],[\"noemitonerror\",{\"1\":{\"291\":1}}],[\"noemit\",{\"1\":{\"291\":1}}],[\"notfind\",{\"1\":{\"404\":1}}],[\"notfound\",{\"1\":{\"385\":2,\"404\":1}}],[\"notallowederror\",{\"1\":{\"380\":1}}],[\"note\",{\"1\":{\"356\":1}}],[\"not可以加到任何一个条件语句中\",{\"1\":{\"70\":1}}],[\"not\",{\"1\":{\"52\":1,\"53\":1,\"54\":2,\"68\":1,\"70\":1,\"72\":1,\"76\":2,\"228\":1,\"356\":2,\"397\":1,\"424\":1,\"555\":1}}],[\"no\",{\"1\":{\"51\":1,\"58\":1,\"407\":1}}],[\"nodetype\",{\"1\":{\"389\":2,\"391\":2,\"393\":2,\"394\":1}}],[\"nodes\",{\"1\":{\"389\":2,\"390\":1,\"391\":2,\"393\":2,\"394\":2}}],[\"node环境强制开启模式\",{\"1\":{\"370\":1}}],[\"node和浏览器端都支持\",{\"1\":{\"213\":1}}],[\"node端同步方案\",{\"1\":{\"213\":1}}],[\"nodejs\",{\"1\":{\"185\":1,\"293\":1}}],[\"nodelist\",{\"1\":{\"165\":1}}],[\"node\",{\"1\":{\"13\":1,\"167\":1,\"356\":4,\"393\":4,\"397\":1,\"532\":1}}],[\"never一般用于报错函数的返回值类型\",{\"1\":{\"316\":1}}],[\"never\",{\"0\":{\"316\":1},\"1\":{\"316\":1,\"339\":1}}],[\"next参数影响上次的结果\",{\"1\":{\"166\":1}}],[\"next\",{\"1\":{\"99\":3,\"113\":3,\"128\":3,\"165\":2,\"166\":10,\"379\":1,\"386\":4,\"476\":1,\"522\":1}}],[\"nextint\",{\"1\":{\"41\":2}}],[\"newv\",{\"1\":{\"466\":1,\"468\":1}}],[\"newvalue\",{\"1\":{\"465\":2}}],[\"new\",{\"1\":{\"18\":1,\"25\":2,\"32\":3,\"33\":1,\"35\":3,\"36\":4,\"37\":1,\"39\":6,\"41\":1,\"77\":2,\"88\":1,\"108\":1,\"149\":1,\"167\":1,\"168\":2,\"169\":1,\"190\":2,\"193\":1,\"194\":1,\"205\":1,\"227\":2,\"228\":2,\"234\":1,\"286\":2,\"300\":1,\"316\":1,\"321\":1,\"356\":3,\"370\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"393\":2,\"476\":2,\"531\":1,\"542\":1}}],[\"n2\",{\"1\":{\"39\":2}}],[\"n1\",{\"1\":{\"39\":2}}],[\"num\",{\"1\":{\"306\":1,\"481\":2}}],[\"numeric\",{\"1\":{\"83\":1}}],[\"number原始类型\",{\"1\":{\"464\":1}}],[\"number是深度\",{\"1\":{\"105\":1}}],[\"number\",{\"0\":{\"105\":1,\"125\":1,\"176\":1,\"177\":1,\"178\":1,\"179\":1,\"306\":1},\"1\":{\"100\":1,\"102\":1,\"103\":1,\"104\":1,\"125\":1,\"176\":5,\"177\":1,\"178\":3,\"179\":1,\"209\":2,\"300\":1,\"306\":1,\"309\":3,\"311\":1,\"318\":3,\"319\":3,\"320\":5,\"321\":2,\"322\":1,\"323\":1,\"334\":1,\"335\":4,\"342\":2,\"343\":1,\"345\":7,\"409\":1,\"433\":1,\"440\":4}}],[\"number2\",{\"1\":{\"41\":1}}],[\"number1\",{\"1\":{\"41\":1}}],[\"numbers2\",{\"1\":{\"35\":2}}],[\"numbers\",{\"1\":{\"33\":2,\"35\":7}}],[\"null或undefined之外的类型\",{\"1\":{\"334\":1}}],[\"null的用户\",{\"1\":{\"72\":2}}],[\"null\",{\"0\":{\"72\":1},\"1\":{\"39\":1,\"72\":2,\"76\":2,\"228\":4,\"334\":1,\"339\":1,\"356\":1,\"437\":1,\"541\":1}}],[\"n++\",{\"1\":{\"33\":2}}],[\"n<10\",{\"1\":{\"33\":2}}],[\"n\",{\"1\":{\"33\":2,\"74\":3,\"138\":2,\"209\":2,\"480\":1,\"481\":1}}],[\"npx\",{\"1\":{\"20\":1,\"185\":2}}],[\"npmjs\",{\"1\":{\"356\":1}}],[\"npm异常可以切换至cnpm或yarn\",{\"1\":{\"290\":1}}],[\"npmmirror\",{\"1\":{\"290\":1}}],[\"npm\",{\"1\":{\"13\":1,\"15\":1,\"16\":1,\"19\":1,\"20\":2,\"220\":1,\"290\":9,\"294\":1,\"349\":1,\"363\":1,\"367\":1,\"397\":2,\"399\":1,\"400\":1,\"476\":2,\"525\":2}}],[\"前4个生命周期\",{\"1\":{\"493\":1}}],[\"前调用\",{\"1\":{\"448\":1}}],[\"前进\",{\"1\":{\"374\":1}}],[\"前\",{\"1\":{\"356\":1,\"448\":1}}],[\"前面\",{\"1\":{\"356\":1}}],[\"前往根目录\",{\"1\":{\"289\":1}}],[\"前端路由一共有三种模式\",{\"1\":{\"367\":1}}],[\"前端发展才更加完善\",{\"1\":{\"213\":1}}],[\"前端目前都开始卷框架了\",{\"1\":{\"129\":1}}],[\"前端开发使用\",{\"1\":{\"519\":1}}],[\"前端开发\",{\"1\":{\"6\":1}}],[\"前提条件\",{\"0\":{\"13\":1}}],[\"5s\",{\"1\":{\"453\":4,\"454\":1}}],[\"5500\",{\"1\":{\"282\":1,\"285\":1}}],[\"551\",{\"1\":{\"83\":1}}],[\"59\",{\"1\":{\"83\":6}}],[\"535字节\",{\"1\":{\"83\":2}}],[\"535\",{\"1\":{\"83\":1}}],[\"5>发送\",{\"1\":{\"60\":1}}],[\"5>特性不同\",{\"1\":{\"47\":1}}],[\"5xx\",{\"0\":{\"54\":1}}],[\"507\",{\"1\":{\"83\":3}}],[\"505\",{\"1\":{\"54\":1}}],[\"503\",{\"1\":{\"54\":1}}],[\"501\",{\"1\":{\"54\":1}}],[\"5000\",{\"1\":{\"172\":1}}],[\"500\",{\"1\":{\"39\":1,\"54\":1}}],[\"50\",{\"1\":{\"39\":1,\"136\":1,\"137\":1,\"138\":4,\"139\":2,\"140\":2,\"143\":2,\"145\":1,\"149\":1,\"453\":1}}],[\"5\",{\"0\":{\"19\":1,\"29\":1,\"48\":1,\"138\":1,\"159\":1,\"209\":1,\"217\":1,\"260\":1,\"310\":1,\"330\":1,\"393\":1,\"432\":1,\"493\":1,\"523\":1,\"552\":1},\"1\":{\"35\":1,\"39\":1,\"74\":1,\"77\":1,\"98\":3,\"99\":1,\"100\":1,\"101\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":2,\"106\":1,\"107\":1,\"109\":2,\"110\":2,\"111\":1,\"114\":2,\"118\":1,\"119\":2,\"120\":2,\"123\":1,\"124\":3,\"125\":3,\"126\":2,\"135\":1,\"138\":1,\"139\":1,\"140\":1,\"149\":1,\"150\":1,\"162\":2,\"180\":1,\"202\":4,\"234\":1,\"306\":1,\"356\":1,\"369\":1}}],[\"5px\",{\"1\":{\"11\":1}}],[\"51qux\",{\"1\":{\"5\":1}}],[\"相同\",{\"1\":{\"374\":2}}],[\"相同点\",{\"1\":{\"342\":1,\"549\":1}}],[\"相比与js\",{\"0\":{\"297\":1}}],[\"相当于调用\",{\"1\":{\"372\":1}}],[\"相当于\",{\"1\":{\"11\":1,\"373\":1}}],[\"相对包含块的位置\",{\"1\":{\"258\":1}}],[\"相对于js目录的位置及文件名\",{\"1\":{\"215\":1}}],[\"相对于根字号\",{\"1\":{\"11\":1}}],[\"相对单位会变成绝对单位\",{\"1\":{\"257\":1}}],[\"相对单位\",{\"1\":{\"11\":3}}],[\"2大周期\",{\"1\":{\"492\":1}}],[\"2`\",{\"1\":{\"383\":1}}],[\"2xx\",{\"1\":{\"359\":2}}],[\"2looooos\",{\"1\":{\"178\":1}}],[\"2个花括号\",{\"1\":{\"415\":1}}],[\"2个坐标点\",{\"1\":{\"149\":1}}],[\"2个条件都满足会合并成一条\",{\"1\":{\"76\":1}}],[\"2d\",{\"1\":{\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":2,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1}}],[\"21\",{\"0\":{\"346\":1}}],[\"213123\",{\"1\":{\"178\":1}}],[\"213123looosss\",{\"1\":{\"178\":1}}],[\"210\",{\"1\":{\"140\":2}}],[\"2147483647\",{\"1\":{\"83\":1}}],[\"215字节\",{\"1\":{\"83\":2}}],[\"2155\",{\"1\":{\"83\":1}}],[\"215\",{\"1\":{\"83\":1}}],[\"23\",{\"1\":{\"83\":1}}],[\"233\",{\"1\":{\"83\":1}}],[\"22\",{\"0\":{\"347\":1}}],[\"2222\",{\"1\":{\"463\":1}}],[\"222\",{\"1\":{\"166\":1,\"309\":1,\"521\":2}}],[\"22044604\",{\"1\":{\"176\":1}}],[\"220\",{\"1\":{\"142\":2}}],[\"225\",{\"1\":{\"83\":3}}],[\"223\",{\"1\":{\"83\":1}}],[\"295字节\",{\"1\":{\"83\":2}}],[\"295\",{\"1\":{\"83\":1}}],[\"294\",{\"1\":{\"83\":3}}],[\"2>浏览器查找当前\",{\"1\":{\"60\":1}}],[\"2>安全性不同\",{\"1\":{\"47\":1}}],[\"2状态\",{\"1\":{\"59\":1}}],[\"260\",{\"1\":{\"39\":2}}],[\"240\",{\"1\":{\"39\":3}}],[\"255字节\",{\"1\":{\"83\":3}}],[\"255\",{\"1\":{\"83\":2,\"257\":1}}],[\"25\",{\"1\":{\"33\":1,\"35\":4,\"118\":1,\"453\":1}}],[\"20px\",{\"1\":{\"141\":1}}],[\"2038\",{\"1\":{\"83\":3}}],[\"206\",{\"1\":{\"51\":1}}],[\"204\",{\"1\":{\"51\":1}}],[\"202\",{\"1\":{\"51\":1}}],[\"2000\",{\"1\":{\"356\":2}}],[\"2009年mozilla工程师提出的commonjs规范\",{\"1\":{\"213\":1}}],[\"2009年\",{\"1\":{\"153\":1}}],[\"200\",{\"1\":{\"51\":1,\"58\":1,\"64\":1,\"88\":1,\"146\":4,\"149\":4,\"150\":5,\"190\":1,\"356\":1,\"357\":1}}],[\"20\",{\"0\":{\"345\":1},\"1\":{\"24\":1,\"33\":1,\"35\":7,\"39\":5,\"124\":3,\"139\":1,\"140\":1,\"145\":3,\"157\":1,\"205\":1,\"207\":1}}],[\"2011年支付宝前端玉伯开发了\",{\"1\":{\"213\":1}}],[\"2010年美国程序员开发了require\",{\"1\":{\"213\":1}}],[\"2019年\",{\"1\":{\"153\":1}}],[\"201\",{\"1\":{\"51\":1,\"83\":3}}],[\"2015年emcscript官方发布了es6模块化及其规范\",{\"1\":{\"213\":1}}],[\"2015年\",{\"1\":{\"153\":1}}],[\"2015\",{\"1\":{\"6\":2,\"326\":1}}],[\"2016年\",{\"1\":{\"153\":1}}],[\"2016\",{\"1\":{\"2\":1,\"426\":1}}],[\"2012\",{\"1\":{\"2\":1}}],[\"2^64\",{\"1\":{\"23\":2}}],[\"2^31\",{\"1\":{\"23\":2}}],[\"2^15\",{\"1\":{\"23\":2}}],[\"2^8\",{\"1\":{\"23\":2}}],[\"2\",{\"0\":{\"16\":1,\"24\":1,\"45\":1,\"87\":1,\"135\":1,\"156\":1,\"188\":1,\"191\":1,\"197\":1,\"201\":1,\"206\":1,\"214\":1,\"240\":1,\"257\":1,\"273\":1,\"280\":1,\"294\":1,\"307\":1,\"327\":1,\"363\":1,\"390\":1,\"402\":1,\"418\":1,\"476\":1,\"489\":1,\"490\":1,\"499\":1,\"504\":1,\"509\":1,\"513\":1,\"516\":1,\"520\":1,\"527\":1,\"535\":1,\"549\":1},\"1\":{\"11\":1,\"23\":1,\"35\":2,\"39\":2,\"41\":1,\"83\":6,\"90\":1,\"95\":3,\"97\":1,\"98\":8,\"99\":2,\"100\":1,\"101\":5,\"102\":1,\"103\":1,\"104\":1,\"105\":4,\"106\":4,\"107\":3,\"108\":2,\"109\":1,\"110\":2,\"111\":1,\"113\":1,\"114\":1,\"115\":1,\"118\":1,\"119\":1,\"120\":2,\"122\":1,\"123\":1,\"124\":3,\"125\":5,\"126\":2,\"137\":1,\"138\":1,\"145\":1,\"149\":1,\"162\":2,\"163\":2,\"165\":1,\"168\":5,\"176\":3,\"178\":1,\"187\":2,\"188\":2,\"190\":1,\"202\":5,\"209\":1,\"214\":1,\"216\":2,\"227\":1,\"228\":1,\"234\":1,\"246\":1,\"266\":1,\"274\":1,\"291\":1,\"297\":1,\"309\":2,\"312\":2,\"335\":1,\"358\":1,\"364\":2,\"369\":1,\"386\":1,\"449\":1,\"476\":1,\"510\":1,\"538\":1,\"550\":1}}],[\"物理宽度375px\",{\"1\":{\"11\":1}}],[\"rules\",{\"1\":{\"407\":1,\"530\":1,\"531\":1}}],[\"running\",{\"1\":{\"220\":2}}],[\"run\",{\"1\":{\"19\":1,\"20\":1,\"356\":1}}],[\"rmdir\",{\"1\":{\"289\":1}}],[\"riding\",{\"1\":{\"274\":1}}],[\"right\",{\"1\":{\"78\":2,\"141\":1,\"312\":4,\"546\":3}}],[\"raw\",{\"1\":{\"530\":1,\"531\":1}}],[\"rawprops\",{\"1\":{\"440\":1}}],[\"rawhtml\",{\"1\":{\"416\":2}}],[\"radio\",{\"1\":{\"432\":2}}],[\"radialrcolor\",{\"1\":{\"150\":4}}],[\"rapunz3l\",{\"1\":{\"356\":1}}],[\"raster\",{\"0\":{\"262\":1}}],[\"r2\",{\"0\":{\"150\":1}}],[\"route\",{\"1\":{\"403\":2}}],[\"routes`\",{\"1\":{\"369\":1}}],[\"routes\",{\"1\":{\"369\":2,\"370\":1,\"375\":1,\"376\":2,\"377\":1,\"382\":1,\"384\":1,\"385\":1}}],[\"router通过redirect重定向路由\",{\"1\":{\"376\":1}}],[\"router\",{\"0\":{\"368\":1,\"369\":1,\"372\":1,\"373\":1,\"374\":1},\"1\":{\"367\":2,\"368\":1,\"369\":3,\"370\":2,\"372\":7,\"373\":3,\"374\":7,\"375\":2,\"379\":2,\"380\":1,\"381\":1,\"384\":1,\"386\":1,\"397\":1,\"400\":1,\"403\":1,\"408\":2}}],[\"router路由\",{\"0\":{\"367\":1}}],[\"role\",{\"1\":{\"323\":2}}],[\"rotate\",{\"0\":{\"143\":1},\"1\":{\"143\":2}}],[\"root\",{\"1\":{\"66\":2}}],[\"rtl\",{\"1\":{\"141\":1}}],[\"r是弧线半径\",{\"1\":{\"138\":1}}],[\"r\",{\"0\":{\"150\":1},\"1\":{\"137\":1,\"138\":1}}],[\"relaunch\",{\"1\":{\"543\":1}}],[\"ref定义的数据\",{\"1\":{\"467\":1}}],[\"ref定义的响应式基本类型数据\",{\"1\":{\"463\":1}}],[\"ref类型的响应式数据\",{\"1\":{\"465\":1}}],[\"ref声明对象时\",{\"1\":{\"463\":1}}],[\"ref同名\",{\"1\":{\"437\":1}}],[\"ref=\",{\"1\":{\"437\":2}}],[\"ref\",{\"0\":{\"463\":1},\"1\":{\"364\":1,\"365\":3,\"411\":2,\"412\":6,\"419\":4,\"420\":2,\"426\":1,\"428\":1,\"437\":5,\"439\":4,\"440\":1,\"441\":2,\"460\":2,\"463\":6,\"465\":4,\"473\":4,\"524\":1}}],[\"reflect\",{\"1\":{\"291\":1}}],[\"reflow\",{\"0\":{\"264\":1}}],[\"record<type>\",{\"1\":{\"324\":1}}],[\"received\",{\"1\":{\"220\":2,\"228\":1}}],[\"rect\",{\"1\":{\"151\":1}}],[\"req\",{\"1\":{\"220\":1,\"281\":2,\"282\":2}}],[\"requests\",{\"1\":{\"356\":2}}],[\"requested\",{\"1\":{\"356\":1}}],[\"request\",{\"0\":{\"354\":1},\"1\":{\"53\":2,\"274\":1,\"281\":1,\"282\":1,\"357\":1,\"359\":2}}],[\"required\",{\"1\":{\"434\":1,\"440\":1}}],[\"required<type>\",{\"1\":{\"324\":1}}],[\"requiresauth\",{\"1\":{\"386\":3}}],[\"requirescamera\",{\"1\":{\"380\":1}}],[\"requirejs\",{\"1\":{\"185\":1,\"215\":1}}],[\"require\",{\"1\":{\"18\":1,\"214\":1,\"215\":4,\"216\":4,\"220\":2,\"227\":2,\"286\":1,\"398\":1,\"526\":3,\"529\":1,\"530\":1,\"531\":2,\"542\":1}}],[\"rejected\",{\"1\":{\"356\":1}}],[\"reject时触发\",{\"1\":{\"167\":1}}],[\"reject将状态修改为rejected\",{\"1\":{\"167\":1}}],[\"reject\",{\"1\":{\"167\":4,\"190\":2,\"356\":1,\"359\":2,\"382\":1}}],[\"repaint\",{\"0\":{\"265\":1}}],[\"repeat\",{\"1\":{\"151\":2}}],[\"repeat|repeat\",{\"1\":{\"151\":1}}],[\"replace>\",{\"1\":{\"373\":1}}],[\"replaceall\",{\"1\":{\"36\":1}}],[\"replace\",{\"0\":{\"373\":1},\"1\":{\"36\":1,\"373\":3,\"389\":1,\"393\":1}}],[\"reverse\",{\"0\":{\"120\":1},\"1\":{\"120\":1,\"129\":1,\"453\":1}}],[\"red变成rgb\",{\"1\":{\"257\":1}}],[\"red\",{\"1\":{\"137\":1,\"143\":1,\"146\":3,\"147\":1,\"149\":1,\"150\":1,\"420\":2}}],[\"reduceright\",{\"0\":{\"119\":1},\"1\":{\"119\":3,\"129\":1}}],[\"reduce\",{\"0\":{\"118\":1},\"1\":{\"118\":3,\"119\":1,\"129\":1}}],[\"redirectto\",{\"1\":{\"543\":1}}],[\"redirects\",{\"1\":{\"357\":1}}],[\"redirect\",{\"0\":{\"376\":1},\"1\":{\"52\":1,\"376\":2}}],[\"returntype<type>\",{\"1\":{\"324\":1}}],[\"return\",{\"1\":{\"100\":1,\"102\":1,\"103\":1,\"104\":1,\"115\":1,\"118\":2,\"119\":2,\"123\":1,\"124\":2,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":2,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1,\"165\":3,\"171\":1,\"174\":1,\"176\":2,\"190\":1,\"214\":2,\"228\":2,\"234\":1,\"285\":2,\"319\":1,\"321\":3,\"332\":1,\"335\":1,\"345\":2,\"356\":4,\"359\":4,\"364\":1,\"365\":1,\"379\":1,\"380\":1,\"382\":1,\"389\":1,\"392\":2,\"393\":2,\"403\":2,\"409\":3,\"412\":1,\"436\":2,\"439\":1,\"440\":3,\"460\":4,\"465\":1,\"482\":1,\"484\":1,\"524\":2,\"526\":1,\"542\":1}}],[\"reactive定义的数据\",{\"1\":{\"467\":1}}],[\"reactive返回的事代理后\",{\"1\":{\"463\":1}}],[\"reactive\",{\"0\":{\"464\":1},\"1\":{\"365\":1,\"419\":1,\"420\":1,\"426\":1,\"463\":3,\"464\":1,\"466\":1,\"469\":1}}],[\"react\",{\"1\":{\"213\":1}}],[\"readme\",{\"1\":{\"356\":1}}],[\"readonly\",{\"1\":{\"333\":1,\"338\":1}}],[\"readonly<type>\",{\"1\":{\"324\":1}}],[\"readfile\",{\"1\":{\"167\":1}}],[\"readystate\",{\"1\":{\"88\":1,\"190\":1}}],[\"readystatechange\",{\"1\":{\"88\":1}}],[\"real\",{\"1\":{\"83\":1}}],[\"rename\",{\"1\":{\"64\":2}}],[\"res3\",{\"1\":{\"358\":1}}],[\"res=>\",{\"1\":{\"358\":1}}],[\"respectively\",{\"1\":{\"356\":1}}],[\"responses\",{\"1\":{\"356\":2}}],[\"responseencoding\",{\"1\":{\"356\":1}}],[\"responsetype\",{\"1\":{\"356\":1}}],[\"responsetext\",{\"1\":{\"88\":1}}],[\"response\",{\"1\":{\"190\":1,\"354\":6,\"356\":1,\"359\":4}}],[\"res2\",{\"1\":{\"321\":1,\"358\":1}}],[\"result\",{\"1\":{\"281\":2}}],[\"reset\",{\"1\":{\"228\":4}}],[\"resolved\",{\"1\":{\"356\":1}}],[\"resolve时触发\",{\"1\":{\"167\":1}}],[\"resolve将状态修改为fulfilled\",{\"1\":{\"167\":1}}],[\"resolve\",{\"1\":{\"167\":4,\"190\":2,\"356\":1,\"397\":1,\"529\":1,\"530\":1}}],[\"rest\",{\"1\":{\"162\":1,\"196\":1}}],[\"rest参数\",{\"0\":{\"162\":1},\"1\":{\"162\":1}}],[\"restore\",{\"1\":{\"142\":1,\"143\":2}}],[\"res1\",{\"1\":{\"106\":2,\"118\":1,\"119\":1,\"124\":1,\"321\":2,\"358\":1}}],[\"res\",{\"1\":{\"39\":4,\"97\":1,\"98\":2,\"99\":4,\"100\":1,\"101\":2,\"102\":1,\"103\":1,\"104\":1,\"106\":2,\"112\":1,\"113\":4,\"115\":1,\"116\":2,\"117\":2,\"118\":1,\"119\":1,\"120\":1,\"121\":2,\"122\":2,\"123\":1,\"124\":1,\"125\":4,\"126\":2,\"127\":2,\"128\":4,\"167\":2,\"190\":1,\"200\":2,\"214\":1,\"219\":2,\"220\":2,\"281\":2,\"282\":4,\"358\":4,\"526\":2}}],[\"register\",{\"1\":{\"372\":2}}],[\"registry\",{\"1\":{\"290\":7}}],[\"regexp\",{\"1\":{\"291\":1}}],[\"reg\",{\"1\":{\"36\":1,\"198\":2,\"389\":2,\"393\":2}}],[\"removeeventlistener\",{\"1\":{\"412\":2}}],[\"remove\",{\"1\":{\"356\":1}}],[\"removecomments\",{\"1\":{\"291\":1}}],[\"removechild\",{\"1\":{\"281\":1}}],[\"rem\",{\"1\":{\"11\":1}}],[\"rpx\",{\"1\":{\"11\":1}}],[\"视图是虚拟存在的数据表\",{\"1\":{\"80\":1}}],[\"视图\",{\"0\":{\"80\":1}}],[\"视口最长边的长度\",{\"1\":{\"11\":1}}],[\"视口最短边的长度\",{\"1\":{\"11\":1}}],[\"视高\",{\"1\":{\"11\":1}}],[\"视宽\",{\"1\":{\"11\":1}}],[\"假如修改了根字号\",{\"1\":{\"11\":1}}],[\"=watch\",{\"1\":{\"468\":1}}],[\"=啦\",{\"1\":{\"198\":1}}],[\"=所需字符后面的字符\",{\"1\":{\"198\":1}}],[\"=new\",{\"1\":{\"167\":1}}],[\"=arr\",{\"1\":{\"106\":2}}],[\"===>\",{\"1\":{\"496\":4}}],[\"===\",{\"1\":{\"164\":1,\"183\":1,\"190\":1,\"332\":2,\"345\":4,\"386\":1,\"424\":3}}],[\"==\",{\"1\":{\"88\":1,\"164\":1,\"176\":1,\"219\":1,\"285\":2,\"389\":2,\"390\":4,\"391\":3,\"393\":6,\"394\":1,\"406\":1}}],[\"=0\",{\"1\":{\"30\":1,\"33\":1}}],[\"=>number\",{\"1\":{\"319\":1}}],[\"=>a+b\",{\"1\":{\"160\":1}}],[\"=>stroke\",{\"1\":{\"139\":1}}],[\"=>moveto\",{\"1\":{\"139\":1}}],[\"=>\",{\"1\":{\"18\":2,\"100\":1,\"102\":1,\"103\":1,\"104\":1,\"106\":2,\"115\":1,\"118\":2,\"119\":2,\"123\":1,\"124\":2,\"135\":5,\"139\":1,\"153\":5,\"167\":3,\"185\":3,\"190\":1,\"208\":1,\"220\":5,\"227\":1,\"228\":2,\"234\":1,\"281\":1,\"282\":1,\"285\":2,\"286\":2,\"358\":1,\"364\":7,\"365\":1,\"379\":1,\"380\":1,\"381\":1,\"382\":1,\"384\":2,\"386\":1,\"389\":1,\"391\":1,\"393\":3,\"394\":2,\"403\":2,\"404\":1,\"409\":2,\"411\":1,\"412\":4,\"437\":2,\"441\":1,\"447\":1,\"450\":4,\"451\":1,\"455\":2,\"458\":1,\"460\":1,\"465\":1,\"466\":3,\"468\":1,\"469\":3,\"481\":1,\"483\":2,\"484\":4,\"523\":1,\"542\":1}}],[\"=\",{\"1\":{\"11\":8,\"18\":3,\"23\":1,\"24\":7,\"25\":5,\"32\":1,\"33\":10,\"35\":13,\"36\":5,\"37\":1,\"39\":8,\"41\":3,\"65\":4,\"68\":4,\"72\":1,\"75\":1,\"76\":1,\"78\":3,\"88\":3,\"95\":1,\"96\":3,\"97\":2,\"98\":3,\"99\":2,\"100\":2,\"101\":3,\"102\":2,\"103\":2,\"104\":2,\"105\":2,\"106\":1,\"107\":2,\"108\":2,\"109\":1,\"110\":1,\"111\":1,\"112\":2,\"113\":2,\"114\":1,\"115\":2,\"116\":2,\"117\":2,\"118\":3,\"119\":3,\"120\":2,\"121\":2,\"122\":3,\"123\":2,\"124\":3,\"125\":3,\"126\":2,\"127\":2,\"128\":2,\"133\":2,\"134\":3,\"135\":2,\"136\":2,\"137\":2,\"138\":2,\"139\":7,\"140\":3,\"141\":4,\"142\":2,\"143\":4,\"144\":2,\"145\":3,\"146\":5,\"147\":1,\"149\":4,\"150\":2,\"151\":4,\"157\":4,\"158\":2,\"159\":4,\"160\":1,\"163\":7,\"164\":5,\"165\":5,\"166\":7,\"167\":1,\"168\":2,\"169\":1,\"170\":1,\"172\":2,\"173\":2,\"184\":5,\"185\":4,\"187\":1,\"188\":2,\"190\":3,\"192\":1,\"193\":2,\"194\":2,\"196\":4,\"198\":4,\"200\":2,\"202\":2,\"203\":1,\"205\":4,\"207\":2,\"208\":1,\"209\":4,\"214\":3,\"216\":4,\"219\":7,\"220\":5,\"227\":7,\"228\":6,\"234\":5,\"281\":7,\"282\":3,\"284\":1,\"285\":2,\"286\":5,\"300\":4,\"303\":1,\"304\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":6,\"310\":1,\"312\":8,\"315\":7,\"317\":1,\"318\":4,\"319\":1,\"320\":2,\"321\":7,\"323\":4,\"335\":3,\"342\":1,\"343\":1,\"355\":5,\"363\":4,\"364\":5,\"365\":6,\"369\":5,\"370\":2,\"375\":1,\"376\":2,\"377\":1,\"379\":1,\"382\":1,\"383\":1,\"384\":2,\"386\":1,\"389\":6,\"390\":2,\"391\":4,\"392\":1,\"393\":22,\"394\":7,\"398\":2,\"400\":1,\"403\":2,\"409\":3,\"411\":1,\"412\":8,\"417\":3,\"419\":5,\"420\":3,\"422\":1,\"426\":2,\"428\":1,\"434\":5,\"435\":2,\"436\":1,\"437\":3,\"439\":2,\"440\":1,\"441\":4,\"447\":2,\"448\":1,\"450\":1,\"451\":2,\"453\":1,\"456\":2,\"460\":3,\"463\":4,\"464\":2,\"465\":6,\"466\":1,\"469\":2,\"471\":1,\"472\":2,\"473\":1,\"476\":1,\"479\":1,\"480\":1,\"481\":1,\"482\":1,\"483\":3,\"484\":1,\"500\":1,\"512\":1,\"513\":6,\"515\":1,\"521\":2,\"524\":1,\"526\":7,\"528\":3,\"529\":2,\"530\":2,\"531\":3,\"532\":2,\"542\":1,\"545\":1}}],[\"1<\",{\"1\":{\"428\":1}}],[\"1`\",{\"1\":{\"383\":1}}],[\"1+0\",{\"1\":{\"176\":2}}],[\"17\",{\"0\":{\"175\":1,\"323\":1,\"342\":1}}],[\"175\",{\"1\":{\"83\":3}}],[\"150\",{\"1\":{\"135\":1,\"136\":2,\"137\":2}}],[\"15\",{\"0\":{\"148\":1,\"169\":1,\"321\":1,\"340\":1},\"1\":{\"118\":1}}],[\"14\",{\"0\":{\"147\":1,\"168\":1,\"320\":1,\"339\":1},\"1\":{\"83\":2,\"106\":2,\"107\":1}}],[\"147\",{\"1\":{\"83\":2}}],[\"19\",{\"0\":{\"185\":1,\"344\":1},\"1\":{\"83\":2,\"192\":2,\"193\":1,\"194\":2,\"196\":2,\"200\":2}}],[\"1970\",{\"1\":{\"83\":1}}],[\"1901\",{\"1\":{\"83\":1}}],[\"180\",{\"1\":{\"139\":1,\"143\":1}}],[\"18\",{\"0\":{\"182\":1,\"324\":1,\"343\":1},\"1\":{\"83\":1,\"207\":1}}],[\"16\",{\"0\":{\"151\":1,\"170\":1,\"322\":1,\"341\":1},\"1\":{\"83\":3,\"107\":1,\"176\":1}}],[\"16px\",{\"1\":{\"11\":1}}],[\"1到4范围内的\",{\"1\":{\"70\":1}}],[\"1>浏览器地址栏输入\",{\"1\":{\"60\":1}}],[\"1>传输方式不同\",{\"1\":{\"47\":1}}],[\"13px\",{\"1\":{\"420\":1}}],[\"134\",{\"1\":{\"83\":3}}],[\"13\",{\"0\":{\"60\":1,\"146\":1,\"167\":1,\"319\":1,\"338\":1}}],[\"130\",{\"1\":{\"39\":1}}],[\"1状态\",{\"1\":{\"59\":1}}],[\"122223\",{\"1\":{\"393\":1}}],[\"120kg\",{\"1\":{\"205\":1}}],[\"12345\",{\"1\":{\"354\":1,\"356\":1}}],[\"123n\",{\"1\":{\"209\":1}}],[\"123\",{\"1\":{\"167\":1,\"209\":1,\"309\":1,\"389\":1,\"390\":1,\"391\":1,\"393\":1,\"500\":1,\"513\":1,\"526\":1}}],[\"127\",{\"1\":{\"83\":1,\"219\":2,\"282\":1,\"283\":1,\"285\":1,\"356\":1}}],[\"128\",{\"1\":{\"83\":1}}],[\"12\",{\"0\":{\"59\":1,\"145\":1,\"166\":1,\"318\":1,\"337\":1},\"1\":{\"83\":2,\"107\":1,\"162\":2,\"282\":1}}],[\"1就推出了etag\",{\"1\":{\"58\":1}}],[\"1就加入了\",{\"1\":{\"56\":1}}],[\"1版本细化出了303\",{\"1\":{\"55\":1}}],[\"1新增了五种请求方法\",{\"1\":{\"45\":1}}],[\"10s收不到服务端消息算超时\",{\"1\":{\"228\":1}}],[\"101\",{\"1\":{\"223\":1}}],[\"1024\",{\"1\":{\"188\":2}}],[\"10\",{\"0\":{\"37\":1,\"57\":1,\"143\":1,\"164\":1,\"316\":1,\"335\":1,\"451\":1},\"1\":{\"24\":3,\"33\":1,\"35\":6,\"39\":3,\"75\":1,\"80\":1,\"106\":2,\"107\":1,\"118\":1,\"134\":4,\"136\":2,\"139\":5,\"140\":1,\"141\":1,\"176\":1,\"178\":2,\"188\":2,\"216\":1,\"228\":1,\"315\":1,\"321\":2,\"426\":1,\"480\":1}}],[\"1000\",{\"1\":{\"83\":2,\"228\":2,\"356\":1,\"409\":1,\"481\":1}}],[\"100vw\",{\"1\":{\"11\":1}}],[\"100\",{\"1\":{\"11\":2,\"35\":4,\"39\":1,\"64\":1,\"77\":1,\"119\":1,\"125\":2,\"138\":2,\"141\":1,\"142\":6,\"143\":4,\"144\":2,\"145\":3,\"146\":2,\"150\":2,\"176\":1,\"181\":2,\"320\":1,\"374\":2,\"440\":1,\"453\":1}}],[\"1\",{\"0\":{\"15\":1,\"23\":1,\"44\":1,\"83\":1,\"86\":1,\"134\":1,\"155\":1,\"181\":2,\"187\":1,\"190\":1,\"196\":1,\"200\":1,\"205\":1,\"213\":1,\"237\":1,\"256\":1,\"268\":1,\"279\":1,\"288\":1,\"293\":1,\"306\":1,\"326\":1,\"362\":1,\"389\":1,\"396\":1,\"414\":1,\"475\":1,\"487\":1,\"488\":2,\"490\":1,\"498\":1,\"503\":1,\"508\":1,\"512\":1,\"515\":1,\"519\":1,\"526\":1,\"534\":1,\"548\":1},\"1\":{\"13\":1,\"23\":5,\"35\":1,\"39\":1,\"41\":1,\"64\":1,\"65\":4,\"68\":7,\"69\":2,\"70\":4,\"74\":2,\"76\":3,\"83\":10,\"90\":1,\"95\":1,\"96\":4,\"97\":1,\"98\":5,\"99\":2,\"100\":1,\"101\":3,\"102\":1,\"103\":1,\"104\":2,\"105\":4,\"106\":1,\"107\":1,\"108\":2,\"109\":1,\"110\":2,\"111\":1,\"113\":1,\"114\":3,\"115\":1,\"118\":1,\"119\":1,\"120\":2,\"122\":1,\"123\":1,\"124\":3,\"125\":4,\"126\":2,\"144\":3,\"149\":1,\"150\":1,\"151\":2,\"162\":2,\"163\":2,\"165\":1,\"167\":1,\"168\":3,\"181\":2,\"187\":2,\"190\":1,\"192\":2,\"193\":1,\"194\":2,\"196\":2,\"202\":5,\"214\":1,\"216\":3,\"219\":2,\"234\":1,\"246\":1,\"266\":1,\"274\":1,\"282\":2,\"283\":1,\"285\":1,\"291\":1,\"297\":1,\"309\":5,\"312\":2,\"318\":1,\"320\":1,\"335\":1,\"356\":1,\"358\":1,\"365\":1,\"369\":1,\"374\":2,\"386\":1,\"389\":1,\"391\":1,\"393\":1,\"394\":1,\"436\":1,\"449\":2,\"453\":2,\"476\":1,\"479\":1,\"480\":1,\"510\":1,\"538\":1,\"550\":1}}],[\"1rpx\",{\"1\":{\"11\":1}}],[\"1rem\",{\"1\":{\"11\":2}}],[\"1vh\",{\"1\":{\"11\":1}}],[\"1vw\",{\"1\":{\"11\":1}}],[\"1em\",{\"1\":{\"11\":1}}],[\"111\",{\"1\":{\"166\":1}}],[\"11\",{\"0\":{\"58\":1,\"144\":1,\"165\":1,\"317\":1,\"336\":1,\"452\":1},\"1\":{\"6\":1,\"83\":1,\"124\":3}}],[\"默认还是web\",{\"1\":{\"532\":1}}],[\"默认打包模式\",{\"1\":{\"532\":1}}],[\"默认第一个参数\",{\"1\":{\"480\":1}}],[\"默认使用文件名作为组件\",{\"0\":{\"461\":1}}],[\"默认两种写法\",{\"1\":{\"460\":1}}],[\"默认不渲染元素\",{\"1\":{\"454\":1}}],[\"默认插槽\",{\"0\":{\"443\":1}}],[\"默认写法\",{\"1\":{\"364\":1}}],[\"默认写法和setup语法糖写法\",{\"1\":{\"364\":1}}],[\"默认参数不在\",{\"1\":{\"331\":1}}],[\"默认实例化属性和实例化方法需要先实例化\",{\"1\":{\"300\":1}}],[\"默认false\",{\"1\":{\"291\":18}}],[\"默认node\",{\"1\":{\"291\":1}}],[\"默认情况下\",{\"1\":{\"240\":1}}],[\"默认暴露\",{\"1\":{\"185\":3}}],[\"默认状态是\",{\"1\":{\"167\":1}}],[\"默认值\",{\"1\":{\"356\":8,\"443\":1}}],[\"默认值每个请求都会生效\",{\"1\":{\"355\":1}}],[\"默认值是\",{\"1\":{\"141\":1,\"356\":1}}],[\"默认值为0\",{\"1\":{\"35\":1}}],[\"默认是只读的\",{\"1\":{\"465\":1}}],[\"默认是顺时针\",{\"1\":{\"137\":1}}],[\"默认是1\",{\"1\":{\"105\":1,\"135\":1}}],[\"默认为黑色\",{\"1\":{\"135\":1,\"136\":2,\"138\":1,\"139\":2}}],[\"默认只能拍扁二维数组\",{\"1\":{\"105\":1}}],[\"默认会去重\",{\"1\":{\"76\":1}}],[\"默认方法访问权限是\",{\"1\":{\"27\":1}}],[\"默认修饰符\",{\"1\":{\"27\":1}}],[\"默认安装入口为\",{\"0\":{\"15\":1}}],[\"默认屏宽按照iphone6\",{\"1\":{\"11\":1}}],[\"默认\",{\"1\":{\"11\":1,\"338\":1}}],[\"默认相对父元素的font\",{\"1\":{\"11\":1}}],[\"默认相对父元素\",{\"1\":{\"11\":1}}],[\"甚至浏览器的默认大小\",{\"1\":{\"11\":1}}],[\"绝对单位\",{\"1\":{\"11\":1}}],[\"像素\",{\"1\":{\"11\":1}}],[\"plugin\",{\"0\":{\"531\":1},\"1\":{\"462\":1,\"527\":1,\"531\":2}}],[\"plugins\",{\"1\":{\"451\":2,\"531\":1}}],[\"plus\",{\"1\":{\"399\":3,\"400\":2}}],[\"placeholder=\",{\"1\":{\"432\":2}}],[\"plan\",{\"1\":{\"372\":1}}],[\"plan=private\",{\"1\":{\"372\":1}}],[\"plain\",{\"1\":{\"92\":1,\"356\":1}}],[\"p>\",{\"1\":{\"389\":1,\"419\":1,\"428\":1,\"453\":2,\"456\":1}}],[\"ps\",{\"1\":{\"289\":1}}],[\"pdf等文件\",{\"1\":{\"231\":1}}],[\"p2\",{\"1\":{\"206\":1}}],[\"p1\",{\"1\":{\"206\":1}}],[\"peer\",{\"1\":{\"397\":2,\"399\":1,\"400\":1}}],[\"persist\",{\"1\":{\"510\":1}}],[\"personemployee\",{\"1\":{\"323\":3}}],[\"person\",{\"1\":{\"205\":2,\"300\":4,\"303\":1,\"304\":1,\"323\":2}}],[\"performing\",{\"1\":{\"356\":1}}],[\"per\",{\"1\":{\"300\":3}}],[\"permanently\",{\"1\":{\"52\":1}}],[\"pending\",{\"1\":{\"167\":2}}],[\"picked\",{\"1\":{\"432\":3}}],[\"pick<type\",{\"1\":{\"324\":1}}],[\"pipe\",{\"1\":{\"354\":1}}],[\"pid\",{\"1\":{\"289\":1}}],[\"pinia\",{\"1\":{\"362\":1,\"363\":5,\"365\":2}}],[\"pinia状态管理store的核心组成\",{\"0\":{\"364\":1}}],[\"pinia状态管理\",{\"0\":{\"361\":1}}],[\"ping\",{\"1\":{\"228\":1}}],[\"pink\",{\"1\":{\"145\":1}}],[\"pineapple\",{\"1\":{\"127\":2}}],[\"pi\",{\"1\":{\"137\":1,\"138\":1,\"143\":1,\"145\":1,\"149\":1}}],[\"position\",{\"1\":{\"406\":1,\"412\":1}}],[\"postform\",{\"1\":{\"354\":1}}],[\"post请求\",{\"1\":{\"275\":1}}],[\"postmessage方案\",{\"0\":{\"285\":1}}],[\"postmessage2\",{\"1\":{\"219\":1}}],[\"postmessage\",{\"0\":{\"218\":1,\"219\":1,\"220\":1},\"1\":{\"218\":2,\"219\":1,\"220\":1,\"234\":2,\"285\":2}}],[\"post是非幂等\",{\"1\":{\"48\":1}}],[\"post是非幂等的\",{\"1\":{\"47\":1}}],[\"post和put都可以新增\",{\"1\":{\"48\":1}}],[\"post可能引入重复提交表单\",{\"1\":{\"47\":1}}],[\"post无限制\",{\"1\":{\"47\":1}}],[\"post数据在请求体中更加安全\",{\"1\":{\"47\":1}}],[\"post通过请求体传递\",{\"1\":{\"47\":1}}],[\"post\",{\"0\":{\"351\":1},\"1\":{\"45\":1,\"46\":1,\"89\":1,\"91\":1,\"355\":1,\"356\":3}}],[\"point3d\",{\"1\":{\"320\":1}}],[\"pong\",{\"1\":{\"228\":1}}],[\"port\",{\"1\":{\"220\":1,\"227\":2,\"286\":1,\"356\":1,\"398\":1}}],[\"pow\",{\"1\":{\"188\":1}}],[\"pop\",{\"0\":{\"116\":1},\"1\":{\"94\":1,\"116\":1,\"129\":1}}],[\"png\",{\"1\":{\"92\":1,\"151\":1,\"401\":2}}],[\"p\",{\"1\":{\"66\":4,\"167\":4}}],[\"pki\",{\"1\":{\"57\":1}}],[\"packoptions\",{\"1\":{\"548\":1}}],[\"package\",{\"1\":{\"25\":2,\"33\":1,\"39\":1,\"41\":1,\"356\":1,\"397\":1}}],[\"pages\",{\"1\":{\"553\":1}}],[\"pagesize\",{\"1\":{\"74\":4}}],[\"page\",{\"1\":{\"431\":1,\"542\":2,\"554\":1}}],[\"pagey\",{\"1\":{\"412\":2}}],[\"pagex\",{\"1\":{\"412\":2}}],[\"passive\",{\"1\":{\"430\":1}}],[\"pass\",{\"1\":{\"283\":1}}],[\"password\",{\"1\":{\"89\":1,\"356\":2}}],[\"pathmatch\",{\"1\":{\"385\":1,\"404\":1}}],[\"path\",{\"1\":{\"369\":2,\"371\":2,\"372\":3,\"373\":2,\"375\":1,\"376\":2,\"377\":1,\"382\":1,\"384\":2,\"385\":2,\"386\":1,\"403\":1,\"404\":1,\"521\":2,\"523\":2,\"528\":3,\"529\":5,\"530\":5,\"544\":1}}],[\"paths\",{\"1\":{\"215\":1}}],[\"path2d\",{\"1\":{\"149\":2}}],[\"pat\",{\"1\":{\"151\":1}}],[\"pat=\",{\"1\":{\"151\":1}}],[\"patchform\",{\"1\":{\"354\":1}}],[\"patch\",{\"1\":{\"89\":1,\"354\":1,\"356\":2}}],[\"patch请求\",{\"1\":{\"46\":2,\"49\":1}}],[\"param\",{\"1\":{\"356\":1}}],[\"paramsserializer\",{\"1\":{\"356\":1}}],[\"params\",{\"1\":{\"354\":1,\"356\":3,\"371\":1,\"372\":1,\"375\":2,\"403\":1,\"521\":3}}],[\"parameters<type>\",{\"1\":{\"324\":1}}],[\"parent\",{\"1\":{\"234\":1}}],[\"parsefloat\",{\"0\":{\"178\":1},\"1\":{\"178\":1}}],[\"parse\",{\"1\":{\"88\":1,\"256\":1,\"281\":1,\"288\":1}}],[\"parseint\",{\"0\":{\"178\":1},\"1\":{\"39\":2,\"178\":2}}],[\"partial<type>\",{\"1\":{\"324\":1}}],[\"partial\",{\"1\":{\"51\":1}}],[\"panel\",{\"1\":{\"39\":7}}],[\"publishedat\",{\"1\":{\"426\":1}}],[\"publicpath\",{\"1\":{\"515\":1}}],[\"publicpath属性配置为相对路径\",{\"1\":{\"515\":1}}],[\"public\",{\"1\":{\"25\":6,\"27\":6,\"30\":2,\"31\":2,\"32\":3,\"33\":6,\"39\":2,\"41\":2,\"58\":1,\"338\":1,\"397\":1}}],[\"push\",{\"0\":{\"117\":1,\"372\":1},\"1\":{\"94\":1,\"117\":1,\"129\":1,\"372\":7,\"373\":1,\"375\":1,\"393\":2,\"521\":2}}],[\"putform\",{\"1\":{\"354\":1}}],[\"put请求\",{\"1\":{\"49\":1}}],[\"put和patch都是给服务器发送修改资源\",{\"0\":{\"49\":1}}],[\"put和post都是给服务器发送新增资源\",{\"0\":{\"48\":1}}],[\"put是幂等的\",{\"1\":{\"48\":1}}],[\"put\",{\"0\":{\"352\":1},\"1\":{\"45\":1,\"46\":1,\"89\":1,\"356\":2}}],[\"puppy\",{\"1\":{\"31\":2,\"32\":5}}],[\"prevnode\",{\"1\":{\"449\":1}}],[\"prevvnode\",{\"1\":{\"448\":7}}],[\"prevent\",{\"1\":{\"406\":2,\"430\":1}}],[\"preset\",{\"1\":{\"185\":1}}],[\"precision\",{\"1\":{\"83\":1}}],[\"project\",{\"1\":{\"548\":1}}],[\"project<\",{\"1\":{\"215\":2}}],[\"process\",{\"1\":{\"513\":1}}],[\"pro\",{\"1\":{\"513\":1}}],[\"production\",{\"1\":{\"513\":1,\"532\":2}}],[\"provide提供数据\",{\"0\":{\"471\":1}}],[\"provide\",{\"1\":{\"470\":1,\"471\":4,\"498\":1}}],[\"progressevent\",{\"1\":{\"356\":2}}],[\"propg\",{\"1\":{\"440\":1}}],[\"propf\",{\"1\":{\"440\":1}}],[\"prop\",{\"1\":{\"440\":1}}],[\"properties\",{\"1\":{\"550\":1}}],[\"propertydescriptor\",{\"1\":{\"344\":1}}],[\"propertykey\",{\"1\":{\"344\":2}}],[\"prope\",{\"1\":{\"440\":1}}],[\"propd\",{\"1\":{\"440\":1}}],[\"propc\",{\"1\":{\"440\":1}}],[\"propb\",{\"1\":{\"440\":1}}],[\"propa\",{\"1\":{\"440\":1}}],[\"props和context\",{\"1\":{\"460\":1}}],[\"props\",{\"1\":{\"422\":1,\"434\":2,\"440\":10,\"441\":1,\"460\":2}}],[\"propname\",{\"1\":{\"318\":1}}],[\"proxydata\",{\"1\":{\"392\":1,\"393\":2}}],[\"proxy`\",{\"1\":{\"356\":2}}],[\"proxy\",{\"1\":{\"283\":1,\"284\":1,\"291\":1,\"356\":1,\"392\":1,\"463\":1,\"512\":1,\"513\":1}}],[\"promise对象的解构由async函数执行返回值决定\",{\"1\":{\"190\":1}}],[\"promise是es6引入的解决异步编程的新方法\",{\"1\":{\"167\":1}}],[\"promise\",{\"0\":{\"167\":1,\"206\":1},\"1\":{\"167\":3,\"190\":2,\"206\":2,\"243\":1,\"291\":2,\"356\":2,\"359\":2}}],[\"prototype\",{\"1\":{\"251\":1}}],[\"protocol\",{\"1\":{\"44\":1,\"356\":2}}],[\"protected\",{\"1\":{\"27\":4,\"338\":1}}],[\"pragma\",{\"1\":{\"58\":1}}],[\"printcarinfo\",{\"1\":{\"332\":1}}],[\"println\",{\"1\":{\"23\":1,\"24\":2,\"25\":2,\"32\":1,\"33\":4,\"35\":2,\"41\":4}}],[\"price\",{\"1\":{\"172\":2}}],[\"private只能单用户缓存\",{\"1\":{\"58\":1}}],[\"private\",{\"1\":{\"27\":4,\"338\":1,\"372\":1}}],[\"pxw5jd28z2rpv\",{\"1\":{\"223\":1}}],[\"px\",{\"1\":{\"11\":1,\"420\":2}}],[\"photo\",{\"1\":{\"173\":1}}],[\"photoshop\",{\"1\":{\"7\":1}}],[\"phone\",{\"1\":{\"171\":1,\"172\":3,\"173\":2,\"174\":1}}],[\"php\",{\"1\":{\"91\":1}}],[\"php后端语言\",{\"1\":{\"5\":1}}],[\"vite配置简单\",{\"1\":{\"537\":1}}],[\"vite在监听到文件发生变化时\",{\"1\":{\"535\":1}}],[\"vite运行项目时\",{\"1\":{\"534\":1}}],[\"vite\",{\"1\":{\"462\":1}}],[\"view>\",{\"1\":{\"408\":1,\"544\":1}}],[\"view><\",{\"1\":{\"408\":1}}],[\"view组件进行渲染子路由的内容\",{\"1\":{\"408\":1}}],[\"views\",{\"1\":{\"384\":3,\"403\":1,\"404\":1}}],[\"view\",{\"0\":{\"369\":1},\"1\":{\"80\":1,\"369\":1,\"523\":1}}],[\"vnode\",{\"1\":{\"448\":7,\"449\":3}}],[\"vfocus\",{\"1\":{\"447\":1}}],[\"version\",{\"1\":{\"54\":1,\"220\":1}}],[\"validator\",{\"1\":{\"440\":1}}],[\"validatestatus\",{\"1\":{\"356\":1}}],[\"val=>\",{\"1\":{\"167\":1,\"190\":1}}],[\"val\",{\"0\":{\"101\":1},\"1\":{\"167\":1,\"190\":1,\"392\":2,\"393\":2}}],[\"value访问\",{\"1\":{\"463\":1}}],[\"value=\",{\"1\":{\"432\":3,\"434\":1}}],[\"value++\",{\"1\":{\"364\":1,\"411\":1,\"434\":1,\"463\":1}}],[\"values\",{\"0\":{\"128\":1,\"192\":1},\"1\":{\"65\":2,\"128\":1,\"129\":1,\"192\":2,\"409\":2}}],[\"valueof\",{\"1\":{\"36\":1,\"39\":1}}],[\"valuek\",{\"1\":{\"35\":1}}],[\"value1\",{\"1\":{\"35\":1}}],[\"value0\",{\"1\":{\"35\":1}}],[\"value\",{\"1\":{\"34\":2,\"99\":5,\"113\":3,\"128\":3,\"165\":2,\"194\":4,\"248\":1,\"356\":1,\"364\":1,\"393\":3,\"394\":2,\"409\":3,\"411\":1,\"412\":4,\"426\":2,\"434\":1,\"436\":4,\"437\":2,\"440\":3,\"441\":2,\"449\":1,\"450\":3,\"460\":1,\"463\":1,\"465\":6,\"471\":1,\"472\":1,\"473\":1,\"548\":1}}],[\"var\",{\"1\":{\"88\":2,\"133\":2,\"134\":2,\"135\":2,\"136\":2,\"137\":2,\"138\":2,\"139\":7,\"140\":2,\"141\":2,\"142\":2,\"143\":2,\"144\":2,\"145\":2,\"146\":2,\"151\":1,\"194\":1,\"216\":2,\"234\":2,\"281\":2,\"356\":1,\"526\":4}}],[\"varbinary\",{\"1\":{\"83\":1}}],[\"varber2\",{\"1\":{\"25\":2}}],[\"varchar\",{\"1\":{\"64\":2,\"83\":3}}],[\"variable\",{\"1\":{\"30\":1}}],[\"varf\",{\"1\":{\"25\":6}}],[\"volatile\",{\"1\":{\"28\":1}}],[\"void空类型一般用于函数无返回结果的场景\",{\"1\":{\"311\":1}}],[\"void\",{\"0\":{\"311\":1},\"1\":{\"25\":4,\"30\":1,\"32\":1,\"33\":5,\"39\":1,\"41\":1,\"311\":1,\"320\":1,\"334\":1,\"339\":1}}],[\"v\",{\"0\":{\"424\":3,\"425\":1,\"435\":1},\"1\":{\"13\":2,\"165\":2,\"394\":4,\"397\":1,\"406\":1,\"416\":1,\"417\":3,\"424\":6,\"425\":2,\"426\":11,\"427\":1,\"432\":6,\"434\":3,\"435\":5,\"436\":2,\"437\":2,\"444\":2,\"445\":1,\"447\":3,\"449\":3,\"450\":2,\"453\":6,\"454\":1,\"456\":1,\"504\":1}}],[\"vm\",{\"1\":{\"393\":4}}],[\"vmeventkey\",{\"1\":{\"391\":4,\"393\":4,\"394\":4}}],[\"vmkey\",{\"1\":{\"389\":4,\"393\":10,\"394\":6}}],[\"vmax\",{\"1\":{\"11\":1}}],[\"vmin\",{\"1\":{\"11\":1}}],[\"vh\",{\"1\":{\"11\":1}}],[\"vw\",{\"1\":{\"11\":1}}],[\"vue路径如何传参\",{\"0\":{\"521\":1}}],[\"vue路由模式\",{\"0\":{\"518\":1}}],[\"vue路由\",{\"1\":{\"8\":1}}],[\"vuejs\",{\"1\":{\"513\":1}}],[\"vue根目录新建一个\",{\"1\":{\"512\":1}}],[\"vue项目设置代理是为了解决接口跨域问题\",{\"0\":{\"512\":1}}],[\"vue设置代理\",{\"0\":{\"511\":1}}],[\"vue如何封装组件\",{\"0\":{\"506\":1}}],[\"vuex如何做持久化存储\",{\"0\":{\"510\":1}}],[\"vuex数据时单向的还是双向的\",{\"0\":{\"509\":1}}],[\"vuex有哪些属性\",{\"0\":{\"508\":1}}],[\"vuex在vue3里面使用\",{\"0\":{\"484\":1}}],[\"vuex在vue2版本得到广泛使用\",{\"1\":{\"475\":1}}],[\"vuex的getter方法通过\",{\"1\":{\"482\":1}}],[\"vuex通过action的dispatch可以实现异步修改数据\",{\"1\":{\"481\":1}}],[\"vuex认为直接赋值修改数据不合法\",{\"1\":{\"479\":1}}],[\"vuex核心组成都有哪些\",{\"0\":{\"477\":1}}],[\"vuex是实现组件全局状态\",{\"1\":{\"475\":1}}],[\"vuex是什么\",{\"0\":{\"475\":1}}],[\"vuex\",{\"1\":{\"397\":1,\"476\":5,\"478\":1,\"480\":1,\"481\":1,\"482\":1,\"484\":1,\"509\":1,\"510\":1}}],[\"vuex状态管理\",{\"1\":{\"8\":1}}],[\"vue表单数据的响应式\",{\"0\":{\"394\":1}}],[\"vue双向绑定\",{\"0\":{\"393\":1}}],[\"vue数据劫持\",{\"0\":{\"392\":1}}],[\"vue的生命周期都有哪些\",{\"0\":{\"487\":1}}],[\"vue的双向绑定数据是在数据编译阶段对每一个模板变量创建一个监听器\",{\"1\":{\"393\":1}}],[\"vue的methods事件调用是在编译模板时获取到事件名\",{\"1\":{\"391\":1}}],[\"vue的server使用的代理转发解决跨域\",{\"1\":{\"284\":1}}],[\"vue事件添加实现\",{\"0\":{\"391\":1}}],[\"vue页面每次都会执行前4个生命周期\",{\"1\":{\"390\":1}}],[\"vue生命周期实现\",{\"0\":{\"390\":1}}],[\"vue模板解析实现\",{\"0\":{\"389\":1}}],[\"vue源码学习\",{\"0\":{\"388\":1}}],[\"vuerouter\",{\"1\":{\"369\":2,\"370\":2}}],[\"vue\",{\"0\":{\"397\":1},\"1\":{\"213\":1,\"284\":1,\"362\":1,\"363\":1,\"367\":2,\"369\":1,\"384\":3,\"397\":3,\"398\":1,\"400\":2,\"401\":3,\"403\":3,\"404\":1,\"407\":1,\"409\":1,\"411\":1,\"412\":3,\"422\":1,\"426\":1,\"434\":2,\"437\":2,\"439\":3,\"440\":1,\"441\":1,\"451\":2,\"455\":1,\"458\":1,\"460\":2,\"462\":1,\"463\":2,\"465\":1,\"471\":2,\"472\":1,\"473\":1,\"476\":3,\"484\":1,\"498\":1,\"512\":1,\"513\":6,\"515\":1,\"523\":1}}],[\"vue3兼容了vue2的写法\",{\"1\":{\"524\":1}}],[\"vue3使用pinia管理状态\",{\"1\":{\"475\":1}}],[\"vue3在setup函数中\",{\"1\":{\"460\":1}}],[\"vue3定义全局变量\",{\"1\":{\"458\":1}}],[\"vue3其他的生命周期函数在前面加on\",{\"1\":{\"458\":1}}],[\"vue3的生命周期函数移除了beforecreat和created阶段\",{\"1\":{\"458\":1}}],[\"vue3的数据劫持是通过\",{\"1\":{\"392\":1}}],[\"vue3里面的选择器ref定义需要和模板名字同名\",{\"1\":{\"437\":1}}],[\"vue3自定义ref\",{\"0\":{\"409\":1}}],[\"vue3嵌套路由配置之后\",{\"0\":{\"408\":1}}],[\"vue3添加debugger无效\",{\"0\":{\"407\":1}}],[\"vue3不能使用require引入图片\",{\"1\":{\"401\":1}}],[\"vue3环境安装篇\",{\"0\":{\"396\":1}}],[\"vue3\",{\"1\":{\"8\":1,\"370\":1,\"385\":1,\"411\":1,\"426\":1,\"460\":2,\"524\":1}}],[\"vue2生命周期\",{\"0\":{\"486\":1}}],[\"vue2x\",{\"1\":{\"411\":1}}],[\"vue2的数据劫持是通过\",{\"1\":{\"392\":1}}],[\"vue2路由指定模式\",{\"1\":{\"370\":1}}],[\"vue2\",{\"1\":{\"8\":1,\"385\":1}}],[\"vscode\",{\"1\":{\"7\":1}}],[\"墨刀\",{\"1\":{\"7\":1}}],[\"wx\",{\"1\":{\"542\":1,\"543\":4,\"545\":1,\"551\":1,\"552\":2,\"553\":1}}],[\"wrapper\",{\"1\":{\"417\":1}}],[\"writable\",{\"1\":{\"194\":4,\"248\":1,\"250\":1}}],[\"watevent\",{\"1\":{\"468\":2}}],[\"watcheffect会自动追踪其内部回调函数中使用的任何响应式数据\",{\"1\":{\"469\":1}}],[\"watcheffect\",{\"0\":{\"469\":1},\"1\":{\"469\":3}}],[\"watch创建时返回的是一个函数\",{\"1\":{\"468\":1}}],[\"watch不能监听响应式对象的属性值\",{\"1\":{\"466\":1}}],[\"watch\",{\"0\":{\"466\":1},\"1\":{\"393\":5,\"466\":2}}],[\"warning\",{\"1\":{\"440\":1}}],[\"wait状态\",{\"1\":{\"59\":1}}],[\"wait\",{\"1\":{\"59\":2}}],[\"work\",{\"1\":{\"233\":1,\"234\":3}}],[\"worker\",{\"1\":{\"234\":1}}],[\"worker用于创建子线程\",{\"1\":{\"230\":1}}],[\"worker对象\",{\"0\":{\"230\":1}}],[\"world\",{\"1\":{\"30\":1}}],[\"ws真好用\",{\"1\":{\"227\":1}}],[\"wss\",{\"1\":{\"227\":2}}],[\"ws\",{\"1\":{\"227\":11,\"228\":1,\"286\":6}}],[\"wellknown\",{\"1\":{\"291\":1}}],[\"weight\",{\"1\":{\"205\":4}}],[\"webpack和vite由于原理上不同\",{\"1\":{\"536\":1}}],[\"webpack和vite打包的区别\",{\"0\":{\"533\":1}}],[\"webpack项目中\",{\"1\":{\"535\":1}}],[\"webpack编译打包时\",{\"1\":{\"534\":1}}],[\"webpack的核心功能有哪些\",{\"0\":{\"527\":1}}],[\"webpack原理\",{\"1\":{\"526\":1}}],[\"webpack有什么用\",{\"0\":{\"526\":1}}],[\"webpack\",{\"1\":{\"525\":2,\"526\":1,\"531\":4}}],[\"webpack配置复杂度更高\",{\"1\":{\"537\":1}}],[\"webpack配置\",{\"1\":{\"8\":1}}],[\"webapck命令\",{\"1\":{\"525\":1}}],[\"webkit\",{\"1\":{\"420\":1}}],[\"webworker\",{\"1\":{\"291\":1}}],[\"web\",{\"1\":{\"274\":1}}],[\"websocket服务\",{\"1\":{\"286\":1}}],[\"websocket方案\",{\"0\":{\"286\":1}}],[\"websocket方法\",{\"1\":{\"226\":1}}],[\"websocket接受到服务端消息\",{\"1\":{\"228\":1}}],[\"websocket建立连接成功\",{\"1\":{\"228\":1}}],[\"websocket的心跳机制\",{\"0\":{\"228\":1}}],[\"websocket的缺点\",{\"0\":{\"225\":1}}],[\"websocket配置开始端口服务\",{\"1\":{\"227\":1}}],[\"websocket通信的最小单位是\",{\"1\":{\"227\":1}}],[\"websocket事件方法有\",{\"0\":{\"226\":1}}],[\"websocket\",{\"1\":{\"223\":3,\"227\":4,\"228\":5,\"286\":3}}],[\"websocket是一种协议\",{\"1\":{\"222\":1}}],[\"websocket是什么\",{\"0\":{\"222\":1}}],[\"webstorm\",{\"1\":{\"7\":1}}],[\"white\",{\"1\":{\"450\":2}}],[\"while\",{\"1\":{\"33\":2}}],[\"while循环\",{\"1\":{\"33\":4}}],[\"whether\",{\"1\":{\"356\":1}}],[\"when\",{\"1\":{\"356\":1}}],[\"whenready\",{\"1\":{\"18\":1}}],[\"where\",{\"0\":{\"68\":1},\"1\":{\"65\":5,\"68\":4,\"69\":1,\"70\":3,\"71\":4,\"72\":3,\"75\":1,\"76\":6,\"77\":4}}],[\"withcredentials\",{\"1\":{\"356\":1,\"551\":1}}],[\"with\",{\"1\":{\"356\":1}}],[\"will\",{\"1\":{\"259\":1,\"356\":1}}],[\"widh\",{\"1\":{\"134\":1}}],[\"widthfix\",{\"1\":{\"546\":1}}],[\"width=\",{\"1\":{\"133\":1,\"219\":1}}],[\"width\",{\"1\":{\"18\":1,\"134\":1}}],[\"windows\",{\"1\":{\"326\":1}}],[\"window\",{\"1\":{\"218\":1,\"219\":1,\"234\":1,\"285\":2,\"347\":1,\"412\":4,\"554\":1}}],[\"window对象\",{\"1\":{\"210\":1}}],[\"win\",{\"1\":{\"18\":2}}],[\"www\",{\"1\":{\"5\":1,\"91\":1,\"92\":1,\"355\":1,\"356\":1}}],[\"how\",{\"1\":{\"426\":1}}],[\"homeview\",{\"1\":{\"386\":1}}],[\"homepage\",{\"1\":{\"376\":1,\"377\":1}}],[\"home\",{\"1\":{\"369\":2,\"373\":2,\"376\":2,\"377\":1,\"386\":1}}],[\"horizonte\",{\"1\":{\"356\":1}}],[\"host2\",{\"1\":{\"207\":1}}],[\"host\",{\"1\":{\"207\":4,\"356\":1,\"398\":1}}],[\"href\",{\"1\":{\"270\":1}}],[\"h1>\",{\"1\":{\"215\":1,\"389\":1,\"391\":1,\"393\":1,\"439\":1}}],[\"hd\",{\"1\":{\"151\":1}}],[\"hhhhhh\",{\"1\":{\"460\":1}}],[\"hhmmss\",{\"1\":{\"83\":1}}],[\"hh\",{\"1\":{\"83\":2}}],[\"handler\",{\"1\":{\"392\":1}}],[\"handle\",{\"1\":{\"354\":1}}],[\"hanging\",{\"1\":{\"141\":1}}],[\"haserror\",{\"1\":{\"419\":2}}],[\"hasownproperty\",{\"1\":{\"393\":1,\"394\":1}}],[\"hasattribute\",{\"1\":{\"391\":2,\"393\":1,\"394\":2}}],[\"hash不会发送请求\",{\"1\":{\"519\":1}}],[\"hash模式\",{\"1\":{\"367\":1,\"370\":1,\"516\":1}}],[\"hash\",{\"0\":{\"517\":1},\"1\":{\"367\":1,\"369\":1,\"370\":1,\"372\":2,\"516\":1,\"519\":2}}],[\"has\",{\"1\":{\"168\":1,\"169\":1}}],[\"having\",{\"1\":{\"76\":2}}],[\"hahhah\",{\"1\":{\"36\":1}}],[\"hypertext\",{\"1\":{\"44\":1}}],[\"here\",{\"1\":{\"453\":1}}],[\"heartcheck\",{\"1\":{\"228\":5}}],[\"header=\",{\"1\":{\"446\":1,\"505\":1}}],[\"header>\",{\"1\":{\"444\":2,\"504\":3}}],[\"header\",{\"1\":{\"283\":1,\"356\":1,\"357\":1,\"444\":3,\"446\":1,\"504\":3,\"505\":1}}],[\"headers\",{\"1\":{\"282\":1,\"355\":3,\"356\":2,\"357\":2}}],[\"head>\",{\"1\":{\"215\":1,\"216\":1}}],[\"head\",{\"1\":{\"45\":1,\"46\":1,\"354\":1}}],[\"hello<\",{\"1\":{\"429\":1}}],[\"hellohbuilder\",{\"1\":{\"219\":1}}],[\"hello\",{\"1\":{\"30\":1,\"208\":2,\"216\":1,\"220\":1,\"228\":1,\"291\":1,\"308\":1,\"429\":1,\"440\":1,\"446\":1,\"450\":2,\"453\":1,\"469\":1,\"471\":2}}],[\"height=\",{\"1\":{\"133\":1}}],[\"height\",{\"1\":{\"18\":1,\"134\":2}}],[\"hidden\",{\"1\":{\"552\":2}}],[\"hidden使用的理解\",{\"0\":{\"552\":1}}],[\"hivue\",{\"1\":{\"460\":1}}],[\"history遇到404不存在的路径会发起跳转请求\",{\"1\":{\"519\":1}}],[\"history没有\",{\"1\":{\"519\":1}}],[\"history和hash\",{\"1\":{\"519\":1}}],[\"history模式\",{\"1\":{\"367\":1,\"370\":1}}],[\"history\",{\"0\":{\"517\":1},\"1\":{\"367\":1,\"369\":2,\"370\":4,\"516\":1}}],[\"hi\",{\"1\":{\"23\":1,\"36\":2,\"184\":1,\"286\":1,\"315\":2,\"321\":3}}],[\"hbuilder\",{\"1\":{\"7\":1}}],[\"htop\",{\"1\":{\"289\":1}}],[\"hti51a1ks2hti=\",{\"1\":{\"223\":1}}],[\"httpagent\",{\"1\":{\"356\":1}}],[\"http状态码是\",{\"1\":{\"356\":1}}],[\"http缓存的了解\",{\"0\":{\"58\":1}}],[\"http协议的数据都是明文进行传输的\",{\"1\":{\"57\":1}}],[\"http协议概述\",{\"0\":{\"44\":1}}],[\"http是短连接\",{\"1\":{\"56\":1}}],[\"http是无状态协议\",{\"1\":{\"44\":1}}],[\"http的keep\",{\"0\":{\"56\":1}}],[\"http1\",{\"1\":{\"45\":2,\"55\":1,\"56\":1,\"58\":1}}],[\"http请求方式有哪些\",{\"0\":{\"45\":1}}],[\"http\",{\"1\":{\"44\":1,\"46\":1,\"53\":1,\"54\":2,\"58\":1,\"60\":2,\"88\":1,\"190\":2,\"219\":2,\"220\":4,\"272\":1,\"281\":1,\"282\":1,\"283\":1,\"284\":1,\"285\":4,\"290\":2,\"356\":5,\"357\":2,\"512\":1,\"513\":2}}],[\"http知识\",{\"0\":{\"43\":1}}],[\"httpsagent\",{\"1\":{\"356\":1}}],[\"https能够确保这些信息在传输过程中得到保护\",{\"1\":{\"57\":1}}],[\"https通过数字证书和公钥基础设施\",{\"1\":{\"57\":1}}],[\"https在http的基础上增加了一层安全层\",{\"1\":{\"57\":1}}],[\"https\",{\"1\":{\"5\":1,\"215\":1,\"216\":1,\"220\":1,\"290\":1,\"293\":1,\"355\":2,\"356\":7,\"513\":1}}],[\"html通过data\",{\"1\":{\"544\":1}}],[\"htmlwebpackplugin\",{\"1\":{\"531\":2}}],[\"html=\",{\"1\":{\"416\":2}}],[\"html插入一段html代码\",{\"1\":{\"416\":1}}],[\"html代码\",{\"0\":{\"416\":1}}],[\"htmlanchorelement\",{\"1\":{\"315\":2}}],[\"html解析遇到js代码会怎么处理\",{\"1\":{\"256\":1}}],[\"html解析\",{\"0\":{\"256\":1},\"1\":{\"255\":1,\"256\":1}}],[\"html字符串渲染成像素\",{\"1\":{\"254\":1}}],[\"html>\",{\"1\":{\"215\":2,\"216\":2}}],[\"html页面引入requirejs\",{\"1\":{\"215\":1}}],[\"html页面中\",{\"1\":{\"88\":1}}],[\"html\",{\"0\":{\"18\":1},\"1\":{\"4\":1,\"18\":1,\"92\":2,\"219\":1,\"240\":1,\"256\":1,\"270\":1,\"531\":3}}],[\"开发文件内容\",{\"1\":{\"513\":1}}],[\"开发环境\",{\"1\":{\"513\":1,\"532\":1}}],[\"开发ide\",{\"1\":{\"7\":1}}],[\"开头\",{\"1\":{\"412\":1}}],[\"开头且以\",{\"1\":{\"363\":1}}],[\"开启首次监听\",{\"1\":{\"466\":1}}],[\"开启装饰器\",{\"1\":{\"344\":1}}],[\"开启通信\",{\"1\":{\"226\":1,\"227\":1}}],[\"开始攻击\",{\"1\":{\"271\":1}}],[\"开始创建路径beginpath\",{\"1\":{\"135\":1}}],[\"开始缩减\",{\"1\":{\"118\":1}}],[\"开始查询n条记录\",{\"1\":{\"74\":1}}],[\"开辟了一个长度为3的数组\",{\"1\":{\"35\":1}}],[\"开源了几个wordpress博客主题\",{\"1\":{\"5\":1}}],[\"培训内容\",{\"1\":{\"6\":1}}],[\"培训经历\",{\"0\":{\"6\":1}}],[\"吸取经验\",{\"1\":{\"5\":1}}],[\"善于总结\",{\"1\":{\"5\":1}}],[\"go\",{\"0\":{\"374\":1},\"1\":{\"374\":5}}],[\"good\",{\"1\":{\"251\":1}}],[\"goods\",{\"1\":{\"166\":2}}],[\"g\",{\"1\":{\"290\":1,\"294\":1,\"356\":2,\"389\":1,\"393\":1,\"397\":1}}],[\"globaldata\",{\"1\":{\"541\":1}}],[\"globalproperties\",{\"1\":{\"458\":1}}],[\"global\",{\"1\":{\"347\":1}}],[\"global为全局对象window增加新的属性\",{\"1\":{\"347\":1}}],[\"globalthis\",{\"0\":{\"210\":1},\"1\":{\"210\":1}}],[\"globalcompositeoperation\",{\"0\":{\"146\":1},\"1\":{\"146\":2}}],[\"generics\",{\"0\":{\"321\":1}}],[\"generator\",{\"0\":{\"166\":1},\"1\":{\"291\":1}}],[\"gen\",{\"1\":{\"166\":6}}],[\"getstoragesync\",{\"1\":{\"542\":1}}],[\"getattribute\",{\"1\":{\"391\":2,\"393\":1,\"394\":2}}],[\"getitem\",{\"1\":{\"386\":1}}],[\"getjsonpdata\",{\"1\":{\"281\":1}}],[\"get请求\",{\"1\":{\"275\":1,\"354\":1}}],[\"get请求参数通过url能获取到不安全\",{\"1\":{\"47\":1}}],[\"getcount\",{\"1\":{\"482\":6}}],[\"getcomputedstyle\",{\"1\":{\"257\":1}}],[\"getcontext\",{\"1\":{\"133\":2,\"134\":2,\"135\":2,\"136\":2,\"137\":2,\"138\":2,\"139\":4,\"140\":2,\"141\":2,\"142\":2,\"143\":2,\"144\":2,\"145\":2,\"146\":2}}],[\"getter时也从localstorage里面取\",{\"1\":{\"510\":1}}],[\"getter函数\",{\"1\":{\"467\":1}}],[\"getter和setter来创建\",{\"1\":{\"465\":1}}],[\"getters\",{\"1\":{\"364\":2,\"482\":3,\"483\":1,\"484\":1,\"508\":1}}],[\"getter的this指向当前getter对象\",{\"1\":{\"364\":1}}],[\"getter\",{\"0\":{\"482\":1},\"1\":{\"248\":1,\"364\":3,\"465\":1,\"466\":1,\"473\":2,\"477\":1,\"482\":2,\"483\":1,\"484\":1}}],[\"gettext\",{\"1\":{\"39\":2}}],[\"getownpropertydescriptor\",{\"1\":{\"194\":1,\"248\":2}}],[\"getownpropertydescriptors\",{\"0\":{\"194\":1,\"249\":1},\"1\":{\"194\":2,\"249\":1}}],[\"getorder\",{\"1\":{\"166\":2}}],[\"getprototypeof\",{\"1\":{\"184\":1}}],[\"getgoods\",{\"1\":{\"166\":2}}],[\"getuserinfo\",{\"1\":{\"551\":1}}],[\"getuser\",{\"1\":{\"166\":2}}],[\"getelementbyid\",{\"1\":{\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":2,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1,\"219\":1,\"281\":1,\"315\":1}}],[\"get是安全且幂等\",{\"1\":{\"47\":1}}],[\"get刷新回退是无害了\",{\"1\":{\"47\":1}}],[\"get只允许ascii字符\",{\"1\":{\"47\":1}}],[\"get通过url传递数据\",{\"1\":{\"47\":1}}],[\"get和post有什么区别\",{\"0\":{\"47\":1}}],[\"get\",{\"0\":{\"350\":1},\"1\":{\"45\":1,\"46\":1,\"52\":1,\"88\":1,\"89\":1,\"169\":2,\"171\":1,\"174\":1,\"190\":1,\"290\":1,\"354\":3,\"356\":1,\"358\":6,\"392\":2,\"393\":1,\"409\":1,\"465\":1}}],[\"gir\",{\"1\":{\"205\":1}}],[\"gif\",{\"1\":{\"92\":1,\"401\":1}}],[\"github\",{\"1\":{\"5\":1,\"216\":1}}],[\"group\",{\"1\":{\"76\":3}}],[\"gmt\",{\"1\":{\"58\":1}}],[\"ghchenjingqi\",{\"1\":{\"5\":1}}],[\"爱折腾\",{\"1\":{\"5\":1}}],[\"有更高的初始渲染消耗\",{\"1\":{\"552\":1}}],[\"有更高的切换消耗\",{\"1\":{\"552\":1}}],[\"有名字插槽\",{\"1\":{\"504\":1}}],[\"有数据传递时显示传递的数据\",{\"1\":{\"443\":1}}],[\"有点类似vue2里面的混入\",{\"1\":{\"412\":1}}],[\"有点类似map\",{\"1\":{\"106\":1}}],[\"有就用\",{\"1\":{\"391\":1}}],[\"有一个叫\",{\"1\":{\"344\":1}}],[\"有一个满足就返回true\",{\"1\":{\"123\":1}}],[\"有巨大的用处\",{\"1\":{\"344\":1}}],[\"有了命名空间后\",{\"1\":{\"337\":1}}],[\"有了它\",{\"1\":{\"291\":1}}],[\"有什么作用\",{\"0\":{\"332\":1}}],[\"有什么区别\",{\"0\":{\"48\":1,\"49\":1}}],[\"有符号\",{\"1\":{\"83\":1}}],[\"有值空白符\",{\"1\":{\"72\":1}}],[\"有助于前端处理数据和逻辑功能开发\",{\"1\":{\"5\":1}}],[\"有设计经验\",{\"1\":{\"5\":1}}],[\"了解c\",{\"1\":{\"5\":1}}],[\"零沟通障碍\",{\"1\":{\"5\":1}}],[\"能够实现诸如依赖注入等高级概念\",{\"1\":{\"344\":1}}],[\"能实现es5的类各种功能\",{\"1\":{\"170\":1}}],[\"能独立完成开发建站工作\",{\"1\":{\"5\":1}}],[\"能基于php二次开发项目\",{\"1\":{\"5\":1}}],[\"能快速了解设计师的需求\",{\"1\":{\"5\":1}}],[\"能做什么\",{\"0\":{\"3\":1}}],[\"slot\",{\"0\":{\"442\":1,\"502\":1},\"1\":{\"444\":2,\"445\":1,\"504\":1}}],[\"slot>\",{\"1\":{\"406\":1,\"443\":2,\"444\":3,\"446\":1,\"504\":3}}],[\"slice\",{\"0\":{\"122\":1},\"1\":{\"94\":1,\"122\":2,\"129\":1,\"436\":1}}],[\"s00pers3cret\",{\"1\":{\"356\":1}}],[\"skill\",{\"1\":{\"289\":1}}],[\"s4\",{\"1\":{\"164\":2}}],[\"s3\",{\"1\":{\"164\":2}}],[\"s2\",{\"1\":{\"164\":2}}],[\"s1\",{\"1\":{\"164\":2}}],[\"src=\",{\"1\":{\"215\":1,\"216\":1,\"219\":1,\"220\":1,\"285\":1}}],[\"src\",{\"1\":{\"151\":1,\"185\":7,\"270\":1,\"281\":1,\"291\":2,\"397\":1,\"526\":2,\"528\":1,\"531\":1}}],[\"svg是矢量图形\",{\"1\":{\"132\":1}}],[\"svg使用xml描述2d图形\",{\"1\":{\"132\":1}}],[\"sock\",{\"1\":{\"356\":1}}],[\"socketpath\",{\"1\":{\"356\":1}}],[\"socketio\",{\"1\":{\"220\":2}}],[\"socket\",{\"1\":{\"220\":12,\"228\":8,\"286\":3}}],[\"sourcemap\",{\"1\":{\"291\":1}}],[\"source\",{\"1\":{\"146\":5,\"285\":3,\"407\":1}}],[\"something<\",{\"1\":{\"431\":1}}],[\"some\",{\"0\":{\"123\":1},\"1\":{\"123\":1,\"129\":1,\"356\":1,\"453\":1}}],[\"sort\",{\"0\":{\"124\":1},\"1\":{\"35\":2,\"124\":2,\"129\":1,\"234\":3}}],[\"sharedmemory\",{\"1\":{\"291\":1}}],[\"shangsan\",{\"1\":{\"200\":2}}],[\"shift\",{\"0\":{\"121\":1},\"1\":{\"94\":1,\"121\":1,\"129\":1}}],[\"should\",{\"1\":{\"356\":1}}],[\"show是通过元素的display属性控制显示隐藏的\",{\"1\":{\"425\":1}}],[\"show不能写在template上\",{\"1\":{\"425\":1}}],[\"show\",{\"0\":{\"425\":1},\"1\":{\"63\":1,\"453\":4}}],[\"short\",{\"1\":{\"23\":1,\"24\":1}}],[\"smallint\",{\"1\":{\"83\":2}}],[\"sql里面的null和任何都不相等\",{\"1\":{\"72\":1}}],[\"sql文件中\",{\"1\":{\"66\":1}}],[\"sql\",{\"1\":{\"66\":4}}],[\"side\",{\"1\":{\"356\":1}}],[\"site\",{\"1\":{\"269\":1,\"274\":1}}],[\"sign\",{\"0\":{\"181\":1},\"1\":{\"181\":3}}],[\"since\",{\"1\":{\"58\":2}}],[\"size\",{\"1\":{\"11\":1,\"168\":2,\"169\":1,\"173\":3,\"420\":1}}],[\"suspense>\",{\"1\":{\"457\":1}}],[\"suspense\",{\"0\":{\"457\":1},\"1\":{\"457\":2}}],[\"success\",{\"1\":{\"354\":1,\"440\":1}}],[\"sudo\",{\"1\":{\"289\":3}}],[\"submit\",{\"1\":{\"431\":1,\"443\":2}}],[\"sub\",{\"1\":{\"214\":2}}],[\"substring\",{\"1\":{\"36\":1}}],[\"super\",{\"1\":{\"173\":1,\"303\":2}}],[\"supported\",{\"1\":{\"54\":1}}],[\"sum\",{\"1\":{\"76\":1}}],[\"semi\",{\"1\":{\"405\":1}}],[\"semicolon\",{\"1\":{\"405\":1}}],[\"session\",{\"1\":{\"274\":1}}],[\"sessionid\",{\"1\":{\"269\":1}}],[\"self=\",{\"1\":{\"406\":1}}],[\"self\",{\"1\":{\"230\":1,\"233\":1,\"234\":3,\"406\":1,\"430\":1}}],[\"select>\",{\"1\":{\"432\":1}}],[\"selected\",{\"1\":{\"432\":2}}],[\"select\",{\"1\":{\"65\":3,\"68\":4,\"69\":1,\"70\":3,\"71\":4,\"72\":3,\"73\":3,\"74\":3,\"75\":2,\"76\":11,\"77\":7,\"78\":3,\"80\":1,\"432\":1}}],[\"sec\",{\"1\":{\"223\":1}}],[\"seal\",{\"0\":{\"252\":1},\"1\":{\"252\":1}}],[\"sea\",{\"1\":{\"213\":1,\"216\":4}}],[\"seajs\",{\"1\":{\"185\":1,\"216\":6}}],[\"serif\",{\"1\":{\"141\":1}}],[\"servertimer\",{\"1\":{\"228\":5}}],[\"servertimeout\",{\"1\":{\"228\":2}}],[\"server\",{\"1\":{\"220\":5,\"227\":1,\"228\":1,\"281\":1,\"282\":1,\"283\":1,\"286\":4}}],[\"server端收到client端的ack报文段以后\",{\"1\":{\"59\":1}}],[\"server端收到了client端发送的fin报文段\",{\"1\":{\"59\":1}}],[\"server端向client端发送标志位是fin的报文段\",{\"1\":{\"59\":1}}],[\"server端告诉client端\",{\"1\":{\"59\":1}}],[\"service\",{\"1\":{\"54\":1,\"398\":1}}],[\"separator是分隔符\",{\"1\":{\"112\":1}}],[\"separator\",{\"0\":{\"112\":1}}],[\"sendtoanalytics\",{\"1\":{\"381\":1}}],[\"send\",{\"1\":{\"88\":2,\"91\":1,\"190\":1,\"226\":1,\"227\":2,\"228\":2,\"286\":2}}],[\"sex\",{\"1\":{\"64\":1,\"65\":1,\"68\":3,\"72\":3,\"76\":6,\"184\":1,\"192\":2,\"193\":1,\"194\":2,\"196\":2,\"200\":2,\"300\":2,\"303\":4,\"317\":3,\"318\":1,\"320\":2}}],[\"sever\",{\"1\":{\"54\":1}}],[\"see\",{\"1\":{\"52\":1,\"356\":1}}],[\"setdata\",{\"1\":{\"542\":1}}],[\"setdata方法\",{\"1\":{\"542\":1}}],[\"setdefaultcloseoperation\",{\"1\":{\"39\":1}}],[\"setitem\",{\"1\":{\"510\":1}}],[\"setup的this指向\",{\"1\":{\"524\":1}}],[\"setup的声明周期函数早于\",{\"1\":{\"524\":1}}],[\"setup函数可以跟data\",{\"0\":{\"524\":1}}],[\"setup返回值有2种\",{\"1\":{\"460\":1}}],[\"setup在解析其它组件选项之前被调用\",{\"1\":{\"460\":1}}],[\"setup\",{\"0\":{\"460\":1},\"1\":{\"403\":1,\"422\":1,\"439\":1,\"440\":1,\"441\":1,\"447\":1,\"458\":1,\"460\":3,\"462\":2,\"484\":1,\"524\":2}}],[\"setup>搭配使用\",{\"1\":{\"411\":1}}],[\"setup>\",{\"1\":{\"365\":1,\"411\":1,\"412\":1,\"421\":1,\"422\":1,\"434\":2,\"435\":1,\"436\":1,\"437\":2,\"439\":2,\"440\":1,\"441\":2,\"447\":1,\"455\":1,\"460\":1,\"463\":1,\"465\":1,\"471\":1,\"472\":1}}],[\"setup语法糖写法\",{\"1\":{\"364\":1}}],[\"set方法等\",{\"1\":{\"344\":1}}],[\"set和map变成数组\",{\"1\":{\"288\":1}}],[\"setheader\",{\"1\":{\"282\":2}}],[\"settimeout\",{\"1\":{\"228\":2,\"241\":1,\"409\":1,\"481\":1,\"491\":1}}],[\"setter通过localstorage\",{\"1\":{\"510\":1}}],[\"setter\",{\"1\":{\"248\":1,\"465\":1}}],[\"setter方法用于监听类属性读取和改变时\",{\"1\":{\"174\":1}}],[\"settext\",{\"1\":{\"39\":1}}],[\"setprototypeof\",{\"1\":{\"184\":3}}],[\"set集合\",{\"1\":{\"168\":1,\"464\":1}}],[\"setlinedash\",{\"1\":{\"140\":2}}],[\"setlayout\",{\"1\":{\"39\":1}}],[\"setrequestheader\",{\"0\":{\"91\":1},\"1\":{\"91\":1}}],[\"set\",{\"0\":{\"168\":1},\"1\":{\"65\":3,\"83\":1,\"108\":1,\"165\":1,\"168\":3,\"169\":3,\"171\":1,\"174\":1,\"216\":1,\"288\":1,\"290\":4,\"356\":1,\"392\":2,\"393\":1,\"409\":1,\"436\":1,\"465\":1}}],[\"setvisible\",{\"1\":{\"39\":1}}],[\"setbounds\",{\"1\":{\"39\":5}}],[\"scripthost\",{\"1\":{\"291\":1}}],[\"scripting\",{\"1\":{\"269\":1}}],[\"script>\",{\"1\":{\"185\":1,\"215\":1,\"216\":2,\"219\":1,\"220\":1,\"281\":1,\"285\":1,\"365\":1,\"389\":1,\"391\":1,\"393\":1,\"411\":1,\"412\":1,\"421\":1,\"422\":1,\"434\":2,\"435\":1,\"436\":1,\"437\":2,\"439\":2,\"440\":1,\"441\":2,\"447\":1,\"455\":1,\"460\":3,\"462\":1,\"463\":1,\"465\":1,\"471\":1,\"472\":1,\"524\":1}}],[\"script\",{\"1\":{\"185\":1,\"270\":1,\"281\":6,\"462\":1}}],[\"scripts\",{\"1\":{\"17\":1,\"215\":1}}],[\"school2\",{\"1\":{\"185\":1}}],[\"school\",{\"1\":{\"184\":4,\"185\":8}}],[\"scaletofill\",{\"1\":{\"546\":1}}],[\"scale\",{\"1\":{\"151\":2,\"453\":3}}],[\"scanner\",{\"1\":{\"41\":3}}],[\"scannerdemo\",{\"1\":{\"41\":2}}],[\"scanner类的使用\",{\"0\":{\"41\":1}}],[\"sc\",{\"1\":{\"41\":3}}],[\"swing\",{\"1\":{\"39\":1}}],[\"switchtab\",{\"1\":{\"543\":1,\"553\":1}}],[\"switch\",{\"1\":{\"34\":1}}],[\"switch语句\",{\"1\":{\"34\":1}}],[\"swiper等第三方插件\",{\"1\":{\"4\":1}}],[\"ssl\",{\"1\":{\"290\":1}}],[\"sss\",{\"1\":{\"192\":2,\"193\":1,\"194\":2}}],[\"ss\",{\"1\":{\"33\":1,\"83\":2,\"187\":3,\"389\":2,\"391\":1}}],[\"s+n\",{\"1\":{\"33\":2}}],[\"s=0\",{\"1\":{\"33\":1}}],[\"s=\",{\"1\":{\"33\":2}}],[\"s\",{\"1\":{\"33\":7,\"59\":1,\"108\":1,\"164\":1,\"168\":5,\"203\":2,\"227\":1,\"315\":4}}],[\"symbol的也会丢失\",{\"1\":{\"288\":1}}],[\"symbolde描述其实就是symbol的值\",{\"1\":{\"203\":1}}],[\"symbol\",{\"0\":{\"203\":1},\"1\":{\"164\":5,\"165\":3,\"203\":1,\"291\":3,\"334\":2}}],[\"symbol定义的对象不能用for循环\",{\"1\":{\"164\":1}}],[\"symbol值不能进行运算\",{\"1\":{\"164\":1}}],[\"symbol值唯一\",{\"1\":{\"164\":1}}],[\"synchronized\",{\"1\":{\"28\":1}}],[\"system\",{\"1\":{\"23\":1,\"24\":2,\"25\":2,\"32\":1,\"33\":4,\"35\":2,\"41\":5,\"291\":2}}],[\"spa是单页面应用\",{\"1\":{\"520\":1}}],[\"span><\",{\"1\":{\"416\":2}}],[\"span>\",{\"1\":{\"415\":1,\"419\":1}}],[\"spread\",{\"1\":{\"358\":1}}],[\"spread接收\",{\"1\":{\"358\":1}}],[\"spinning\",{\"1\":{\"216\":2}}],[\"splice\",{\"0\":{\"125\":1},\"1\":{\"125\":2,\"129\":1}}],[\"split\",{\"1\":{\"36\":1,\"465\":1}}],[\"sp\",{\"1\":{\"27\":2}}],[\"speaker\",{\"1\":{\"27\":2}}],[\"step\",{\"1\":{\"480\":1}}],[\"stoppulldownrefresh\",{\"1\":{\"554\":1}}],[\"stop\",{\"1\":{\"430\":1}}],[\"storeid\",{\"1\":{\"365\":1}}],[\"storetorefs\",{\"1\":{\"365\":3}}],[\"store规范\",{\"1\":{\"364\":1}}],[\"store创建有2种写法\",{\"1\":{\"364\":1}}],[\"store是pinia数据存储的实体\",{\"1\":{\"364\":1}}],[\"store\",{\"1\":{\"363\":2,\"364\":1,\"365\":9,\"400\":1,\"476\":3,\"479\":2,\"480\":2,\"481\":2,\"482\":1,\"483\":1,\"484\":5}}],[\"styleobject\",{\"1\":{\"420\":2}}],[\"style=\",{\"1\":{\"420\":4,\"453\":1}}],[\"style\",{\"1\":{\"257\":1,\"270\":2,\"450\":1,\"530\":1}}],[\"students\",{\"1\":{\"165\":3}}],[\"study\",{\"1\":{\"108\":1}}],[\"state\",{\"0\":{\"478\":1},\"1\":{\"364\":6,\"365\":1,\"463\":1,\"469\":3,\"476\":1,\"477\":1,\"478\":2,\"479\":3,\"480\":5,\"481\":5,\"482\":2,\"483\":2,\"484\":2,\"508\":1}}],[\"statustext\",{\"1\":{\"357\":1}}],[\"status>=\",{\"1\":{\"190\":1}}],[\"status\",{\"1\":{\"88\":2,\"190\":2,\"356\":3,\"357\":1}}],[\"static定义静态属性和方法\",{\"1\":{\"30\":1}}],[\"static\",{\"1\":{\"25\":2,\"27\":1,\"28\":1,\"30\":4,\"32\":1,\"33\":5,\"39\":1,\"41\":1,\"172\":3,\"300\":2,\"419\":1}}],[\"startangle弧度开始到endangle弧度结束\",{\"1\":{\"137\":1}}],[\"startangle\",{\"1\":{\"137\":1}}],[\"start是拷贝开始位置\",{\"1\":{\"98\":1}}],[\"startswith\",{\"1\":{\"36\":1}}],[\"start\",{\"0\":{\"98\":1,\"101\":1,\"122\":1},\"1\":{\"17\":1,\"19\":1,\"36\":1,\"228\":3}}],[\"stream\",{\"1\":{\"356\":5}}],[\"streamingaudioplayer\",{\"1\":{\"27\":1}}],[\"strictpropertyinitialization\",{\"1\":{\"291\":1}}],[\"strictfunctiontypes\",{\"1\":{\"291\":1}}],[\"strictbindcallapply\",{\"1\":{\"291\":1}}],[\"strictnullchecks\",{\"1\":{\"291\":1}}],[\"strict\",{\"1\":{\"290\":1,\"291\":1}}],[\"strings\",{\"1\":{\"440\":1}}],[\"stringdictionary\",{\"1\":{\"335\":2}}],[\"stringarray\",{\"1\":{\"335\":2}}],[\"stringify\",{\"1\":{\"281\":1,\"282\":1,\"288\":1,\"356\":1}}],[\"string类\",{\"0\":{\"36\":1}}],[\"string\",{\"0\":{\"308\":1},\"1\":{\"23\":2,\"25\":5,\"30\":1,\"31\":1,\"32\":2,\"33\":1,\"36\":7,\"39\":2,\"41\":1,\"165\":1,\"291\":1,\"300\":3,\"303\":2,\"304\":2,\"308\":1,\"309\":3,\"310\":2,\"315\":2,\"318\":5,\"320\":4,\"322\":2,\"323\":3,\"331\":1,\"332\":4,\"334\":2,\"335\":3,\"342\":2,\"343\":2,\"344\":1,\"345\":7,\"347\":1,\"356\":1,\"440\":3,\"458\":2,\"464\":1}}],[\"strokestyle\",{\"1\":{\"147\":1,\"149\":1}}],[\"stroketext\",{\"1\":{\"141\":1}}],[\"strokerect\",{\"1\":{\"140\":1,\"142\":1}}],[\"stroke\",{\"1\":{\"135\":1,\"136\":1,\"138\":1,\"139\":2,\"149\":1}}],[\"strockrect\",{\"1\":{\"134\":1}}],[\"str1\",{\"1\":{\"36\":1}}],[\"str2\",{\"1\":{\"36\":4}}],[\"str=\",{\"1\":{\"30\":1}}],[\"str\",{\"1\":{\"23\":2,\"36\":3,\"158\":1,\"198\":2,\"219\":1,\"308\":1,\"389\":2,\"390\":1,\"391\":2,\"393\":3}}],[\"sample\",{\"1\":{\"215\":2}}],[\"safe\",{\"1\":{\"209\":2}}],[\"sayhi\",{\"1\":{\"300\":2}}],[\"say\",{\"1\":{\"157\":2,\"185\":6,\"300\":2,\"304\":1,\"320\":2,\"429\":3}}],[\"sans\",{\"1\":{\"141\":1}}],[\"save\",{\"1\":{\"16\":2,\"20\":1,\"142\":1,\"143\":2,\"399\":1,\"400\":1,\"476\":2}}],[\"sass\",{\"1\":{\"4\":1}}],[\"ease\",{\"1\":{\"453\":2,\"454\":1}}],[\"edit\",{\"1\":{\"432\":1}}],[\"eduardo\",{\"1\":{\"372\":3}}],[\"eresolve\",{\"1\":{\"397\":2}}],[\"erina\",{\"1\":{\"375\":2}}],[\"err=>\",{\"1\":{\"167\":1,\"190\":1}}],[\"err\",{\"1\":{\"167\":4,\"190\":1}}],[\"errorclass\",{\"1\":{\"419\":3}}],[\"error\",{\"1\":{\"54\":1,\"167\":1,\"228\":1,\"234\":1,\"316\":1,\"354\":5,\"359\":4,\"380\":3,\"391\":1,\"405\":1}}],[\"ef|grep\",{\"1\":{\"289\":1}}],[\"ev\",{\"1\":{\"285\":4}}],[\"eventfn\",{\"1\":{\"391\":2,\"393\":2,\"394\":2}}],[\"event\",{\"1\":{\"219\":3,\"228\":4,\"391\":2,\"393\":2,\"394\":3,\"412\":6}}],[\"every\",{\"0\":{\"100\":1},\"1\":{\"100\":1,\"129\":1}}],[\"equal\",{\"1\":{\"176\":2}}],[\"equals\",{\"1\":{\"35\":2}}],[\"epsilon属性值接近于\",{\"1\":{\"176\":1}}],[\"epsilon\",{\"0\":{\"176\":1},\"1\":{\"176\":1}}],[\"el元素和模板编译在mount之前完成\",{\"1\":{\"390\":1}}],[\"el\",{\"1\":{\"389\":2,\"390\":2,\"391\":1,\"393\":2,\"447\":2,\"448\":7,\"449\":1,\"450\":3,\"476\":1}}],[\"else>\",{\"1\":{\"424\":1}}],[\"else\",{\"0\":{\"424\":2},\"1\":{\"165\":1,\"176\":1,\"190\":1,\"332\":1,\"345\":1,\"380\":1,\"386\":2,\"393\":1,\"424\":4}}],[\"electron\",{\"1\":{\"16\":3,\"17\":2,\"18\":1,\"20\":2}}],[\"elementplusiconsvue\",{\"1\":{\"400\":2}}],[\"elementplus\",{\"1\":{\"399\":2,\"400\":1}}],[\"element\",{\"1\":{\"4\":1,\"399\":3,\"400\":2,\"439\":1}}],[\"esbulid\",{\"1\":{\"534\":1}}],[\"es2020\",{\"1\":{\"291\":3}}],[\"es2019\",{\"1\":{\"291\":1}}],[\"es2018\",{\"1\":{\"291\":5}}],[\"es2017\",{\"1\":{\"291\":7}}],[\"es2016\",{\"1\":{\"291\":3}}],[\"es2015\",{\"1\":{\"291\":12}}],[\"es3\",{\"1\":{\"291\":1}}],[\"es\",{\"1\":{\"291\":1,\"534\":1}}],[\"es11引入了新的数据类型bigint\",{\"1\":{\"209\":1}}],[\"es11引入了动态导入的概念\",{\"1\":{\"208\":1}}],[\"es11\",{\"0\":{\"204\":1}}],[\"es10\",{\"0\":{\"199\":1},\"1\":{\"153\":1}}],[\"es9把这个用法扩展到了对象上\",{\"1\":{\"196\":1}}],[\"es9\",{\"0\":{\"195\":1}}],[\"es8\",{\"0\":{\"189\":1,\"191\":1},\"1\":{\"200\":1}}],[\"esnext\",{\"1\":{\"153\":1,\"291\":9}}],[\"es7新增\",{\"1\":{\"188\":1}}],[\"es7\",{\"0\":{\"186\":1},\"1\":{\"153\":1,\"291\":1}}],[\"es5\",{\"1\":{\"153\":1,\"291\":2,\"344\":1}}],[\"es6在文件头部import导入文件的方式被称作静态导入\",{\"1\":{\"208\":1}}],[\"es6的\",{\"1\":{\"196\":1}}],[\"es6的类class就是一个语法糖\",{\"1\":{\"170\":1}}],[\"es6之前模块化规范\",{\"1\":{\"185\":1}}],[\"es6模块化语法\",{\"1\":{\"185\":1}}],[\"es6模块化\",{\"0\":{\"185\":1,\"217\":1},\"1\":{\"213\":1}}],[\"es6对象扩展\",{\"0\":{\"182\":1}}],[\"es6对对象进行了简化处理\",{\"1\":{\"159\":1}}],[\"es6数值扩展\",{\"0\":{\"175\":1}}],[\"es6新增的数据结构\",{\"1\":{\"168\":1,\"169\":1}}],[\"es6新特性\",{\"1\":{\"8\":1}}],[\"es6\",{\"0\":{\"154\":1},\"1\":{\"153\":1,\"164\":1,\"291\":3,\"326\":2}}],[\"es6~es11\",{\"1\":{\"4\":1}}],[\"ecmascript\",{\"1\":{\"326\":1}}],[\"ecmascript是tc39\",{\"1\":{\"153\":1}}],[\"echart\",{\"1\":{\"4\":1}}],[\"e+308\",{\"1\":{\"83\":3}}],[\"e+38\",{\"1\":{\"83\":3}}],[\"etag\",{\"1\":{\"58\":2}}],[\"e\",{\"1\":{\"39\":1,\"83\":6,\"167\":3,\"176\":1,\"227\":2,\"234\":4,\"286\":2,\"315\":3,\"356\":2,\"391\":2,\"441\":2,\"544\":1}}],[\"enablepulldownrefresh\",{\"1\":{\"554\":1}}],[\"enabled\",{\"1\":{\"356\":1}}],[\"entry\",{\"0\":{\"528\":1},\"1\":{\"527\":1,\"528\":6,\"529\":2,\"530\":2}}],[\"entries\",{\"0\":{\"99\":1,\"193\":1},\"1\":{\"99\":1,\"129\":1,\"193\":2,\"200\":2,\"400\":1}}],[\"enter\",{\"1\":{\"431\":1,\"453\":5,\"454\":2}}],[\"enter=\",{\"1\":{\"431\":2}}],[\"encoding\",{\"1\":{\"356\":1}}],[\"env\",{\"1\":{\"185\":1,\"513\":5}}],[\"endangle\",{\"1\":{\"137\":1}}],[\"end默认是到最后位置\",{\"1\":{\"101\":1}}],[\"end是拷贝截止\",{\"1\":{\"98\":1}}],[\"end\",{\"0\":{\"98\":1,\"101\":1,\"122\":1},\"1\":{\"36\":1,\"220\":1,\"281\":1,\"282\":1}}],[\"enum枚举类型用于一些常量集合\",{\"1\":{\"312\":1}}],[\"enumerable\",{\"1\":{\"194\":4,\"248\":1,\"250\":1}}],[\"enum\",{\"0\":{\"312\":1,\"329\":1},\"1\":{\"23\":1,\"83\":1,\"312\":3,\"334\":1}}],[\"exact=\",{\"1\":{\"431\":2}}],[\"exact\",{\"1\":{\"431\":1}}],[\"examples\",{\"1\":{\"216\":1}}],[\"example\",{\"1\":{\"88\":1,\"227\":1,\"355\":2}}],[\"extend\",{\"1\":{\"462\":1}}],[\"extends\",{\"1\":{\"27\":1,\"173\":2,\"291\":2,\"303\":3,\"320\":1,\"321\":1}}],[\"extra\",{\"1\":{\"405\":1}}],[\"executed\",{\"1\":{\"354\":2}}],[\"exclude\",{\"1\":{\"291\":2,\"455\":1}}],[\"except\",{\"1\":{\"76\":2}}],[\"exists\",{\"1\":{\"77\":2}}],[\"experimentaldecorators\",{\"1\":{\"344\":2}}],[\"express\",{\"1\":{\"227\":3}}],[\"expression\",{\"1\":{\"34\":1,\"270\":1}}],[\"exports\",{\"1\":{\"214\":1,\"216\":5,\"284\":1,\"398\":1,\"512\":1,\"515\":1,\"526\":4,\"528\":3,\"529\":1,\"530\":1,\"531\":1,\"532\":2}}],[\"export暴露数据的方式\",{\"1\":{\"185\":1}}],[\"export\",{\"1\":{\"185\":7,\"363\":1,\"364\":2,\"401\":1,\"403\":1,\"409\":1,\"412\":1,\"422\":1,\"439\":1,\"440\":1,\"441\":1,\"447\":1,\"451\":1,\"460\":3,\"478\":1,\"480\":1,\"481\":1,\"482\":1,\"484\":1,\"524\":1,\"526\":2}}],[\"expires\",{\"1\":{\"58\":1}}],[\"employee\",{\"1\":{\"323\":2}}],[\"em变px\",{\"1\":{\"257\":1}}],[\"emits\",{\"1\":{\"441\":1}}],[\"emitdecoratormetadata\",{\"1\":{\"344\":1}}],[\"emit\",{\"1\":{\"220\":2,\"434\":2,\"441\":3,\"550\":1}}],[\"em\",{\"1\":{\"11\":1}}],[\"熟悉微信原生小程序开发及api接口调用\",{\"1\":{\"4\":1}}],[\"熟悉bootstrap\",{\"1\":{\"4\":1}}],[\"熟悉vue全家桶主流框架\",{\"1\":{\"4\":1}}],[\"熟练使用es6模块化开发\",{\"1\":{\"4\":1}}],[\"熟练使用vue3\",{\"1\":{\"4\":1}}],[\"a链接跳转\",{\"1\":{\"543\":1}}],[\"a>\",{\"1\":{\"417\":2}}],[\"aftereach\",{\"0\":{\"381\":1},\"1\":{\"381\":1,\"522\":1}}],[\"axios通过使用interceptors\",{\"1\":{\"359\":1}}],[\"axios拦截器\",{\"0\":{\"359\":1}}],[\"axios同步请求\",{\"0\":{\"358\":1}}],[\"axios响应体\",{\"0\":{\"357\":1}}],[\"axios请求体\",{\"0\":{\"356\":1}}],[\"axios设置默认值\",{\"0\":{\"355\":1}}],[\"axios\",{\"0\":{\"349\":1,\"350\":1,\"351\":1,\"352\":1,\"353\":1,\"354\":1},\"1\":{\"349\":5,\"354\":9,\"355\":4,\"356\":2,\"358\":9,\"359\":2,\"397\":1,\"458\":3}}],[\"axure\",{\"1\":{\"7\":1}}],[\"automatically\",{\"1\":{\"356\":1}}],[\"author\",{\"1\":{\"426\":1}}],[\"authorization`\",{\"1\":{\"356\":2}}],[\"authorization\",{\"1\":{\"355\":2}}],[\"authorigin\",{\"1\":{\"282\":2}}],[\"auth连接到代理\",{\"1\":{\"356\":1}}],[\"auth\",{\"1\":{\"355\":2,\"356\":3}}],[\"audioplayer\",{\"1\":{\"27\":2}}],[\"aqwieuqwiu\",{\"1\":{\"219\":2}}],[\"a+b\",{\"1\":{\"214\":1,\"319\":1}}],[\"api\",{\"0\":{\"411\":1},\"1\":{\"190\":4,\"283\":1,\"355\":2,\"356\":2,\"411\":3,\"412\":1,\"473\":1,\"513\":2}}],[\"app生命周期\",{\"0\":{\"540\":1}}],[\"appa\",{\"1\":{\"513\":4}}],[\"appendchild\",{\"1\":{\"281\":1}}],[\"apple\",{\"1\":{\"112\":1,\"113\":1,\"115\":2,\"116\":2,\"117\":2,\"121\":2,\"122\":3,\"127\":2,\"128\":2}}],[\"application\",{\"1\":{\"91\":1,\"92\":3,\"355\":1}}],[\"app\",{\"1\":{\"3\":1,\"18\":2,\"25\":2,\"33\":1,\"39\":1,\"41\":1,\"185\":1,\"219\":3,\"227\":3,\"291\":1,\"363\":3,\"369\":4,\"389\":2,\"390\":1,\"391\":2,\"393\":2,\"399\":2,\"400\":5,\"447\":2,\"450\":2,\"451\":4,\"458\":1,\"471\":2,\"476\":1,\"501\":1,\"513\":2,\"541\":2}}],[\"awaited<type>\",{\"1\":{\"324\":1}}],[\"await的返回值失败就会抛异常\",{\"1\":{\"190\":1}}],[\"await\",{\"0\":{\"190\":1},\"1\":{\"190\":5,\"380\":1}}],[\"amd还是cmd\",{\"1\":{\"213\":1}}],[\"amd\",{\"0\":{\"215\":1},\"1\":{\"185\":1,\"213\":1,\"215\":1,\"291\":2}}],[\"a=2\",{\"1\":{\"161\":1}}],[\"animation\",{\"1\":{\"453\":2}}],[\"any>\",{\"1\":{\"401\":1}}],[\"any类型用来不确定变量的类型的时候使用\",{\"1\":{\"336\":1}}],[\"any类型可以表示任意javascript值\",{\"1\":{\"313\":1}}],[\"any\",{\"0\":{\"313\":1,\"336\":1},\"1\":{\"318\":2,\"332\":2,\"334\":1,\"340\":1,\"344\":1}}],[\"angular\",{\"1\":{\"213\":1}}],[\"angle\",{\"1\":{\"143\":1}}],[\"anticlosewise是布尔值\",{\"1\":{\"137\":1}}],[\"anticlockwise\",{\"1\":{\"137\":1}}],[\"and\",{\"0\":{\"70\":1},\"1\":{\"68\":4,\"70\":3,\"76\":3,\"291\":1,\"356\":2}}],[\"attrs\",{\"1\":{\"422\":3}}],[\"attribute\",{\"0\":{\"421\":1},\"1\":{\"421\":1,\"422\":1,\"448\":1}}],[\"attributename\",{\"1\":{\"417\":2}}],[\"attr\",{\"1\":{\"393\":4}}],[\"attack\",{\"1\":{\"274\":1}}],[\"atop\",{\"1\":{\"146\":1}}],[\"atop新图像仅仅显示与老图像重叠区域\",{\"1\":{\"146\":1}}],[\"at\",{\"0\":{\"95\":1},\"1\":{\"95\":4,\"129\":1,\"412\":1}}],[\"about\",{\"1\":{\"369\":3,\"372\":2,\"521\":2}}],[\"abort\",{\"1\":{\"93\":1}}],[\"abc123\",{\"1\":{\"323\":1}}],[\"abs\",{\"1\":{\"176\":1}}],[\"abstract\",{\"1\":{\"28\":2,\"304\":3,\"370\":1}}],[\"avg\",{\"1\":{\"76\":2,\"77\":2}}],[\"aspectfill\",{\"1\":{\"546\":1}}],[\"aspectfit\",{\"1\":{\"546\":1}}],[\"askforcamerapermission\",{\"1\":{\"380\":1}}],[\"assets\",{\"1\":{\"401\":1,\"548\":1}}],[\"ass\",{\"1\":{\"309\":2}}],[\"assign\",{\"0\":{\"184\":1},\"1\":{\"184\":1,\"288\":2}}],[\"asyncincrement\",{\"1\":{\"484\":2}}],[\"asynciterable\",{\"1\":{\"291\":1}}],[\"async里面\",{\"1\":{\"190\":1}}],[\"async\",{\"0\":{\"190\":1},\"1\":{\"89\":1,\"190\":3,\"380\":1}}],[\"as\",{\"0\":{\"75\":1},\"1\":{\"75\":3,\"80\":1,\"185\":6,\"315\":2,\"400\":1}}],[\"asc\",{\"1\":{\"73\":2}}],[\"agestore\",{\"1\":{\"363\":1}}],[\"agent\",{\"1\":{\"356\":3}}],[\"age\",{\"1\":{\"64\":1,\"68\":2,\"73\":2,\"157\":2,\"192\":2,\"193\":1,\"194\":2,\"196\":2,\"205\":5,\"282\":1,\"300\":1,\"318\":4,\"320\":2,\"323\":2,\"335\":1,\"342\":2}}],[\"age=315360000\",{\"1\":{\"58\":1}}],[\"activated\",{\"1\":{\"493\":1,\"495\":2,\"496\":1}}],[\"activecomponent\",{\"1\":{\"455\":1}}],[\"activecolor\",{\"1\":{\"420\":2}}],[\"activeclass\",{\"1\":{\"419\":3}}],[\"active\",{\"1\":{\"419\":3,\"453\":6,\"454\":2}}],[\"actions不能直接修改state的数据\",{\"1\":{\"481\":1}}],[\"actions\",{\"1\":{\"364\":2,\"481\":1,\"483\":2,\"508\":1}}],[\"action传入\",{\"1\":{\"364\":1}}],[\"action的this指向当前store存储对象\",{\"1\":{\"364\":1}}],[\"action\",{\"0\":{\"481\":1},\"1\":{\"364\":2,\"365\":2,\"477\":1,\"483\":1,\"484\":1}}],[\"access\",{\"1\":{\"282\":3,\"283\":1}}],[\"accept\",{\"1\":{\"223\":1}}],[\"accepted\",{\"1\":{\"51\":1}}],[\"ack状态\",{\"1\":{\"59\":1}}],[\"ack设为seq加1\",{\"1\":{\"59\":1}}],[\"ack=1893430206\",{\"1\":{\"59\":1}}],[\"alt\",{\"1\":{\"431\":2}}],[\"alter\",{\"1\":{\"64\":11,\"79\":1}}],[\"also\",{\"1\":{\"356\":1}}],[\"always\",{\"1\":{\"354\":2}}],[\"alwaysstrict\",{\"1\":{\"291\":1}}],[\"align\",{\"1\":{\"453\":1}}],[\"alice\",{\"1\":{\"323\":1,\"335\":1}}],[\"alink\",{\"1\":{\"315\":1}}],[\"alias\",{\"0\":{\"377\":1},\"1\":{\"216\":1,\"377\":1}}],[\"alive会执行哪些生命周期\",{\"0\":{\"495\":1}}],[\"alive时\",{\"1\":{\"458\":1}}],[\"alive优点\",{\"1\":{\"56\":1}}],[\"alive\",{\"1\":{\"56\":2,\"493\":1,\"495\":1}}],[\"alive是客户端和服务器保持一种长连接状态\",{\"1\":{\"56\":1}}],[\"alive是干什么的\",{\"0\":{\"56\":1}}],[\"alerts\",{\"1\":{\"363\":1}}],[\"alert\",{\"1\":{\"215\":1,\"234\":1,\"429\":1}}],[\"alphabetic\",{\"1\":{\"141\":1}}],[\"allows\",{\"1\":{\"356\":1}}],[\"allowunreachablecode\",{\"1\":{\"291\":1}}],[\"allowjs\",{\"1\":{\"291\":1}}],[\"allow\",{\"1\":{\"282\":3,\"283\":1}}],[\"allsettled\",{\"0\":{\"206\":1},\"1\":{\"206\":1}}],[\"all\",{\"1\":{\"76\":1,\"206\":1,\"356\":1,\"358\":3,\"454\":1}}],[\"allclicks=0\",{\"1\":{\"30\":1}}],[\"are\",{\"1\":{\"356\":1}}],[\"arg2\",{\"1\":{\"345\":8}}],[\"arg1\",{\"1\":{\"345\":8}}],[\"arg\",{\"1\":{\"166\":3,\"321\":2,\"449\":1}}],[\"arguments\",{\"1\":{\"163\":1,\"165\":1}}],[\"args\",{\"1\":{\"25\":2,\"32\":1,\"33\":1,\"39\":1,\"41\":1,\"162\":3}}],[\"arx\",{\"1\":{\"149\":3}}],[\"arcto\",{\"1\":{\"138\":2}}],[\"arc\",{\"1\":{\"137\":3,\"138\":1,\"145\":1,\"149\":1}}],[\"arr4\",{\"1\":{\"309\":2}}],[\"arrr\",{\"1\":{\"163\":1,\"165\":2}}],[\"arr3\",{\"0\":{\"96\":1},\"1\":{\"96\":1,\"309\":1}}],[\"arr2\",{\"0\":{\"96\":1},\"1\":{\"96\":2,\"234\":2,\"309\":1}}],[\"arr1\",{\"0\":{\"96\":1},\"1\":{\"96\":2,\"105\":2,\"108\":1,\"309\":1}}],[\"arr\",{\"0\":{\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"114\":1,\"115\":1,\"116\":1,\"117\":1,\"118\":2,\"119\":2,\"120\":1,\"121\":1,\"122\":1,\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1},\"1\":{\"95\":4,\"97\":2,\"98\":3,\"99\":2,\"100\":2,\"101\":3,\"102\":2,\"103\":2,\"104\":2,\"105\":2,\"106\":1,\"107\":3,\"108\":1,\"109\":2,\"110\":2,\"111\":2,\"112\":2,\"113\":2,\"114\":2,\"115\":2,\"116\":3,\"117\":3,\"118\":4,\"119\":4,\"120\":2,\"121\":3,\"122\":3,\"123\":2,\"124\":3,\"125\":5,\"126\":2,\"127\":3,\"128\":2,\"168\":1,\"202\":4,\"234\":4,\"309\":1}}],[\"arrayformat\",{\"1\":{\"356\":1}}],[\"arraybufferview\",{\"1\":{\"356\":1}}],[\"arraybuffer\",{\"1\":{\"356\":3}}],[\"array<any>\",{\"1\":{\"309\":1}}],[\"array<number>\",{\"1\":{\"309\":1}}],[\"array类型的声明有两种写法\",{\"1\":{\"309\":1}}],[\"array\",{\"0\":{\"187\":1,\"309\":1,\"335\":1},\"1\":{\"99\":1,\"108\":2,\"111\":1,\"113\":1,\"128\":1,\"165\":1,\"291\":2,\"334\":1}}],[\"arrayrefvar\",{\"1\":{\"35\":2}}],[\"arrays数组操作方法\",{\"1\":{\"35\":1}}],[\"arraysize\",{\"1\":{\"35\":1}}],[\"arrays\",{\"1\":{\"33\":1,\"35\":5}}],[\"artical\",{\"1\":{\"78\":3}}],[\"article\",{\"1\":{\"78\":3}}],[\"a\",{\"1\":{\"24\":1,\"36\":1,\"37\":1,\"96\":2,\"109\":1,\"110\":1,\"111\":1,\"114\":1,\"124\":4,\"157\":2,\"160\":1,\"162\":2,\"163\":3,\"176\":2,\"196\":1,\"214\":3,\"215\":1,\"216\":1,\"234\":3,\"248\":1,\"250\":1,\"311\":2,\"319\":2,\"321\":6,\"322\":1,\"331\":1,\"356\":1,\"419\":1,\"424\":3,\"439\":1,\"483\":1,\"513\":1,\"526\":1}}],[\"aa\",{\"1\":{\"24\":3,\"158\":2,\"160\":1,\"163\":2}}],[\"aaa\",{\"1\":{\"24\":2,\"162\":2,\"166\":1,\"309\":1,\"320\":1}}],[\"a2\",{\"1\":{\"24\":2}}],[\"a1\",{\"1\":{\"24\":2}}],[\"adapter\",{\"1\":{\"356\":1}}],[\"adapters\",{\"1\":{\"356\":1}}],[\"ada\",{\"1\":{\"354\":1}}],[\"addnevent\",{\"1\":{\"481\":1}}],[\"addn\",{\"1\":{\"481\":2}}],[\"add方法\",{\"1\":{\"480\":1}}],[\"addevent\",{\"1\":{\"480\":1}}],[\"addeventlistener\",{\"1\":{\"219\":1,\"228\":4,\"241\":1,\"285\":2,\"391\":1,\"393\":1,\"394\":2,\"412\":2}}],[\"added\",{\"1\":{\"356\":1}}],[\"addcolorstop\",{\"1\":{\"149\":2,\"150\":2}}],[\"addactionlistener\",{\"1\":{\"39\":1}}],[\"add\",{\"1\":{\"16\":1,\"33\":2,\"39\":9,\"64\":2,\"79\":1,\"168\":2,\"214\":3,\"283\":1,\"319\":2,\"345\":3,\"432\":1,\"479\":3,\"480\":4,\"481\":1,\"524\":3}}],[\"adobe\",{\"1\":{\"7\":2}}],[\"ajax优缺点\",{\"0\":{\"87\":1}}],[\"ajax\",{\"0\":{\"85\":1},\"1\":{\"4\":1,\"91\":1,\"190\":3}}],[\"jweixin\",{\"1\":{\"553\":1}}],[\"jane\",{\"1\":{\"426\":1}}],[\"janedoe\",{\"1\":{\"356\":1}}],[\"java的long\",{\"1\":{\"83\":1}}],[\"java的int\",{\"1\":{\"83\":1}}],[\"java的循环结构有3种\",{\"1\":{\"33\":1}}],[\"javax\",{\"1\":{\"39\":1}}],[\"java有两种分支结构\",{\"1\":{\"34\":1}}],[\"java5引入了一种主要用于数组的增强型for循环\",{\"1\":{\"33\":1}}],[\"java中的对象是一个个的功能模块\",{\"1\":{\"29\":1}}],[\"java数据类型\",{\"0\":{\"23\":1}}],[\"java基础知识\",{\"0\":{\"22\":1}}],[\"java\",{\"1\":{\"5\":1,\"23\":2,\"36\":2,\"41\":1,\"170\":1}}],[\"javascript\",{\"1\":{\"4\":1,\"219\":1,\"270\":3,\"305\":1,\"326\":1,\"463\":1,\"526\":1}}],[\"john\",{\"1\":{\"335\":1,\"465\":2}}],[\"job\",{\"1\":{\"310\":1}}],[\"join\",{\"0\":{\"112\":1},\"1\":{\"78\":6,\"112\":1,\"129\":1}}],[\"jpg\",{\"1\":{\"354\":1,\"401\":1}}],[\"jpeg\",{\"1\":{\"92\":1}}],[\"jpanel\",{\"1\":{\"39\":2}}],[\"jbutton\",{\"1\":{\"39\":2}}],[\"jtextfield\",{\"1\":{\"39\":6}}],[\"jframe\",{\"1\":{\"39\":2}}],[\"jframe类\",{\"0\":{\"39\":1}}],[\"jisuanqi\",{\"1\":{\"39\":2}}],[\"js的globaldata对象里面定义\",{\"1\":{\"541\":1}}],[\"js里面新增devserve属性\",{\"1\":{\"398\":1}}],[\"js中它是最后一个clientrequest实例\",{\"1\":{\"357\":1}}],[\"js中使用的unix套接字\",{\"1\":{\"356\":1}}],[\"js中要遵循的最大重定向数\",{\"1\":{\"356\":1}}],[\"js中允许的http响应内容的最大字节数\",{\"1\":{\"356\":1}}],[\"js中的计时器能做到精确计时吗\",{\"0\":{\"246\":1}}],[\"js不能实现函数重载\",{\"1\":{\"345\":1}}],[\"js是一门单线程的语言\",{\"1\":{\"243\":1}}],[\"js代码\",{\"1\":{\"240\":1}}],[\"js文件的\",{\"1\":{\"515\":1}}],[\"js文件\",{\"1\":{\"234\":1}}],[\"js<\",{\"1\":{\"216\":1}}],[\"js模块定义\",{\"1\":{\"215\":1}}],[\"js模块化\",{\"0\":{\"212\":1}}],[\"js支持最大的数值是\",{\"1\":{\"209\":1}}],[\"js2131231你是555啦啦啦\",{\"1\":{\"198\":2}}],[\"js这个文件了\",{\"1\":{\"185\":1}}],[\"js在这个标签上绘制各种图案\",{\"1\":{\"131\":1}}],[\"js配置以下代码\",{\"1\":{\"18\":1}}],[\"json是ts编译器的配置文件\",{\"1\":{\"291\":1}}],[\"jsonp\",{\"1\":{\"281\":1}}],[\"jsonp的原理就是利用了script标签不受浏览器同源策略的限制\",{\"1\":{\"281\":1}}],[\"jsonp方案\",{\"0\":{\"281\":1}}],[\"json\",{\"1\":{\"88\":2,\"92\":2,\"281\":1,\"282\":1,\"288\":3,\"344\":1,\"356\":2,\"397\":1,\"548\":1}}],[\"json文件所处位置是typescript项目的根目录\",{\"1\":{\"291\":1}}],[\"json文件中\",{\"1\":{\"291\":1}}],[\"json文件\",{\"0\":{\"17\":1}}],[\"json等移动端和pc端前端开发技术\",{\"1\":{\"4\":1}}],[\"js\",{\"0\":{\"15\":2,\"18\":1},\"1\":{\"13\":1,\"185\":12,\"208\":1,\"213\":2,\"214\":2,\"215\":6,\"216\":3,\"220\":1,\"234\":1,\"257\":1,\"284\":1,\"291\":1,\"356\":2,\"363\":3,\"407\":1,\"412\":1,\"451\":1,\"512\":1,\"526\":2,\"528\":4,\"529\":2,\"530\":2,\"541\":1,\"553\":1}}],[\"jquery加载完之后\",{\"1\":{\"215\":1}}],[\"jquery\",{\"1\":{\"4\":1,\"215\":3,\"216\":5,\"356\":2}}],[\"精通html5\",{\"1\":{\"4\":1}}],[\"技术栈\",{\"0\":{\"4\":1}}],[\"ul\",{\"1\":{\"454\":1}}],[\"ul>\",{\"1\":{\"426\":1,\"437\":1}}],[\"u等作为泛型函数\",{\"1\":{\"321\":1}}],[\"umd\",{\"1\":{\"291\":1}}],[\"uploads\",{\"1\":{\"548\":1}}],[\"updata\",{\"1\":{\"393\":2}}],[\"updated\",{\"1\":{\"448\":1,\"449\":2,\"450\":1,\"487\":1}}],[\"update\",{\"1\":{\"65\":3,\"412\":6,\"434\":3}}],[\"up\",{\"1\":{\"312\":4}}],[\"upgrade类型\",{\"1\":{\"223\":1}}],[\"upgrade\",{\"1\":{\"223\":2}}],[\"upgrade连接\",{\"1\":{\"223\":1}}],[\"utf8\",{\"1\":{\"356\":1}}],[\"utf\",{\"1\":{\"216\":1}}],[\"utils\",{\"1\":{\"542\":1}}],[\"util\",{\"1\":{\"41\":1,\"542\":3}}],[\"u\",{\"1\":{\"66\":4,\"75\":4,\"108\":1}}],[\"usefeature\",{\"1\":{\"473\":1}}],[\"useattrs\",{\"1\":{\"422\":2}}],[\"usealertsstore\",{\"1\":{\"363\":6}}],[\"usemouse\",{\"1\":{\"412\":1}}],[\"usestore\",{\"1\":{\"365\":3,\"484\":2}}],[\"usecounterstore\",{\"1\":{\"364\":2,\"365\":1}}],[\"useid\",{\"1\":{\"364\":1}}],[\"used\",{\"1\":{\"356\":1}}],[\"userinfo\",{\"1\":{\"541\":1}}],[\"userid\",{\"1\":{\"371\":1}}],[\"useroute\",{\"1\":{\"403\":2}}],[\"userdetails\",{\"1\":{\"382\":1,\"383\":1,\"384\":6}}],[\"username\",{\"1\":{\"356\":2,\"372\":1,\"375\":3}}],[\"users\",{\"1\":{\"166\":1,\"371\":2,\"372\":2,\"382\":1,\"383\":3,\"384\":2}}],[\"user\",{\"1\":{\"64\":6,\"65\":6,\"66\":4,\"68\":4,\"69\":1,\"70\":3,\"71\":4,\"72\":3,\"73\":3,\"74\":1,\"75\":2,\"76\":10,\"77\":8,\"78\":6,\"79\":3,\"80\":1,\"89\":1,\"166\":1,\"281\":1,\"282\":2,\"354\":3,\"356\":1,\"358\":2,\"371\":1,\"372\":1,\"375\":6}}],[\"use\",{\"1\":{\"63\":1,\"76\":1,\"216\":1,\"359\":4,\"363\":1,\"369\":2,\"399\":1,\"400\":3,\"412\":1,\"451\":1,\"476\":1,\"530\":2,\"531\":1}}],[\"unwatch\",{\"1\":{\"469\":2}}],[\"unmounted\",{\"1\":{\"448\":1}}],[\"unknown未知类型和any任意类型很接近\",{\"1\":{\"314\":1}}],[\"unknown\",{\"0\":{\"314\":1},\"1\":{\"315\":1,\"340\":2}}],[\"undefined时\",{\"1\":{\"417\":1}}],[\"undefined\",{\"1\":{\"103\":1,\"165\":1,\"334\":1,\"339\":1,\"524\":1}}],[\"unshift\",{\"0\":{\"127\":1},\"1\":{\"94\":1,\"127\":1,\"129\":1}}],[\"unavailable\",{\"1\":{\"54\":1}}],[\"unauthorized\",{\"1\":{\"53\":1}}],[\"union\",{\"1\":{\"76\":4,\"334\":1,\"551\":1}}],[\"uni\",{\"1\":{\"3\":1}}],[\"url=\",{\"1\":{\"544\":1}}],[\"urlsearchparams\",{\"1\":{\"356\":2}}],[\"urlencoded\",{\"1\":{\"91\":1,\"92\":1,\"355\":1}}],[\"url\",{\"0\":{\"350\":1,\"351\":1,\"352\":1,\"353\":1},\"1\":{\"52\":3,\"60\":3,\"89\":1,\"190\":2,\"270\":1,\"271\":1,\"281\":2,\"349\":1,\"354\":7,\"356\":5,\"372\":1,\"417\":2,\"544\":2,\"545\":1,\"553\":1}}],[\"url指向资源集合\",{\"1\":{\"48\":1}}],[\"url指向单一资源\",{\"1\":{\"48\":1}}],[\"ue交互设计\",{\"1\":{\"6\":1}}],[\"ue全能班\",{\"1\":{\"6\":1}}],[\"uid\",{\"1\":{\"78\":3}}],[\"ui\",{\"1\":{\"4\":2,\"6\":1}}],[\"ui设计\",{\"1\":{\"3\":1,\"6\":1}}],[\"ctrl=\",{\"1\":{\"431\":1}}],[\"ctrl\",{\"1\":{\"431\":3}}],[\"ctx\",{\"1\":{\"133\":1,\"134\":3,\"135\":7,\"136\":8,\"137\":5,\"138\":5,\"139\":10,\"140\":4,\"141\":4,\"142\":7,\"143\":12,\"144\":3,\"145\":6,\"146\":6,\"147\":1,\"149\":7,\"150\":3,\"151\":5,\"422\":3,\"441\":2}}],[\"customref\",{\"1\":{\"409\":2}}],[\"custom\",{\"1\":{\"356\":1}}],[\"currenttarget\",{\"1\":{\"544\":2}}],[\"currentindex\",{\"0\":{\"118\":1,\"119\":1},\"1\":{\"118\":1,\"119\":1}}],[\"currentvalue\",{\"0\":{\"118\":1,\"119\":1},\"1\":{\"118\":1,\"119\":1}}],[\"currentpage\",{\"1\":{\"74\":2}}],[\"cd\",{\"1\":{\"289\":2}}],[\"cdn\",{\"1\":{\"220\":1}}],[\"csrf常见攻击类型\",{\"0\":{\"275\":1}}],[\"csrf\",{\"0\":{\"273\":1},\"1\":{\"274\":1,\"347\":1}}],[\"css$\",{\"1\":{\"530\":1}}],[\"css可以根据指定这个过渡组件\",{\"1\":{\"453\":1}}],[\"css等文件\",{\"1\":{\"347\":1}}],[\"css3\",{\"1\":{\"4\":1}}],[\"css\",{\"0\":{\"11\":1},\"1\":{\"4\":1,\"240\":2,\"270\":1,\"399\":1,\"453\":1,\"530\":1}}],[\"cross\",{\"1\":{\"269\":1,\"274\":1}}],[\"creatmemoryhistory\",{\"1\":{\"370\":1}}],[\"creat\",{\"1\":{\"80\":1}}],[\"createstore\",{\"1\":{\"479\":1,\"480\":1,\"481\":1,\"482\":1,\"483\":1}}],[\"createserver\",{\"1\":{\"220\":1}}],[\"createrouter\",{\"1\":{\"369\":1,\"370\":1,\"379\":1,\"384\":1}}],[\"createradialgradient\",{\"0\":{\"150\":1},\"1\":{\"150\":1}}],[\"createapp\",{\"1\":{\"363\":2,\"369\":1,\"399\":1,\"400\":1,\"447\":1,\"451\":2,\"471\":2}}],[\"createpinia\",{\"1\":{\"363\":2}}],[\"createpattern\",{\"0\":{\"151\":1},\"1\":{\"151\":2}}],[\"createwebhistory\",{\"1\":{\"369\":1,\"370\":1}}],[\"createwebhashhistory\",{\"1\":{\"369\":2,\"370\":2}}],[\"createwritestream\",{\"1\":{\"354\":1}}],[\"createwindow\",{\"1\":{\"18\":2}}],[\"createelement\",{\"1\":{\"151\":1,\"281\":1}}],[\"createlineargradient\",{\"0\":{\"149\":1},\"1\":{\"149\":2}}],[\"create\",{\"1\":{\"63\":1,\"64\":2,\"77\":1,\"79\":1,\"355\":1,\"390\":1,\"393\":1,\"397\":1}}],[\"created阶段可以获取到method里面的方法\",{\"1\":{\"490\":1}}],[\"created阶段有$data\",{\"1\":{\"490\":1}}],[\"createdat\",{\"1\":{\"343\":1}}],[\"created\",{\"1\":{\"51\":1,\"344\":1,\"390\":5,\"393\":2,\"448\":1,\"487\":1,\"492\":1,\"493\":1,\"494\":2,\"495\":1,\"496\":1}}],[\"cc\",{\"1\":{\"209\":1}}],[\"ccc\",{\"1\":{\"24\":1,\"163\":2,\"524\":1}}],[\"cmd\",{\"0\":{\"216\":1},\"1\":{\"185\":1,\"213\":1}}],[\"city=belo\",{\"1\":{\"356\":1}}],[\"city\",{\"1\":{\"184\":3}}],[\"c\",{\"1\":{\"157\":2,\"162\":1,\"163\":3,\"170\":1,\"188\":1,\"215\":1,\"424\":3}}],[\"center\",{\"1\":{\"141\":2,\"406\":3,\"453\":1,\"546\":1}}],[\"cp2y=\",{\"1\":{\"139\":1}}],[\"cp2y\",{\"1\":{\"139\":2}}],[\"cp2x\",{\"1\":{\"139\":3}}],[\"cp1y=\",{\"1\":{\"139\":1}}],[\"cp1y\",{\"1\":{\"139\":2}}],[\"cp1x\",{\"1\":{\"139\":3}}],[\"cv\",{\"1\":{\"133\":3,\"134\":3,\"135\":3,\"136\":3,\"137\":3,\"138\":3,\"139\":6,\"140\":3,\"141\":3,\"142\":3,\"143\":3,\"144\":3,\"145\":3,\"146\":3}}],[\"capitalize\",{\"1\":{\"436\":1}}],[\"capitalize=\",{\"1\":{\"436\":1}}],[\"capture\",{\"1\":{\"430\":1}}],[\"car\",{\"1\":{\"332\":3}}],[\"called\",{\"1\":{\"344\":1}}],[\"call和apply的参数列表\",{\"1\":{\"291\":1}}],[\"callback=getjsonpdata\",{\"1\":{\"281\":1}}],[\"callback\",{\"1\":{\"281\":2}}],[\"call\",{\"1\":{\"173\":1}}],[\"cas\",{\"1\":{\"133\":2,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":2,\"140\":1,\"141\":1,\"142\":1,\"143\":1}}],[\"case\",{\"1\":{\"34\":2}}],[\"cannot\",{\"1\":{\"356\":1}}],[\"cancel\",{\"1\":{\"356\":1}}],[\"canceltoken\",{\"1\":{\"356\":2}}],[\"cancellation\",{\"1\":{\"356\":1}}],[\"cancat\",{\"0\":{\"96\":1}}],[\"canvas>\",{\"1\":{\"133\":1}}],[\"canvas使用\",{\"0\":{\"133\":1},\"1\":{\"141\":1}}],[\"canvas依赖分辨率\",{\"1\":{\"132\":1}}],[\"canvas是通过js绘制的2d图像\",{\"1\":{\"132\":1}}],[\"canvas和svg的区别\",{\"0\":{\"132\":1}}],[\"canvas\",{\"1\":{\"131\":1,\"140\":1}}],[\"canvas基础知识\",{\"0\":{\"131\":1}}],[\"cache\",{\"1\":{\"58\":1,\"290\":1}}],[\"catchtap是阻值冒泡的\",{\"1\":{\"549\":1}}],[\"catchall\",{\"1\":{\"385\":1}}],[\"catch\",{\"1\":{\"58\":2,\"167\":1,\"190\":1,\"354\":2,\"356\":1,\"380\":1}}],[\"checked\",{\"1\":{\"432\":2}}],[\"checkbox\",{\"1\":{\"432\":3}}],[\"checkjs\",{\"1\":{\"291\":1}}],[\"children\",{\"1\":{\"523\":1}}],[\"child\",{\"1\":{\"419\":1,\"439\":1,\"500\":1}}],[\"childnodes\",{\"1\":{\"389\":3,\"391\":2,\"393\":2,\"394\":2}}],[\"changemsg\",{\"1\":{\"460\":2}}],[\"changetitle\",{\"1\":{\"441\":4}}],[\"changetitle=\",{\"1\":{\"441\":1}}],[\"change属性更大程度的影响分层结果\",{\"1\":{\"259\":1}}],[\"change\",{\"1\":{\"159\":4,\"172\":2,\"185\":1,\"259\":1}}],[\"charat\",{\"1\":{\"436\":1}}],[\"character\",{\"1\":{\"37\":4}}],[\"charactor类\",{\"0\":{\"37\":1}}],[\"charset=\",{\"1\":{\"216\":1}}],[\"char\",{\"1\":{\"23\":1,\"24\":3,\"37\":1,\"83\":3}}],[\"chart\",{\"1\":{\"4\":1}}],[\"ch\",{\"1\":{\"37\":1}}],[\"cls\",{\"1\":{\"289\":1}}],[\"clean\",{\"1\":{\"290\":1}}],[\"cleartimeout\",{\"1\":{\"228\":2,\"409\":1}}],[\"clear\",{\"1\":{\"168\":2,\"169\":2,\"431\":1}}],[\"clearrect\",{\"1\":{\"134\":1}}],[\"clent\",{\"1\":{\"286\":1}}],[\"closeevent\",{\"1\":{\"406\":1}}],[\"close\",{\"1\":{\"226\":1,\"228\":3,\"233\":1,\"234\":1}}],[\"closepath\",{\"1\":{\"135\":1,\"136\":1,\"149\":1}}],[\"classobject\",{\"1\":{\"419\":2}}],[\"class和style\",{\"0\":{\"418\":1}}],[\"class=\",{\"1\":{\"406\":2,\"419\":7,\"421\":1,\"444\":1,\"456\":1,\"504\":1}}],[\"class\",{\"0\":{\"170\":1,\"335\":1},\"1\":{\"23\":1,\"25\":2,\"27\":2,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"39\":1,\"41\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":2,\"174\":1,\"205\":1,\"300\":2,\"303\":2,\"304\":1,\"320\":1,\"321\":1,\"344\":3,\"389\":1,\"390\":1,\"391\":1,\"393\":2,\"417\":1,\"419\":1,\"421\":1,\"453\":1}}],[\"client\",{\"1\":{\"220\":3,\"356\":1}}],[\"client端也可以关闭连接了\",{\"1\":{\"59\":1}}],[\"client端等待2msl的时间后依然没有收到回复\",{\"1\":{\"59\":1}}],[\"client端收到server端发送的fin报文段\",{\"1\":{\"59\":1}}],[\"client端进入fin\",{\"1\":{\"59\":2}}],[\"client端发起挥手请求\",{\"1\":{\"59\":1}}],[\"clicked\",{\"1\":{\"439\":2}}],[\"click=\",{\"1\":{\"391\":1,\"393\":1,\"411\":1,\"428\":1,\"429\":2,\"439\":2,\"453\":1,\"456\":2}}],[\"click的指令\",{\"1\":{\"391\":1}}],[\"click\",{\"1\":{\"215\":1,\"274\":1,\"391\":3,\"393\":3,\"394\":3,\"406\":2,\"431\":3}}],[\"clip\",{\"0\":{\"145\":1},\"1\":{\"145\":2}}],[\"cli\",{\"0\":{\"397\":1},\"1\":{\"20\":1,\"185\":1,\"397\":1,\"398\":1,\"513\":1}}],[\"cnpmjs\",{\"1\":{\"290\":1}}],[\"cnpm\",{\"1\":{\"16\":1,\"290\":1}}],[\"could\",{\"1\":{\"397\":1}}],[\"coun\",{\"1\":{\"76\":1}}],[\"count+=n\",{\"1\":{\"480\":1,\"481\":1}}],[\"count++\",{\"1\":{\"364\":1,\"365\":1,\"428\":1,\"439\":2,\"479\":1,\"481\":1,\"524\":1}}],[\"counter\",{\"1\":{\"364\":2}}],[\"country=brasil\",{\"1\":{\"356\":1}}],[\"count\",{\"1\":{\"76\":4,\"364\":6,\"365\":3,\"411\":5,\"428\":2,\"434\":1,\"439\":5,\"463\":3,\"466\":4,\"469\":2,\"476\":1,\"478\":2,\"479\":1,\"480\":1,\"481\":1,\"482\":2,\"484\":2,\"524\":1}}],[\"code\",{\"1\":{\"397\":1}}],[\"core\",{\"1\":{\"291\":1}}],[\"cors是跨域资源共享\",{\"1\":{\"282\":1}}],[\"cors方案\",{\"0\":{\"282\":1}}],[\"cookie\",{\"1\":{\"269\":1,\"356\":1}}],[\"copy\",{\"1\":{\"146\":1}}],[\"copywithin会导致原数组变化\",{\"1\":{\"98\":1}}],[\"copywithin\",{\"0\":{\"98\":1},\"1\":{\"98\":2,\"129\":1}}],[\"collection\",{\"1\":{\"291\":1}}],[\"column\",{\"1\":{\"64\":5}}],[\"colmn\",{\"1\":{\"64\":5}}],[\"color=\",{\"1\":{\"450\":1}}],[\"color\",{\"1\":{\"4\":1,\"420\":2,\"450\":5}}],[\"confirm\",{\"1\":{\"234\":1}}],[\"configurewebpack\",{\"1\":{\"407\":1}}],[\"configuration\",{\"1\":{\"216\":1}}],[\"configurable\",{\"1\":{\"194\":4,\"248\":1}}],[\"configs\",{\"1\":{\"291\":1}}],[\"config\",{\"0\":{\"350\":1,\"351\":1,\"352\":1,\"353\":1,\"354\":1},\"1\":{\"207\":5,\"215\":1,\"216\":1,\"284\":1,\"290\":6,\"349\":1,\"354\":6,\"356\":1,\"357\":1,\"359\":2,\"398\":1,\"407\":1,\"458\":1,\"512\":1,\"513\":1,\"515\":1,\"548\":1,\"554\":1}}],[\"confict\",{\"1\":{\"53\":1}}],[\"console\",{\"1\":{\"95\":2,\"99\":3,\"106\":2,\"109\":1,\"110\":1,\"111\":1,\"113\":3,\"114\":1,\"116\":2,\"117\":2,\"121\":2,\"125\":4,\"126\":1,\"127\":2,\"128\":3,\"163\":1,\"165\":2,\"166\":4,\"167\":4,\"173\":1,\"176\":2,\"178\":2,\"190\":2,\"205\":1,\"220\":4,\"227\":6,\"228\":1,\"234\":1,\"281\":2,\"285\":2,\"286\":2,\"311\":1,\"315\":1,\"320\":1,\"321\":1,\"332\":2,\"344\":4,\"354\":4,\"390\":4,\"391\":1,\"411\":1,\"422\":1,\"437\":1,\"440\":2,\"450\":2,\"466\":1,\"469\":2,\"526\":2}}],[\"const声明的常量一旦赋值就不能被修改\",{\"1\":{\"333\":1}}],[\"const声明常量\",{\"0\":{\"156\":1}}],[\"const和readonly的区别\",{\"0\":{\"333\":1}}],[\"constructor\",{\"0\":{\"97\":1},\"1\":{\"97\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":2,\"205\":1,\"300\":2,\"303\":1,\"304\":1,\"320\":1,\"321\":1,\"344\":3,\"389\":1,\"390\":1,\"391\":1,\"393\":2}}],[\"const\",{\"1\":{\"18\":3,\"157\":2,\"159\":1,\"163\":1,\"165\":1,\"187\":1,\"193\":1,\"198\":2,\"200\":2,\"214\":1,\"220\":5,\"227\":4,\"228\":2,\"281\":2,\"282\":3,\"285\":2,\"286\":3,\"321\":1,\"323\":1,\"355\":1,\"363\":4,\"364\":4,\"365\":6,\"369\":5,\"370\":2,\"375\":1,\"376\":2,\"377\":1,\"379\":1,\"382\":1,\"383\":1,\"384\":2,\"386\":1,\"398\":1,\"400\":2,\"401\":1,\"403\":2,\"411\":1,\"412\":4,\"417\":1,\"419\":5,\"420\":3,\"422\":1,\"426\":2,\"428\":1,\"434\":5,\"435\":2,\"436\":1,\"437\":3,\"439\":2,\"440\":1,\"441\":3,\"447\":2,\"448\":1,\"451\":2,\"460\":2,\"463\":3,\"464\":1,\"465\":4,\"466\":1,\"468\":1,\"469\":2,\"471\":1,\"472\":2,\"473\":1,\"476\":1,\"479\":1,\"480\":1,\"481\":1,\"482\":1,\"483\":3,\"484\":1,\"521\":2,\"524\":1,\"529\":1,\"530\":1,\"531\":2,\"542\":1,\"545\":1}}],[\"container\",{\"1\":{\"417\":1,\"444\":1,\"504\":1}}],[\"context\",{\"1\":{\"151\":1,\"460\":2,\"481\":2}}],[\"contentview\",{\"1\":{\"403\":2}}],[\"contentwindow\",{\"1\":{\"219\":1,\"285\":1}}],[\"content\",{\"0\":{\"92\":1},\"1\":{\"51\":2,\"91\":1,\"355\":1,\"356\":1,\"357\":1,\"403\":2}}],[\"control属性可以设置很多属性值\",{\"1\":{\"58\":1}}],[\"control\",{\"1\":{\"58\":1,\"282\":3,\"283\":1}}],[\"continue关键字用于循环语句中\",{\"1\":{\"33\":1}}],[\"continue关键字\",{\"1\":{\"33\":1}}],[\"connected\",{\"1\":{\"220\":1}}],[\"connection\",{\"1\":{\"56\":1,\"220\":1,\"223\":1,\"227\":2,\"286\":1}}],[\"connect\",{\"1\":{\"45\":1,\"46\":1}}],[\"concat\",{\"1\":{\"36\":2,\"96\":1,\"129\":1}}],[\"composables\",{\"1\":{\"412\":1}}],[\"composition\",{\"0\":{\"411\":1}}],[\"componentcustomproperties\",{\"1\":{\"458\":1}}],[\"component<\",{\"1\":{\"419\":1}}],[\"component\",{\"1\":{\"369\":2,\"371\":1,\"375\":1,\"377\":1,\"382\":1,\"384\":2,\"385\":1,\"386\":1,\"400\":3,\"401\":2,\"403\":1,\"404\":1,\"439\":1,\"523\":1}}],[\"complie\",{\"1\":{\"389\":3,\"390\":2,\"391\":3,\"393\":3,\"394\":2}}],[\"completed\",{\"1\":{\"343\":1}}],[\"companyid\",{\"1\":{\"323\":2}}],[\"compileroptions\",{\"1\":{\"291\":2,\"344\":1}}],[\"computed等方法里新增代码\",{\"1\":{\"411\":1}}],[\"computed\",{\"0\":{\"465\":1},\"1\":{\"257\":1,\"364\":2,\"403\":2,\"465\":3,\"478\":1,\"482\":2,\"484\":5}}],[\"comet\",{\"1\":{\"224\":1}}],[\"commit方法传递的参数是第二个参数\",{\"1\":{\"480\":1}}],[\"commit\",{\"1\":{\"479\":2,\"480\":1,\"481\":2,\"484\":1}}],[\"common\",{\"1\":{\"355\":2}}],[\"commonjs规范\",{\"0\":{\"214\":1}}],[\"commonjs\",{\"1\":{\"185\":1,\"213\":1,\"214\":1,\"291\":1}}],[\"comment=\",{\"1\":{\"219\":1}}],[\"com\",{\"1\":{\"2\":1,\"5\":2,\"88\":1,\"190\":2,\"290\":1,\"355\":2,\"356\":4}}],[\"cjq314\",{\"1\":{\"2\":1}}],[\"邮箱\",{\"1\":{\"2\":1}}],[\"院系专业\",{\"1\":{\"2\":1}}],[\"学历\",{\"1\":{\"2\":1}}],[\"||\",{\"0\":{\"315\":1},\"1\":{\"542\":1}}],[\"|\",{\"1\":{\"2\":2,\"112\":1,\"309\":2,\"317\":2,\"322\":3,\"345\":2}}],[\"04\",{\"1\":{\"426\":1}}],[\"03\",{\"1\":{\"83\":1}}],[\"036\",{\"1\":{\"83\":2}}],[\"07\",{\"1\":{\"83\":2}}],[\"073\",{\"1\":{\"83\":4}}],[\"0000ff\",{\"1\":{\"146\":2}}],[\"000000\",{\"1\":{\"134\":1,\"146\":1}}],[\"00\",{\"1\":{\"83\":6}}],[\"01\",{\"1\":{\"83\":6}}],[\"0早起阶段\",{\"1\":{\"56\":1}}],[\"0的协议状态码\",{\"1\":{\"55\":1}}],[\"0定义了三种请求方法\",{\"1\":{\"45\":1}}],[\"0\",{\"1\":{\"11\":1,\"33\":6,\"35\":1,\"76\":1,\"83\":19,\"90\":1,\"98\":2,\"99\":3,\"100\":1,\"101\":12,\"113\":1,\"115\":1,\"135\":3,\"137\":1,\"138\":1,\"142\":4,\"143\":6,\"144\":5,\"145\":1,\"146\":2,\"149\":2,\"150\":1,\"151\":4,\"165\":1,\"176\":4,\"181\":2,\"216\":3,\"219\":4,\"257\":2,\"282\":2,\"283\":2,\"285\":2,\"312\":2,\"356\":2,\"358\":1,\"364\":2,\"365\":1,\"411\":1,\"412\":4,\"428\":1,\"434\":1,\"436\":1,\"439\":2,\"453\":8,\"454\":2,\"463\":2,\"466\":1,\"469\":1,\"476\":1,\"481\":1,\"482\":1,\"524\":1}}],[\"06\",{\"1\":{\"2\":1}}],[\"09\",{\"1\":{\"2\":1,\"6\":1}}],[\"郑州科技学院\",{\"1\":{\"2\":1}}],[\"毕业院校\",{\"1\":{\"2\":1}}],[\"姓名\",{\"1\":{\"2\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const u=bt[s];e==="suggest"?self.postMessage([e,o,tt(t,u,n)]):e==="search"?self.postMessage([e,o,Z(t,u,n)]):self.postMessage({suggestions:[e,o,tt(t,u,n)],results:[e,o,Z(t,u,n)]})};
//# sourceMappingURL=index.js.map
