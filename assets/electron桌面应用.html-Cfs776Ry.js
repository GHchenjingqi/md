import{_ as o,c,b as l,d as t,a as p,e as s,w as e,r as i,o as u}from"./app-DMoYNb1f.js";const r={},k={id:"_1-vm4-sandbox-bundle-2electron-security-warning-insecure-content-security-policy-this-renderer-process-has-either-no-content-security-policy-set-or-a-policy-with-unsafe-eval-enabled-this-exposes-users-of-this-app-to-unnecessary-security-risks",tabindex:"-1"},d={class:"header-anchor",href:"#_1-vm4-sandbox-bundle-2electron-security-warning-insecure-content-security-policy-this-renderer-process-has-either-no-content-security-policy-set-or-a-policy-with-unsafe-eval-enabled-this-exposes-users-of-this-app-to-unnecessary-security-risks"},v={id:"_2-error-launching-app-unable-to-find-electron-app-at-d",tabindex:"-1"},m={class:"header-anchor",href:"#_2-error-launching-app-unable-to-find-electron-app-at-d"},b={id:"_3-referenceerror-require-is-not-defined-in-es-module-scope-you-can-use-importinsteadthis-file-is-being-treated-as-an-es-module-because-it-has-a-js-file-extension-and-contains-type-module",tabindex:"-1"},g={class:"header-anchor",href:"#_3-referenceerror-require-is-not-defined-in-es-module-scope-you-can-use-importinsteadthis-file-is-being-treated-as-an-es-module-because-it-has-a-js-file-extension-and-contains-type-module"},y={id:"_4-控制台报错-failed-to-load-resource-net-err-file-not-found-index-ceoqqean-js-1",tabindex:"-1"},h={class:"header-anchor",href:"#_4-控制台报错-failed-to-load-resource-net-err-file-not-found-index-ceoqqean-js-1"},f={id:"_5-打包时报错-errorout-error-cannot-create-symbolic-link-c-users-libcrypto-dylib-error-cannot-create-symbolic-link-c-users-10-12-lib-libssl-dylib",tabindex:"-1"},w={class:"header-anchor",href:"#_5-打包时报错-errorout-error-cannot-create-symbolic-link-c-users-libcrypto-dylib-error-cannot-create-symbolic-link-c-users-10-12-lib-libssl-dylib"};function x(q,n){const a=i("font");return u(),c("div",null,[n[104]||(n[104]=l(`<h2 id="构建方式" tabindex="-1"><a class="header-anchor" href="#构建方式"><span>构建方式</span></a></h2><h3 id="必备环境" tabindex="-1"><a class="header-anchor" href="#必备环境"><span>必备环境</span></a></h3><ul><li>安装node.js</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">node <span class="token operator">-</span>v</span>
<span class="line">v16<span class="token punctuation">.</span><span class="token number">14.2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方式一-官方传统ssr" tabindex="-1"><a class="header-anchor" href="#方式一-官方传统ssr"><span>方式一：官方传统SSR</span></a></h3><p>官方地址：<a href="https://www.electronjs.org/" target="_blank" rel="noopener noreferrer">https://www.electronjs.org/</a></p><p>中文地址：<a href="https://electron.nodejs.cn/" target="_blank" rel="noopener noreferrer">https://electron.nodejs.cn/</a></p><h4 id="_1-初始化安装-需要注意入口文件为-main-js-默认安装入口为-index-js" tabindex="-1"><a class="header-anchor" href="#_1-初始化安装-需要注意入口文件为-main-js-默认安装入口为-index-js"><span>1.初始化安装，需要注意入口文件为 main.js（默认安装入口为：index.js)</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> init </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_2-安装依赖" tabindex="-1"><a class="header-anchor" href="#_2-安装依赖"><span>2.安装依赖</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> electron --save-dev </span>
<span class="line">// 或</span>
<span class="line"><span class="token function">yarn</span> <span class="token function">add</span> electron</span>
<span class="line">// 或</span>
<span class="line">cnpm <span class="token function">install</span> --save-dev electron</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-修改package-json文件" tabindex="-1"><a class="header-anchor" href="#_3-修改package-json文件"><span>3.修改package.json文件</span></a></h4><p>环境改为“devDependencies”，以及入口命令改为 &quot;electron .&quot;。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string-property property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron .&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-新建入口文件main-js-和index-html" tabindex="-1"><a class="header-anchor" href="#_4-新建入口文件main-js-和index-html"><span>4.新建入口文件main.js 和index.html</span></a></h4><p>main.js配置以下代码：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> app<span class="token punctuation">,</span> BrowserWindow <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">createWindow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> win <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    win<span class="token punctuation">.</span><span class="token function">loadFile</span><span class="token punctuation">(</span><span class="token string">&#39;index.html&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">whenReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-启动应用" tabindex="-1"><a class="header-anchor" href="#_5-启动应用"><span>5.启动应用</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> run start</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这样就启动了一个简单的应用了。</p><h4 id="_6-打包步骤" tabindex="-1"><a class="header-anchor" href="#_6-打包步骤"><span>6.打包步骤</span></a></h4><p>官方打包工具需要node最低版本是14x，不然导入打包工具时会报错。以下是node的各个版本地址，下载指定版本安装即可完成升级或降级：</p><p>安装打包工具</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> --save-dev @electron-forge/cli</span>
<span class="line">npx electron-forge <span class="token function">import</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>执行打包命令</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> run <span class="token function">make</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="方式二-vue项目加入electron" tabindex="-1"><a class="header-anchor" href="#方式二-vue项目加入electron"><span>方式二：vue项目加入electron</span></a></h3><h4 id="_1-安装electron" tabindex="-1"><a class="header-anchor" href="#_1-安装electron"><span>1.安装electron</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> electron --save-dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_2-根目录创建electron文件夹及main-js" tabindex="-1"><a class="header-anchor" href="#_2-根目录创建electron文件夹及main-js"><span>2.根目录创建electron文件夹及main.js</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> app<span class="token punctuation">,</span> BrowserWindow <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;electron&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> fileURLToPath <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;url&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> mainWindow<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> __filename <span class="token operator">=</span> <span class="token function">fileURLToPath</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> __dirname <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>__filename<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">webPreferences</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">//   preload: path.join(__dirname, &#39;preload.js&#39;),</span></span>
<span class="line">      <span class="token literal-property property">nodeIntegration</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">contextIsolation</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 如果需要使用 Node.js API，需禁用隔离</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 加载 Vite 开发服务器或生产环境的静态文件</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    mainWindow<span class="token punctuation">.</span><span class="token function">loadURL</span><span class="token punctuation">(</span><span class="token string">&#39;http://localhost:5173&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Vite 默认开发服务器端口</span></span>
<span class="line">    mainWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">openDevTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 打开开发者工具（可选）</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    mainWindow<span class="token punctuation">.</span><span class="token function">loadFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist/index.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生产环境加载打包后的文件</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  mainWindow<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;closed&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    mainWindow <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">whenReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;activate&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>BrowserWindow<span class="token punctuation">.</span><span class="token function">getAllWindows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;window-all-closed&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>platform <span class="token operator">!==</span> <span class="token string">&#39;darwin&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    app<span class="token punctuation">.</span><span class="token function">quit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-修改package-js" tabindex="-1"><a class="header-anchor" href="#_3-修改package-js"><span>3.修改package.js</span></a></h4><p>加入electron入口地址和启动脚本</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token string-property property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron/main.js&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string-property property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite build&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;electron:dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron .&quot;</span><span class="token punctuation">,</span> </span>
<span class="line">    <span class="token string-property property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run build &amp;&amp; electron .&quot;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-修改vite配置" tabindex="-1"><a class="header-anchor" href="#_4-修改vite配置"><span>4.修改vite配置</span></a></h4><p>资源路径改为相对路径，build包地址指定及端口地址指定。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">base</span><span class="token operator">:</span> <span class="token string">&#39;./&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">build</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">outDir</span><span class="token operator">:</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 输出目录</span></span>
<span class="line">    <span class="token literal-property property">emptyOutDir</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 清空输出目录</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">5173</span><span class="token punctuation">,</span> <span class="token comment">// 确保与 Electron 中的端口号一致</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-打包步骤" tabindex="-1"><a class="header-anchor" href="#_5-打包步骤"><span>5.打包步骤</span></a></h4>`,38)),t("p",null,[n[1]||(n[1]=s("安装",-1)),n[2]||(n[2]=t("code",null,'<font style="color:rgb(44, 44, 54);">electron-builder</font>',-1)),p(a,{style:{color:"rgb(44, 44, 54)"}},{default:e(()=>n[0]||(n[0]=[s("插件",-1)])),_:1,__:[0]})]),n[105]||(n[105]=l(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> electron-builder --save-dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>修改package.js （使用前删掉备注，json不允许备注）</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;appId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;com.example.myapp&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;files&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&quot;dist/**/*&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;electron/**/*&quot;</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;directories&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;output&quot;</span><span class="token operator">:</span> <span class="token string">&quot;release&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;win&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;icon&quot;</span><span class="token operator">:</span> <span class="token string">&quot;public/icon.ico&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 图标</span></span>
<span class="line">    <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nsis&quot;</span><span class="token punctuation">,</span> <span class="token comment">// win包exe类型 x64内核</span></span>
<span class="line">        <span class="token property">&quot;arch&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">          <span class="token string">&quot;x64&quot;</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;nsis&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>  <span class="token comment">// win包配置</span></span>
<span class="line">    <span class="token property">&quot;oneClick&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 显示安装向导界面，不是一键安装</span></span>
<span class="line">    <span class="token property">&quot;perMachine&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 允许每台机器安装一次</span></span>
<span class="line">    <span class="token property">&quot;allowToChangeInstallationDirectory&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token comment">// 允许选择安装目录</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron/main.js&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite build&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;electron:dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron .&quot;</span><span class="token punctuation">,</span> </span>
<span class="line">    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run build &amp;&amp; electron .&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;pack&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron-builder --dir&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;dist&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron-builder&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-实现热重载" tabindex="-1"><a class="header-anchor" href="#_6-实现热重载"><span>6.实现热重载</span></a></h4><h5 id="electronmon" tabindex="-1"><a class="header-anchor" href="#electronmon"><span>electronmon</span></a></h5><p>每次修改调试都需要重新运行命令，这个时候就适合使用热重载插件：electronmon。</p><p>安装：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> electronmon --save-dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>修改package.js</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token string">&quot;scripts&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;dev&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;vite&quot;</span>,</span>
<span class="line">    <span class="token string">&quot;build&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;vite build&quot;</span>,</span>
<span class="line">    <span class="token string">&quot;electron:dev&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;electronmon .&quot;</span>,</span>
<span class="line">    <span class="token string">&quot;start&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;npm run build &amp;&amp; electron .&quot;</span>,</span>
<span class="line">    <span class="token string">&quot;pack&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;electron-builder --dir&quot;</span>,</span>
<span class="line">    <span class="token string">&quot;dist&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;electron-builder&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种热更新只针对 electron目录代码生效。</p><h5 id="nodemon" tabindex="-1"><a class="header-anchor" href="#nodemon"><span>nodemon</span></a></h5><p>安装：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> nodemon --save-dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>根目录 nodemon.json配置文件</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 忽略目录</span></span>
<span class="line">  <span class="token property">&quot;ignore&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&quot;dist&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;release&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;node_modules&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;public&quot;</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// 重新编译快捷键 - r</span></span>
<span class="line">  <span class="token property">&quot;restartable&quot;</span><span class="token operator">:</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// 监听哪些</span></span>
<span class="line">  <span class="token property">&quot;watch&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;*.*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// 监听文件后缀</span></span>
<span class="line">  <span class="token property">&quot;ext&quot;</span><span class="token operator">:</span> <span class="token string">&quot;html,js,css,vue&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token comment">// node环境变量</span></span>
<span class="line">  <span class="token property">&quot;exec&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node --experimental-vm-modules --no-warnings&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改package文件</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;build&quot;</span><span class="token operator">:</span> <span class="token string">&quot;vite build&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;electron:dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;nodemon --exec electron .&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;npm run build &amp;&amp; electron .&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;pack&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron-builder --dir&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;dist&quot;</span><span class="token operator">:</span> <span class="token string">&quot;electron-builder&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>开发运行：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line">npm run electron<span class="token operator">:</span>dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="方式三-使用electron-vite" tabindex="-1"><a class="header-anchor" href="#方式三-使用electron-vite"><span>方式三：使用electron-vite</span></a></h3><p>electron官方出品<a href="https://cn.electron-vite.org/" target="_blank" rel="noopener noreferrer">https://cn.electron-vite.org/</a></p><h4 id="_1-前提条件" tabindex="-1"><a class="header-anchor" href="#_1-前提条件"><span>1.前提条件</span></a></h4><p>electron-vite 需要 Node.js 版本 18+， Vite 版本 4.0+</p><h4 id="_2-安装命令" tabindex="-1"><a class="header-anchor" href="#_2-安装命令"><span>2.安装命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 安装</span></span>
<span class="line"><span class="token function">npm</span> i electron-vite <span class="token parameter variable">-D</span></span>
<span class="line"><span class="token comment"># 创建</span></span>
<span class="line"><span class="token function">npm</span> create @quick-start/electron@latest</span>
<span class="line"><span class="token function">yarn</span> create @quick-start/electron</span>
<span class="line"><span class="token function">pnpm</span> create @quick-start/electron</span>
<span class="line"></span>
<span class="line"><span class="token comment">#或者直接拉取安装</span></span>
<span class="line">npx degit alex8088/electron-vite-boilerplate electron-app</span>
<span class="line"><span class="token builtin class-name">cd</span> electron-app</span>
<span class="line"><span class="token function">npm</span> <span class="token function">install</span></span>
<span class="line"><span class="token function">npm</span> run dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://cdn.nlark.com/yuque/0/2025/png/1460947/1745543589931-f167e33d-b990-4fb6-ab5a-9256124bfeb3.png" alt=""></p><h4 id="_3-子窗口打开路由方案" tabindex="-1"><a class="header-anchor" href="#_3-子窗口打开路由方案"><span>3.子窗口打开路由方案</span></a></h4>`,28)),t("p",null,[n[4]||(n[4]=s("官方提供的方式如下，但是这种写法打完包build之后会出现问题，子窗口无法打开路由只可以显示当前页面，需要给loadFile传递第二个路由参数（",-1)),t("strong",null,[p(a,{style:{color:"#DF2A3F"}},{default:e(()=>n[3]||(n[3]=[s("vue/react必须是hash路由",-1)])),_:1,__:[3]})]),n[5]||(n[5]=s("）：",-1))]),n[106]||(n[106]=l('<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>is<span class="token punctuation">.</span>dev <span class="token operator">&amp;&amp;</span> process<span class="token punctuation">.</span>env<span class="token punctuation">[</span><span class="token string">&#39;ELECTRON_RENDERER_URL&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">let</span> url <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">[</span><span class="token string">&#39;ELECTRON_RENDERER_URL&#39;</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/#</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>routepath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></span>\n<span class="line">  childWin<span class="token punctuation">.</span><span class="token function">loadURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token comment">// 官方写法：childWin.loadFile(path.join(__dirname, `../renderer/index.html`))</span></span>\n<span class="line">  childWin<span class="token punctuation">.</span><span class="token function">loadFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">../renderer/index.html</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hash</span><span class="token operator">:</span> routepath <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="核心知识" tabindex="-1"><a class="header-anchor" href="#核心知识"><span>核心知识</span></a></h2><h3 id="_1-进程模型" tabindex="-1"><a class="header-anchor" href="#_1-进程模型"><span>1.进程模型</span></a></h3>',3)),t("ul",null,[t("li",null,[p(a,{style:{color:"rgb(28, 30, 33)"}},{default:e(()=>n[6]||(n[6]=[s("主进程：electron主进程使用 ",-1)])),_:1,__:[6]}),n[9]||(n[9]=s("[",-1)),p(a,{style:{color:"rgb(2, 131, 153)"}},{default:e(()=>n[7]||(n[7]=[s("BrowserWindow",-1)])),_:1,__:[7]}),n[10]||(n[10]=s("](https://electron.nodejs.cn/docs/latest/api/browser-window)",-1)),p(a,{style:{color:"rgb(28, 30, 33)"}},{default:e(()=>n[8]||(n[8]=[s(" 模块创建和管理应用窗口。因此main.js就是electron的主进程文件。",-1)])),_:1,__:[8]})]),t("li",null,[p(a,{style:{color:"rgb(28, 30, 33)"}},{default:e(()=>n[11]||(n[11]=[s("渲染进程：Electron 应用每个打开的 ",-1)])),_:1,__:[11]}),n[14]||(n[14]=s("`",-1)),p(a,{style:{color:"rgb(28, 30, 33)","background-color":"rgb(246, 247, 248)"}},{default:e(()=>n[12]||(n[12]=[s("BrowserWindow",-1)])),_:1,__:[12]}),n[15]||(n[15]=s("`",-1)),p(a,{style:{color:"rgb(28, 30, 33)"}},{default:e(()=>n[13]||(n[13]=[s("窗口就会生成一个渲染进程。业务功能都是在渲染进程文件中实现（vue项目的views/传统项目的html/js）。",-1)])),_:1,__:[13]})]),t("li",null,[p(a,{style:{color:"rgb(28, 30, 33)"}},{default:e(()=>n[16]||(n[16]=[s("预加载脚本（preload.js）：主进程与渲染进程之间的通信桥梁。在渲染进程执行，同时在窗口文件执行前执行，通常用于定义全局数据。",-1)])),_:1,__:[16]})])]),t("p",null,[n[18]||(n[18]=s("程序执行顺序：",-1)),t("strong",null,[p(a,{style:{color:"#117CEE"}},{default:e(()=>n[17]||(n[17]=[s("node主进程 => preload预加载 => 渲染进程",-1)])),_:1,__:[17]})])]),n[107]||(n[107]=l(`<h3 id="_2-进程通信" tabindex="-1"><a class="header-anchor" href="#_2-进程通信"><span>2.进程通信</span></a></h3><h5 id="主进程设置全局变量" tabindex="-1"><a class="header-anchor" href="#主进程设置全局变量"><span>主进程设置全局变量</span></a></h5><p>通过预加载文件传递至渲染进程。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> contextBridge<span class="token punctuation">,</span> ipcRenderer <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">contextBridge<span class="token punctuation">.</span><span class="token function">exposeInMainWorld</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 主进程=&gt; 渲染进程 定义全局变量</span></span>
<span class="line">  <span class="token literal-property property">systemData</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">node_version</span><span class="token operator">:</span> process<span class="token punctuation">.</span>versions<span class="token punctuation">.</span>node<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">chrome_version</span><span class="token operator">:</span> process<span class="token punctuation">.</span>versions<span class="token punctuation">.</span>chrome<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">electron_version</span><span class="token operator">:</span> process<span class="token punctuation">.</span>versions<span class="token punctuation">.</span>electron<span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>渲染进程获取：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> computed<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> system <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> electron<span class="token punctuation">.</span>systemData</span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>system<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="渲染进程与主进程通信-invoke-handle" tabindex="-1"><a class="header-anchor" href="#渲染进程与主进程通信-invoke-handle"><span>渲染进程与主进程通信 invoke &lt;=&gt; handle</span></a></h5><p>主进程main.js设置管道ipcMain及事件监听</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"> ipcMain<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token string">&#39;file-read&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;D:/hello.txt&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>preload.js如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> contextBridge<span class="token punctuation">,</span> ipcRenderer <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 全局API</span></span>
<span class="line">contextBridge<span class="token punctuation">.</span><span class="token function">exposeInMainWorld</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// invoke 双向通信，既能发送，也能接收</span></span>
<span class="line">  <span class="token function-variable function">readFile</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> ipcRenderer<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">&#39;file-read&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>页面向主进程通信，调用electron的API</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">read</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> electron<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="渲染进程单向通信主进程-send-on" tabindex="-1"><a class="header-anchor" href="#渲染进程单向通信主进程-send-on"><span>渲染进程单向通信主进程 send =&gt; on</span></a></h5><p>渲染页面：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">&quot;texthandle&quot;</span><span class="token operator">&gt;</span>写入<span class="token number">123456</span>到a<span class="token punctuation">.</span>text<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">text</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    electron<span class="token punctuation">.</span><span class="token function">saveFile</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>预加载文件：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">contextBridge<span class="token punctuation">.</span><span class="token function">exposeInMainWorld</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 渲染进程单向调用预加载脚本 =&gt; 预加载触发主进程监听事件 =&gt;  主进程执行</span></span>
<span class="line">  <span class="token function-variable function">saveFile</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    ipcRenderer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;file-save&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>主进程：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">&#39;fs&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 监听渲染进程发送的消息(主进程接收)</span></span>
<span class="line">ipcMain<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;file-save&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 写入到d盘文件中</span></span>
<span class="line">  fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;D:/hello.txt&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="主进程单向与渲染进程通信-send-on" tabindex="-1"><a class="header-anchor" href="#主进程单向与渲染进程通信-send-on"><span>主进程单向与渲染进程通信 send =&gt; on</span></a></h5><p>主进程加载注册监听事件，注意一定要在did-finish-load回调里，不然渲染进程无法接受到。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 主进程发消息，在加载页面前注册监听事件</span></span>
<span class="line">mainWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;did-finish-load&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;did-finish-load&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  mainWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;main-msg&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;我是主进程，发送123456&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>预加载文件添加调取主进程的方法：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">contextBridge<span class="token punctuation">.</span><span class="token function">exposeInMainWorld</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 定义渲染页面调用方法</span></span>
<span class="line">  <span class="token function-variable function">getMainMsg</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    ipcRenderer<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;main-msg&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> message</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">callback</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>渲染进程获取主进程数据：</p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue"><pre><code><span class="line">const mainMsg = ref(&#39;&#39;);</span>
<span class="line">onMounted(() =&gt; {</span>
<span class="line">    // 组件挂载时注册监听</span>
<span class="line">    electron.getMainMsg((message) =&gt; {</span>
<span class="line">      mainMsg.value = message; // 更新响应式变量</span>
<span class="line">    });</span>
<span class="line">});</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="渲染进程之间通信" tabindex="-1"><a class="header-anchor" href="#渲染进程之间通信"><span>渲染进程之间通信</span></a></h5><p>渲染页面1设置参数 通过send传递给main主进程，main主进程通过窗口 mainWindow.webContents.send 将数据传递出管道，渲染页面2通过on监听主进程管道事件，从而实现渲染进程之间通信。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// set.vue 渲染页面1发送数据</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">save</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">await</span> api<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;set-menu-md&#39;</span><span class="token punctuation">,</span> showMD <span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">sendMSG</span><span class="token punctuation">(</span><span class="token string">&#39;保存成功&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 主进程监听及传递管道数据  </span></span>
<span class="line">ipcMain<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;set-menu-md&#39;</span><span class="token punctuation">,</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span>flag</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  mainWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&#39;set-menu-flag&#39;</span><span class="token punctuation">,</span>flag<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// menu.vue 页面 获取主进程传递的数据</span></span>
<span class="line">window<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;set-menu-flag&quot;</span> <span class="token punctuation">,</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> flag</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;set-menu-flag&#39;</span><span class="token punctuation">,</span>flag<span class="token punctuation">)</span></span>
<span class="line">  status <span class="token operator">=</span> flag</span>
<span class="line">  <span class="token function">initMenus</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-窗口设置" tabindex="-1"><a class="header-anchor" href="#_3-窗口设置"><span>3.窗口设置</span></a></h3><h5 id="常用属性" tabindex="-1"><a class="header-anchor" href="#常用属性"><span>常用属性</span></a></h5><p>通过BrowserWindow创建窗口的时候可以设置窗口的属性：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token comment">// 窗口宽度 minWidth | maxWidth</span></span>
<span class="line">  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span> <span class="token comment">// 窗口高度 minHeight | maxHeight</span></span>
<span class="line">  <span class="token literal-property property">resizable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 窗口禁止缩放</span></span>
<span class="line">  <span class="token literal-property property">show</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示</span></span>
<span class="line">  <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 窗口位置x轴,单位px</span></span>
<span class="line">  <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 窗口位置y轴,单位px</span></span>
<span class="line"></span>
<span class="line">  <span class="token literal-property property">hasShadow</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否有阴影</span></span>
<span class="line">  <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>  <span class="token comment">// 窗口背景色</span></span>
<span class="line">  <span class="token literal-property property">autoHideMenuBar</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token comment">// 隐藏窗口菜单</span></span>
<span class="line">  </span>
<span class="line">  <span class="token literal-property property">webPreferences</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 预加载文件设置</span></span>
<span class="line">    <span class="token literal-property property">preload</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;preload.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">contextIsolation</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 必须启用上下文隔离，不然无法</span></span>
<span class="line">    <span class="token literal-property property">nodeIntegration</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 禁用 Node.js 集成</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="窗口样式设置" tabindex="-1"><a class="header-anchor" href="#窗口样式设置"><span>窗口样式设置</span></a></h5><ul><li>a.默认窗口：左边icon+title，右边关闭缩小操作按钮</li><li>b.无标题，无关闭缩小放大操作按钮</li></ul>`,36)),t("p",null,[n[21]||(n[21]=s("通过**",-1)),p(a,{style:{color:"#DF2A3F"}},{default:e(()=>n[19]||(n[19]=[s("titleBarStyle",-1)])),_:1,__:[19]}),n[22]||(n[22]=t("strong",null,"设置，",-1)),p(a,{style:{color:"#DF2A3F"}},{default:e(()=>n[20]||(n[20]=[s("会导致窗口无法移动，窗口内点击事件无法触发",-1)])),_:1,__:[20]}),n[23]||(n[23]=s("**！",-1))]),n[108]||(n[108]=l(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">   <span class="token literal-property property">titleBarStyle</span><span class="token operator">:</span> <span class="token string">&#39;hidden&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 隐藏标题栏及缩小关闭操作按钮</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解决办法一：给窗口元素添加可拖拽样式-webkit-app-region: drag，子元素（需交互的元素）将拖拽移除。</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css"><pre><code><span class="line"><span class="token selector">#app</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">-webkit-app-region</span><span class="token punctuation">:</span> drag<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.content</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">-webkit-app-region</span><span class="token punctuation">:</span> no-drag<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解决办法二：通过渲染进程与主进程通信实现。</p><p>渲染页面：</p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>titlebar<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@mousedown</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mousedown<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">  <span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 节流函数优化频繁的 IPC 通信</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">throttleMove</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> delay <span class="token operator">=</span> <span class="token number">16</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> lastCall <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> now <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> lastCall <span class="token operator">&gt;=</span> delay<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span></span>
<span class="line">        lastCall <span class="token operator">=</span> now</span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> isKeyDown <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> dinatesX <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> dinatesY <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">mousedown</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    isKeyDown<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">    dinatesX<span class="token punctuation">.</span>value <span class="token operator">=</span> e<span class="token punctuation">.</span>x</span>
<span class="line">    dinatesY<span class="token punctuation">.</span>value <span class="token operator">=</span> e<span class="token punctuation">.</span>y</span>
<span class="line">    <span class="token comment">// 获取初始鼠标屏幕坐标</span></span>
<span class="line">    document<span class="token punctuation">.</span>onmousemove <span class="token operator">=</span> <span class="token function">throttleMove</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>isKeyDown<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 获取移动后的鼠标屏幕坐标</span></span>
<span class="line">        <span class="token keyword">let</span> x <span class="token operator">=</span> ev<span class="token punctuation">.</span>screenX <span class="token operator">-</span> dinatesX<span class="token punctuation">.</span>value</span>
<span class="line">        <span class="token keyword">let</span> y <span class="token operator">=</span> ev<span class="token punctuation">.</span>screenY <span class="token operator">-</span> dinatesY<span class="token punctuation">.</span>value</span>
<span class="line">        <span class="token comment">// 计算鼠标移动后的坐标差值</span></span>
<span class="line">        <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token literal-property property">appX</span><span class="token operator">:</span> x<span class="token punctuation">,</span></span>
<span class="line">          <span class="token literal-property property">appY</span><span class="token operator">:</span> y</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        electron<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">&#39;move&#39;</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    document<span class="token punctuation">.</span><span class="token function-variable function">onmouseup</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      isKeyDown<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css"></span>
<span class="line">  <span class="token selector">.titlebar</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">height</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">background</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">-webkit-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">cursor</span><span class="token punctuation">:</span> grab<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token selector">.titlebar:active</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">cursor</span><span class="token punctuation">:</span> grabbing<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>主进程main.js：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">ipcMain<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token string">&#39;move&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> win <span class="token operator">=</span> BrowserWindow<span class="token punctuation">.</span><span class="token function">getFocusedWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>win<span class="token punctuation">)</span> <span class="token keyword">return</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 添加边界检查，遇到边界不再移动</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">{</span> width<span class="token punctuation">,</span> height <span class="token punctuation">}</span> <span class="token operator">=</span> win<span class="token punctuation">.</span><span class="token function">getBounds</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">{</span> workArea <span class="token punctuation">}</span> <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">getPrimaryDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> safeX <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>appX<span class="token punctuation">,</span> workArea<span class="token punctuation">.</span>width <span class="token operator">-</span> width<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">const</span> safeY <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>appY<span class="token punctuation">,</span> workArea<span class="token punctuation">.</span>height <span class="token operator">-</span> height<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token comment">// 设置活动窗口位置</span></span>
<span class="line">  win<span class="token punctuation">.</span><span class="token function">setPosition</span><span class="token punctuation">(</span>safeX<span class="token punctuation">,</span> safeY<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>c.无标题，无关闭缩小放大操作按钮，也无法正常移动窗口，借用b场景解决方案。</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">   <span class="token literal-property property">frame</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 隐藏标题栏及缩小关闭操作按钮，需要自定义关闭缩小按钮</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>放大缩小关闭自定义：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">ipcMain<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token string">&#39;oper&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span>type</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>type<span class="token operator">==</span><span class="token string">&#39;min&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">      mainWindow<span class="token punctuation">.</span><span class="token function">minimize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>type<span class="token operator">==</span><span class="token string">&#39;max&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">       <span class="token comment">// 解决单向放大后无法恢复</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>mainWindow<span class="token punctuation">.</span><span class="token function">isMaximized</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        mainWindow<span class="token punctuation">.</span><span class="token function">unmaximize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        mainWindow<span class="token punctuation">.</span><span class="token function">maximize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>type<span class="token operator">==</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 窗口关闭</span></span>
<span class="line">      mainWindow<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token comment">// 退出应用</span></span>
<span class="line">      app<span class="token punctuation">.</span><span class="token function">quit</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>渲染页面：</p><div class="language-vue line-numbers-mode" data-highlighter="prismjs" data-ext="vue"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>min<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>缩小<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>max<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>放大<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>close<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>关闭<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">min</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    electron<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">&#39;oper&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;min&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">max</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    electron<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">&#39;oper&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;max&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">close</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    electron<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token string">&#39;oper&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="窗口锁定" tabindex="-1"><a class="header-anchor" href="#窗口锁定"><span>窗口锁定</span></a></h5><p>通过设置 setKiosk(布尔) 改变窗口锁定状态。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">win<span class="token punctuation">.</span><span class="token function">setKiosk</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>判断是否锁定通过 isKiosk()获取</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">win<span class="token punctuation">.</span><span class="token function">isKiosk</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="窗口置顶" tabindex="-1"><a class="header-anchor" href="#窗口置顶"><span>窗口置顶</span></a></h5><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 方案一</span></span>
<span class="line"><span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">alwaysOnTop</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 置顶</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 方案二</span></span>
<span class="line">win<span class="token punctuation">.</span><span class="token function">setAlwaysOnTop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="窗口透明" tabindex="-1"><a class="header-anchor" href="#窗口透明"><span>窗口透明</span></a></h5><p>transparent透明只会在无边框模式下生效。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">frame</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 无边框</span></span>
<span class="line">  <span class="token literal-property property">transparent</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 透明</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>渲染页面设置透明效果样式。如果不生效，请检测body及元素父级是否有背景色。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token punctuation">.</span>box<span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">position</span><span class="token operator">:</span> absolute<span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">bottom</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">right</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">;</span></span>
<span class="line">        background<span class="token operator">-</span>color<span class="token operator">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">color</span><span class="token operator">:</span> #fff<span class="token punctuation">;</span></span>
<span class="line">        border<span class="token operator">-</span>radius<span class="token operator">:</span> 30px<span class="token punctuation">;</span></span>
<span class="line">        <span class="token literal-property property">overflow</span><span class="token operator">:</span> hidden<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-屏幕信息获取" tabindex="-1"><a class="header-anchor" href="#_4-屏幕信息获取"><span>4.屏幕信息获取</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> app<span class="token punctuation">,</span> BrowserWindow <span class="token punctuation">,</span>ipcMain <span class="token punctuation">,</span>screen <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;electron&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 获取主屏信息</span></span>
<span class="line"><span class="token keyword">const</span> primaryDisplay <span class="token operator">=</span> screen<span class="token punctuation">.</span><span class="token function">getPrimaryDisplay</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 例如：获取屏幕宽高</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> width<span class="token punctuation">,</span> height <span class="token punctuation">}</span> <span class="token operator">=</span> primaryDisplay<span class="token punctuation">.</span>workAreaSize</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>getPrimaryDisplay() 返回以下主屏信息</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">accelerometerSupport</span><span class="token operator">:</span> <span class="token string">&#39;unknown&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">bounds</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1920</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">1080</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 屏幕边界</span></span>
<span class="line">  <span class="token literal-property property">colorDepth</span><span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">colorSpace</span><span class="token operator">:</span> <span class="token string">&#39;{primaries:BT709, transfer:SRGB, matrix:RGB, range:FULL}&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 屏幕色彩</span></span>
<span class="line">  <span class="token literal-property property">depthPerComponent</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">detected</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">displayFrequency</span><span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token comment">//  屏幕频率</span></span>
<span class="line">  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2980471640</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">internal</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;DP2VGA  V205&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">maximumCursorSize</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">monochrome</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">nativeOrigin</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> </span>
<span class="line">  <span class="token literal-property property">rotation</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">scaleFactor</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1920</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">1080</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 屏幕大小</span></span>
<span class="line">  <span class="token literal-property property">workArea</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1920</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">1040</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> </span>
<span class="line">  <span class="token literal-property property">workAreaSize</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1920</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">1040</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 可用工作区</span></span>
<span class="line">  <span class="token literal-property property">touchSupport</span><span class="token operator">:</span> <span class="token string">&#39;unknown&#39;</span>  <span class="token comment">// 是否支持点击</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-窗口缩小至托盘" tabindex="-1"><a class="header-anchor" href="#_5-窗口缩小至托盘"><span>5.窗口缩小至托盘</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> app<span class="token punctuation">,</span> BrowserWindow <span class="token punctuation">,</span>ipcMain <span class="token punctuation">,</span>Tray <span class="token punctuation">,</span> Menu <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;electron&#39;</span></span>
<span class="line"><span class="token keyword">let</span> mainWindow <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>  tray <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">whenReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">   <span class="token comment">// 窗口操作</span></span>
<span class="line">  ipcMain<span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token string">&#39;oper&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">&#39;min&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      mainWindow<span class="token punctuation">.</span><span class="token function">minimize</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">&#39;close&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 窗口隐藏到托盘</span></span>
<span class="line">      mainWindow<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  </span>
<span class="line">  <span class="token comment">// 创建托盘图标</span></span>
<span class="line">  tray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Tray</span><span class="token punctuation">(</span>icon<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> contextMenu <span class="token operator">=</span> Menu<span class="token punctuation">.</span><span class="token function">buildFromTemplate</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;显示窗口&#39;</span><span class="token punctuation">,</span> <span class="token function-variable function">click</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> mainWindow<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span> <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;退出&#39;</span><span class="token punctuation">,</span> <span class="token function-variable function">click</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> app<span class="token punctuation">.</span><span class="token function">quit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  tray<span class="token punctuation">.</span><span class="token function">setToolTip</span><span class="token punctuation">(</span><span class="token string">&#39;我的应用&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  tray<span class="token punctuation">.</span><span class="token function">setContextMenu</span><span class="token punctuation">(</span>contextMenu<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 监听托盘图标点击</span></span>
<span class="line">  tray<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> mainWindow<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="小技巧" tabindex="-1"><a class="header-anchor" href="#小技巧"><span>小技巧</span></a></h2><h4 id="_1-默认打开开发工具-主进程main-js添加" tabindex="-1"><a class="header-anchor" href="#_1-默认打开开发工具-主进程main-js添加"><span>1.默认打开开发工具，主进程main.js添加</span></a></h4><div class="language-plain line-numbers-mode" data-highlighter="prismjs" data-ext="plain"><pre><code><span class="line">mainWindow.webContents.openDevTools(); </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_2-设置屏幕位置方法" tabindex="-1"><a class="header-anchor" href="#_2-设置屏幕位置方法"><span>2.设置屏幕位置方法</span></a></h4><p>方案一：通过BrowserWindow设置x,y，缺点必须同时设置x,y的坐标值，否则不生效!</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">10</span></span>
<span class="line"><span class="token punctuation">}</span>）</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,38)),t("p",null,[n[41]||(n[41]=s("方案二：通过win.setBounds(",-1)),p(a,{style:{color:"rgb(57, 58, 52)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[24]||(n[24]=[s("{",-1)])),_:1,__:[24]}),p(a,{style:{color:"rgb(54, 172, 170)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[25]||(n[25]=[s("x",-1)])),_:1,__:[25]}),p(a,{style:{color:"rgb(57, 58, 52)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[26]||(n[26]=[s(":",-1)])),_:1,__:[26]}),p(a,{style:{color:"rgb(54, 172, 170)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[27]||(n[27]=[s("440",-1)])),_:1,__:[27]}),p(a,{style:{color:"rgb(57, 58, 52)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[28]||(n[28]=[s(",",-1)])),_:1,__:[28]}),p(a,{style:{color:"rgb(54, 172, 170)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[29]||(n[29]=[s("y",-1)])),_:1,__:[29]}),p(a,{style:{color:"rgb(57, 58, 52)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[30]||(n[30]=[s(":",-1)])),_:1,__:[30]}),p(a,{style:{color:"rgb(54, 172, 170)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[31]||(n[31]=[s("225",-1)])),_:1,__:[31]}),p(a,{style:{color:"rgb(57, 58, 52)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[32]||(n[32]=[s(",",-1)])),_:1,__:[32]}),p(a,{style:{color:"rgb(54, 172, 170)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[33]||(n[33]=[s("width",-1)])),_:1,__:[33]}),p(a,{style:{color:"rgb(57, 58, 52)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[34]||(n[34]=[s(":",-1)])),_:1,__:[34]}),p(a,{style:{color:"rgb(54, 172, 170)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[35]||(n[35]=[s("800",-1)])),_:1,__:[35]}),p(a,{style:{color:"rgb(57, 58, 52)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[36]||(n[36]=[s(",",-1)])),_:1,__:[36]}),p(a,{style:{color:"rgb(54, 172, 170)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[37]||(n[37]=[s("height",-1)])),_:1,__:[37]}),p(a,{style:{color:"rgb(57, 58, 52)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[38]||(n[38]=[s(":",-1)])),_:1,__:[38]}),p(a,{style:{color:"rgb(54, 172, 170)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[39]||(n[39]=[s("600",-1)])),_:1,__:[39]}),p(a,{style:{color:"rgb(57, 58, 52)","background-color":"rgb(246, 248, 250)"}},{default:e(()=>n[40]||(n[40]=[s("}",-1)])),_:1,__:[40]}),n[42]||(n[42]=s(") ,可以实现x,y仅设置一个属性，另外一个属性自动居中效果！",-1))]),n[109]||(n[109]=l(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">win<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">440</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">225</span><span class="token punctuation">,</span><span class="token literal-property property">width</span><span class="token operator">:</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token literal-property property">height</span><span class="token operator">:</span><span class="token number">600</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">win<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">x</span><span class="token operator">:</span><span class="token number">440</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// x轴440，Y轴居中-垂直</span></span>
<span class="line">win<span class="token punctuation">.</span><span class="token function">setBounds</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">y</span><span class="token operator">:</span><span class="token number">40</span><span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token comment">// y轴40，x轴居中-水平</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方案三：通过win.setPosition(x,y)设置窗口位置，x,y必须都有值！</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">win<span class="token punctuation">.</span><span class="token function">setPosition</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_3-主进程加载页面及文件" tabindex="-1"><a class="header-anchor" href="#_3-主进程加载页面及文件"><span>3.主进程加载页面及文件</span></a></h4><p>单文件主窗口</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 开发环境加载网页</span></span>
<span class="line">  mainWindow<span class="token punctuation">.</span><span class="token function">loadURL</span><span class="token punctuation">(</span><span class="token string">&#39;http://localhost:5173&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Vite 默认开发服务器端口</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 正式环境加载文件</span></span>
<span class="line">  mainWindow<span class="token punctuation">.</span><span class="token function">loadFile</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist/index.html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生产环境加载打包后的文件</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-自定义本地图片资源协议" tabindex="-1"><a class="header-anchor" href="#_4-自定义本地图片资源协议"><span>4.自定义本地图片资源协议</span></a></h4><p>由于浏览器默认不允许加载本地资源，隐藏需要通过Nodejs作为中间层转发资源，解决办法：主线程自定义协议asset:// 拦截然后将资源转发给渲染进程。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 注册自定义协议,用于加载本地图片资源 asset://</span></span>
<span class="line">protocol<span class="token punctuation">.</span><span class="token function">registerFileProtocol</span><span class="token punctuation">(</span><span class="token string">&#39;asset&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> urlPath <span class="token operator">=</span> request<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^asset:\\/\\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 去掉 asset://</span></span>
<span class="line">  urlPath <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>urlPath<span class="token punctuation">)</span> <span class="token comment">// 解码 URL 编码部分</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 如果路径以 C:/ 开头，改为 C:\\ 格式</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[A-Za-z]:[\\\\\\/]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>urlPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    urlPath <span class="token operator">=</span> urlPath<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\/</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;\\\\&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 统一为 Windows 路径</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 确保路径是绝对路径且存在</span></span>
<span class="line">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> fullPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>urlPath<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> fullPath <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 正确返回路径对象</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;无法解析路径:&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">6</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// ERR_ACCESS_DENIED</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>渲染进程仅需要将协议头&quot;asset://&quot;添加到路径前边即可。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">imgList<span class="token punctuation">.</span>value <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">src</span><span class="token operator">:</span> item<span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;asset://&#39;</span> <span class="token operator">+</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-自定义本地音频资源协议" tabindex="-1"><a class="header-anchor" href="#_5-自定义本地音频资源协议"><span>5.自定义本地音频资源协议</span></a></h4><p>同图片协议一致，本地音频也是无法直接播放的，需要我们用nodejs转发一次</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> mime <span class="token keyword">from</span> <span class="token string">&#39;mime-types&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">...</span></span>
<span class="line">protocol<span class="token punctuation">.</span><span class="token function">registerFileProtocol</span><span class="token punctuation">(</span><span class="token string">&#39;electron&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 1. 移除协议头</span></span>
<span class="line">  <span class="token keyword">let</span> rawPath <span class="token operator">=</span> request<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^electron:\\/\\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">let</span> urlPath <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>rawPath<span class="token punctuation">)</span> <span class="token comment">// 解码 URL 编码部分</span></span>
<span class="line">  <span class="token comment">// 如果路径以 C:/ 开头，改为 C:\\ 格式</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[A-Za-z]:[\\\\\\/]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>urlPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    urlPath <span class="token operator">=</span> urlPath<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\/</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;\\\\&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 统一为 Windows 路径</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token comment">// 确保路径是绝对路径且存在</span></span>
<span class="line">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> fullPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>urlPath<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> mimeType <span class="token operator">=</span> mime<span class="token punctuation">.</span><span class="token function">lookup</span><span class="token punctuation">(</span>fullPath<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;application/octet-stream&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 处理Range请求头</span></span>
<span class="line">    <span class="token keyword">const</span> rangeHeader <span class="token operator">=</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>Range <span class="token operator">||</span> request<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>range<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>rangeHeader<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> stats <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>fullPath<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">const</span> totalSize <span class="token operator">=</span> stats<span class="token punctuation">.</span>size<span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">const</span> range <span class="token operator">=</span> rangeHeader<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">bytes=(\\d+)-(\\d*)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">const</span> start <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>range<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">const</span> end <span class="token operator">=</span> range<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>range<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">:</span> totalSize <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">// 确保范围有效</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&gt;=</span> totalSize <span class="token operator">||</span> end <span class="token operator">&gt;=</span> totalSize<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">{</span> </span>
<span class="line">          <span class="token literal-property property">statusCode</span><span class="token operator">:</span> <span class="token number">416</span><span class="token punctuation">,</span> <span class="token comment">// Range Not Satisfiable</span></span>
<span class="line">          <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;Content-Range&#39;</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">bytes */</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>totalSize<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">      <span class="token comment">// 返回206 Partial Content</span></span>
<span class="line">      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">statusCode</span><span class="token operator">:</span> <span class="token number">206</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token string-property property">&#39;Content-Range&#39;</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">bytes </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>start<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>end<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>totalSize<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token string-property property">&#39;Accept-Ranges&#39;</span><span class="token operator">:</span> <span class="token string">&#39;bytes&#39;</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token string-property property">&#39;Content-Length&#39;</span><span class="token operator">:</span> end <span class="token operator">-</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">          <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> mimeType</span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">path</span><span class="token operator">:</span> fullPath<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">offset</span><span class="token operator">:</span> start<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">length</span><span class="token operator">:</span> end <span class="token operator">-</span> start <span class="token operator">+</span> <span class="token number">1</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 普通请求返回整个文件</span></span>
<span class="line">      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">{</span> </span>
<span class="line">        <span class="token literal-property property">path</span><span class="token operator">:</span> fullPath<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> mimeType <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;无法解析路径:&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">6</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// ERR_ACCESS_DENIED</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>渲染进程仅需将音频路由前加协议头&quot;electron://&quot;。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token function">getAssetURL</span><span class="token punctuation">(</span><span class="token parameter">filePath</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>filePath<span class="token punctuation">)</span> <span class="token keyword">return</span></span>
<span class="line">  <span class="token keyword">const</span> processedPath <span class="token operator">=</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span> filePath<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\\\</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">electron://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>processedPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-快捷键监听" tabindex="-1"><a class="header-anchor" href="#_6-快捷键监听"><span>6.快捷键监听</span></a></h4><p>下面是快捷键注册的三种场景，要根据实际情况选择。</p>`,18)),t("p",null,[n[44]||(n[44]=s("方法一：渲染进程页面注册监听事件，仅对**",-1)),p(a,{style:{color:"#117CEE"}},{default:e(()=>n[43]||(n[43]=[s("当前页面",-1)])),_:1,__:[43]}),n[45]||(n[45]=s("**生效",-1))]),t("p",null,[n[48]||(n[48]=s("方法二：中间件预加载里面添加，仅对当前应用**",-1)),p(a,{style:{color:"#117CEE"}},{default:e(()=>n[46]||(n[46]=[s("窗口显示",-1)])),_:1,__:[46]}),n[49]||(n[49]=t("strong",null,"的时候生效，",-1)),p(a,{style:{color:"#DF2A3F"}},{default:e(()=>n[47]||(n[47]=[s("最小化或窗口隐藏不生效",-1)])),_:1,__:[47]}),n[50]||(n[50]=s("**！",-1))]),n[110]||(n[110]=l(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">let</span> keys <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;keydown&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 记录按键状态</span></span>
<span class="line">    keys<span class="token punctuation">[</span>event<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 检查是否同时按下了Ctrl和S键</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>keys<span class="token punctuation">[</span><span class="token string">&#39;Control&#39;</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> keys<span class="token punctuation">[</span><span class="token string">&#39;s&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 阻止默认行为</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Ctrl + S 被按下了&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 在这里执行你想要的操作</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;keyup&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 更新按键状态</span></span>
<span class="line">    <span class="token keyword">delete</span> keys<span class="token punctuation">[</span>event<span class="token punctuation">.</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方法三：在主进程里注册全局监听事件，只要应用没关闭都可以监听到。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> app<span class="token punctuation">,</span>  BrowserWindow<span class="token punctuation">,</span>  globalShortcut <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;electron&#39;</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">whenReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 注册全局快捷键</span></span>
<span class="line">  globalShortcut<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">&#39;CommandOrControl+Shift+S&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Ctrl + Shift + S 被按下了&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// 在这里执行截图逻辑，例如调用desktop-screenshot库进行截图</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 即将关闭应用程序时</span></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;will-quit&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 清理所有已注册的全局快捷键</span></span>
<span class="line">  globalShortcut<span class="token punctuation">.</span><span class="token function">unregisterAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="异常问题" tabindex="-1"><a class="header-anchor" href="#异常问题"><span>异常问题</span></a></h2>`,4)),t("h4",k,[t("a",d,[t("span",null,[n[53]||(n[53]=s("1.",-1)),p(a,{style:{"background-color":"rgb(211, 227, 253)"}},{default:e(()=>n[51]||(n[51]=[s("VM4 sandbox_bundle:2",-1)])),_:1,__:[51]}),p(a,{style:{"background-color":"rgb(211, 227, 253)"}},{default:e(()=>n[52]||(n[52]=[s('Electron Security Warning (Insecure Content-Security-Policy) This renderer process has either no Content Security Policy set or a policy with "unsafe-eval" enabled. This exposes users of this app to unnecessary security risks.',-1)])),_:1,__:[52]})])])]),n[111]||(n[111]=l(`<p>解决办法：这是浏览器的内容安全策略（<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Guides/CSP" target="_blank" rel="noopener noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Guides/CSP</a>）。将以下代码添加到index.html里面。</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span>  <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Content-Security-Policy<span class="token punctuation">&quot;</span></span>  <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>default-src &#39;self&#39;; img-src https://*; child-src &#39;none&#39;;<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line">或</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span>  <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Content-Security-Policy<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>default-src &#39;self&#39;;style-src &#39;self&#39; &#39;unsafe-inline&#39;; img-src &#39;self&#39; data:;<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),t("h4",v,[t("a",m,[t("span",null,[n[55]||(n[55]=s("2.",-1)),p(a,{style:{color:"rgb(63, 63, 63)","background-color":"rgb(224, 223, 255)"}},{default:e(()=>n[54]||(n[54]=[s("Error launching app Unable to find Electron app at D...",-1)])),_:1,__:[54]})])])]),p(a,{style:{color:"rgb(44, 44, 54)"}},{default:e(()=>n[56]||(n[56]=[s('解决办法：表明 Electron 无法找到你的应用程序的入口文件，package.js加入"main": "electron/main.js"',-1)])),_:1,__:[56]}),t("h4",b,[t("a",g,[t("span",null,[p(a,{style:{color:"rgb(44, 44, 54)"}},{default:e(()=>n[57]||(n[57]=[s("3.",-1)])),_:1,__:[57]}),p(a,{style:{color:"rgb(63, 63, 63)","background-color":"rgb(224, 223, 255)"}},{default:e(()=>n[58]||(n[58]=[s(`ReferenceError: require is not defined in ES module scope, you can use importinsteadThis file is being treated as an ES module because it has a 'js' file extension and'*' contains "type": "module". `,-1)])),_:1,__:[58]})])])]),t("p",null,[n[62]||(n[62]=s("解决办法：",-1)),p(a,{style:{color:"rgb(44, 44, 54)"}},{default:e(()=>n[59]||(n[59]=[s("项目启用了 ES 模块（",-1)])),_:1,__:[59]}),n[63]||(n[63]=t("code",null,'<font style="color:rgb(44, 44, 54);">"type": "module"</font>',-1)),p(a,{style:{color:"rgb(44, 44, 54)"}},{default:e(()=>n[60]||(n[60]=[s("），而你在代码中使用了 CommonJS 的 ",-1)])),_:1,__:[60]}),n[64]||(n[64]=t("code",null,'<font style="color:rgb(44, 44, 54);">require</font>',-1)),p(a,{style:{color:"rgb(44, 44, 54)"}},{default:e(()=>n[61]||(n[61]=[s(" 语法。ES 模块和 CommonJS 是两种不同的模块系统，不能直接混用。",-1)])),_:1,__:[61]})]),n[112]||(n[112]=t("p",null,[t("img",{src:"https://cdn.nlark.com/yuque/0/2025/png/1460947/1745301260368-8f74e7c7-7813-4c87-beb5-d224f9ef4162.png",alt:""})],-1)),t("h4",y,[t("a",h,[t("span",null,[n[66]||(n[66]=s("4.控制台报错：",-1)),p(a,{style:{color:"rgb(63, 63, 63)","background-color":"rgb(224, 223, 255)"}},{default:e(()=>n[65]||(n[65]=[s(" Failed to load resource: net::ERR_FILE_NOT_FOUND index-CEOqqEAN.js:1",-1)])),_:1,__:[65]})])])]),t("p",null,[n[68]||(n[68]=s("解决办法：",-1)),p(a,{style:{color:"rgb(44, 44, 54)"}},{default:e(()=>n[67]||(n[67]=[s("由于路径配置不正确导致的，修改vite配置base为相对路径。",-1)])),_:1,__:[67]})]),n[113]||(n[113]=l(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">base: <span class="token string">&#39;./&#39;</span>, // 使用相对路径</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1)),t("h4",f,[t("a",w,[t("span",null,[n[70]||(n[70]=s("5.打包时报错：",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(243, 243, 243)"}},{default:e(()=>n[69]||(n[69]=[s(" errorOut=ERROR: Cannot create symbolic link :: C:\\Users...libcrypto.dylib ERROR: Cannot create symbolic link : C:\\Users...\\10.12\\lib\\libssl.dylib",-1)])),_:1,__:[69]})])])]),t("p",null,[n[76]||(n[76]=s("解决办法：",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:e(()=>n[71]||(n[71]=[s("是由于 ",-1)])),_:1,__:[71]}),t("strong",null,[p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:e(()=>n[72]||(n[72]=[s("Windows 系统权限不足导致无法创建符号链接（symlink）",-1)])),_:1,__:[72]})]),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:e(()=>n[73]||(n[73]=[s("，尤其是在解压 ",-1)])),_:1,__:[73]}),n[77]||(n[77]=t("code",null,'<font style="color:rgba(0, 0, 0, 0.9);background-color:rgb(243, 243, 243);">winCodeSign</font>',-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:e(()=>n[74]||(n[74]=[s(" 依赖包时尝试创建 macOS 的 ",-1)])),_:1,__:[74]}),n[78]||(n[78]=t("code",null,'<font style="color:rgba(0, 0, 0, 0.9);background-color:rgb(243, 243, 243);">.dylib</font>',-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:e(()=>n[75]||(n[75]=[s(" 文件符号链接。",-1)])),_:1,__:[75]})]),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:e(()=>n[79]||(n[79]=[s("方案一： 按 ",-1)])),_:1,__:[79]}),n[114]||(n[114]=s("`",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(243, 243, 243)"}},{default:e(()=>n[80]||(n[80]=[s("Win + I",-1)])),_:1,__:[80]}),n[115]||(n[115]=s("`",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:e(()=>n[81]||(n[81]=[s(" 打开 ",-1)])),_:1,__:[81]}),n[116]||(n[116]=s("**",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:e(()=>n[82]||(n[82]=[s("设置",-1)])),_:1,__:[82]}),n[117]||(n[117]=s("**",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:e(()=>n[83]||(n[83]=[s(" → ",-1)])),_:1,__:[83]}),n[118]||(n[118]=s("**",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:e(()=>n[84]||(n[84]=[s("更新和安全",-1)])),_:1,__:[84]}),n[119]||(n[119]=s("**",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:e(()=>n[85]||(n[85]=[s(" → ",-1)])),_:1,__:[85]}),n[120]||(n[120]=s("**",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:e(()=>n[86]||(n[86]=[s("开发者选项",-1)])),_:1,__:[86]}),n[121]||(n[121]=s("**",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:e(()=>n[87]||(n[87]=[s(" → 勾选 ",-1)])),_:1,__:[87]}),n[122]||(n[122]=s("**",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:e(()=>n[88]||(n[88]=[s("“开发者模式”",-1)])),_:1,__:[88]}),n[123]||(n[123]=s("**",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:e(()=>n[89]||(n[89]=[s("。",-1)])),_:1,__:[89]}),p(a,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:e(()=>n[90]||(n[90]=[s("方案二：使用管理者权限执行打包命令：",-1)])),_:1,__:[90]}),n[124]||(n[124]=l(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> run build</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="_6-对比tauri优缺点" tabindex="-1"><a class="header-anchor" href="#_6-对比tauri优缺点"><span>6.对比tauri优缺点</span></a></h4><p><strong>electron</strong></p>`,3)),t("p",null,[n[93]||(n[93]=s("缺点：包体积大（",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:e(()=>n[91]||(n[91]=[s("Chromium和node被打包了",-1)])),_:1,__:[91]}),n[94]||(n[94]=s("）、",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:e(()=>n[92]||(n[92]=[s("较高内存占用，启动较慢，直接访问API有暴露被攻击风险。",-1)])),_:1,__:[92]})]),t("p",null,[n[96]||(n[96]=s("优点：",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:e(()=>n[95]||(n[95]=[s("全平台统一打包兼容性好，插件社区成熟，纯前端开发难度低。",-1)])),_:1,__:[95]})]),t("p",null,[t("strong",null,[p(a,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:e(()=>n[97]||(n[97]=[s("tauri",-1)])),_:1,__:[97]})])]),t("p",null,[n[99]||(n[99]=s("缺点：不同平台兼容性差（",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:e(()=>n[98]||(n[98]=[s("基于系统原生 WebView",-1)])),_:1,__:[98]}),n[100]||(n[100]=s("技术），插件社区不成熟，有一点技术难度（后端rust）",-1))]),t("p",null,[n[102]||(n[102]=s("优点：包体积极小，低内存启动快，更安全（",-1)),p(a,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:e(()=>n[101]||(n[101]=[s("Rust 后端隔离系统 API",-1)])),_:1,__:[101]}),n[103]||(n[103]=s("）",-1))]),n[125]||(n[125]=t("h3",{id:"",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#"},[t("span")])],-1))])}const _=o(r,[["render",x]]),C=JSON.parse('{"path":"/mds/electron%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"构建方式","slug":"构建方式","link":"#构建方式","children":[{"level":3,"title":"必备环境","slug":"必备环境","link":"#必备环境","children":[]},{"level":3,"title":"方式一：官方传统SSR","slug":"方式一-官方传统ssr","link":"#方式一-官方传统ssr","children":[]},{"level":3,"title":"方式二：vue项目加入electron","slug":"方式二-vue项目加入electron","link":"#方式二-vue项目加入electron","children":[]},{"level":3,"title":"方式三：使用electron-vite","slug":"方式三-使用electron-vite","link":"#方式三-使用electron-vite","children":[]}]},{"level":2,"title":"核心知识","slug":"核心知识","link":"#核心知识","children":[{"level":3,"title":"1.进程模型","slug":"_1-进程模型","link":"#_1-进程模型","children":[]},{"level":3,"title":"2.进程通信","slug":"_2-进程通信","link":"#_2-进程通信","children":[]},{"level":3,"title":"3.窗口设置","slug":"_3-窗口设置","link":"#_3-窗口设置","children":[]},{"level":3,"title":"4.屏幕信息获取","slug":"_4-屏幕信息获取","link":"#_4-屏幕信息获取","children":[]},{"level":3,"title":"5.窗口缩小至托盘","slug":"_5-窗口缩小至托盘","link":"#_5-窗口缩小至托盘","children":[]}]},{"level":2,"title":"小技巧","slug":"小技巧","link":"#小技巧","children":[]},{"level":2,"title":"异常问题","slug":"异常问题","link":"#异常问题","children":[{"level":3,"title":"","slug":"","link":"#","children":[]}]}],"git":{},"filePathRelative":"mds/electron桌面应用.md","excerpt":"<h2>构建方式</h2>\\n<h3>必备环境</h3>\\n<ul>\\n<li>安装node.js</li>\\n</ul>\\n<div class=\\"language-javascript line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"js\\"><pre><code><span class=\\"line\\">node <span class=\\"token operator\\">-</span>v</span>\\n<span class=\\"line\\">v16<span class=\\"token punctuation\\">.</span><span class=\\"token number\\">14.2</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{_ as comp,C as data};
