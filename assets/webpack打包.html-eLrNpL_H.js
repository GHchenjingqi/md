import{_ as n,o as s,c as a,a as p}from"./app-DFbXBJNa.js";const t={},e=p(`<p>webapck命令</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>npm install webpack  <span class="token comment">// 安装</span>
npm webpack  <span class="token comment">// 打包命令</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-webpack有什么用" tabindex="-1"><a class="header-anchor" href="#_1-webpack有什么用"><span>1.webpack有什么用？</span></a></h3><p><strong>webpack</strong> 是一个用于现代 JavaScript 应用程序的 <em><strong>静态模块打包工具</strong></em>。<strong>将模块化开发的碎片资源组合为一个或多个静态资源。</strong></p><p>webpack原理：将多个文件合并成一个对象的中，路径作key，内容做value，然后放到IIFE立即执行函数中，然后通过函数执行路径对应的函数，将函数结果返回存放到不重复的对象集合中。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">modules</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">var</span> moduleExport <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
	<span class="token keyword">function</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token parameter">moduleKey</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>moduleExport<span class="token punctuation">[</span>moduleKey<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> moduleExport<span class="token punctuation">[</span>moduleKey<span class="token punctuation">]</span>
		<span class="token keyword">var</span> func <span class="token operator">=</span> modules<span class="token punctuation">[</span>moduleKey<span class="token punctuation">]</span>
		<span class="token keyword">var</span> module <span class="token operator">=</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">exports</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token function">func</span><span class="token punctuation">(</span>module<span class="token punctuation">,</span><span class="token keyword">export</span><span class="token punctuation">,</span>require<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">var</span> res <span class="token operator">=</span> module<span class="token punctuation">.</span>export<span class="token punctuation">;</span>
		moduleExport<span class="token punctuation">[</span>moduleKey<span class="token punctuation">]</span> <span class="token operator">=</span> res<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token string-property property">&quot;../src/main.js&quot;</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">module</span><span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;../src/index.js&quot;</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">module<span class="token punctuation">,</span>exports<span class="token punctuation">,</span>require</span><span class="token punctuation">)</span><span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">456</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-webpack的核心功能有哪些" tabindex="-1"><a class="header-anchor" href="#_2-webpack的核心功能有哪些"><span>2.webpack的核心功能有哪些？</span></a></h3><ul><li>entry 入口</li><li>output 输出</li><li>loader 模块</li><li>plugin 插件</li><li>mode 模式</li></ul><h4 id="入口-entry" tabindex="-1"><a class="header-anchor" href="#入口-entry"><span>入口 entry</span></a></h4><p>入口文件默认值是 ./src/index.js</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./path/to/my/entry/file.js&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// 等效于</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">main</span><span class="token operator">:</span><span class="token string">&#39;./path/to/my/entry/file.js&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// 等效于</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;./path/to/my/entry/file.js&#39;</span><span class="token punctuation">]</span> <span class="token comment">// 多个入口文件</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="输出-output" tabindex="-1"><a class="header-anchor" href="#输出-output"><span>输出 output</span></a></h4><p>output属性是配置webpack模块打包后的位置。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./path/to/my/entry/file.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 路径目录</span>
    <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;bundle.js&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 文件名</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="loader-module模块转换" tabindex="-1"><a class="header-anchor" href="#loader-module模块转换"><span>loader - module模块转换</span></a></h4><p>loader 用于对模块的源代码进行转换。由于webpack只认识js和json文件，对于其他文件需要通过对应的loader做转换。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">entry</span><span class="token operator">:</span> <span class="token string">&#39;./path/to/my/entry/file.js&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span>
     <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 路径目录</span>
     <span class="token literal-property property">filename</span><span class="token operator">:</span> <span class="token string">&#39;bundle.js&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 文件名</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span><span class="token punctuation">{</span>
  	 <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
         <span class="token punctuation">{</span> <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.txt$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token string">&#39;raw-loader&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token comment">// 打包时遇到 txt文件用raw-loader转换以下</span>
         <span class="token punctuation">{</span> <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.css$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;style-loader&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;css-loader&quot;</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 遇到css 用这2个转换</span>
     <span class="token punctuation">]</span><span class="token punctuation">,</span> 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="plugin-插件" tabindex="-1"><a class="header-anchor" href="#plugin-插件"><span>plugin 插件</span></a></h4><p>插件用于打包优化，资源管理。</p><p>例如：将html也打包，使用 html-webpack-plugin 插件。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;html-webpack-plugin&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 引入插件</span>
<span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;webpack&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 用于访问内置插件</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.txt$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token string">&#39;raw-loader&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token comment">// 使用插件</span>
      <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span> 
          <span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">&quot;我是标题&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 页面标题</span>
          <span class="token literal-property property">template</span><span class="token operator">:</span> <span class="token string">&#39;./src/index.html&#39;</span>  <span class="token comment">// 模板文件</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="mode-模式" tabindex="-1"><a class="header-anchor" href="#mode-模式"><span>mode 模式</span></a></h4><p>mode用于指定当前项目的环境。不同模式有不同的优化。</p><ul><li>development 开发环境</li><li>production 生存环境</li><li>none 默认打包模式</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">mode</span><span class="token operator">:</span> <span class="token string">&#39;production&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除以上的核心胚子，还有target属性。用于针对某个服务端。默认还是web，也可以修改为node。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;node&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-webpack和vite打包的区别-为什么vite打包速度快于webpack" tabindex="-1"><a class="header-anchor" href="#_3-webpack和vite打包的区别-为什么vite打包速度快于webpack"><span>3.webpack和vite打包的区别？为什么vite打包速度快于webpack?</span></a></h3><h4 id="_1-工作原理上不同" tabindex="-1"><a class="header-anchor" href="#_1-工作原理上不同"><span>1).工作原理上不同</span></a></h4><p>webpack编译打包时，会根据入口文件分析出所有的模块依赖关系，然后所有引用文件都打包成一个或多个js文件。这样的项目会越来臃肿，启动时间越来越长！</p><p>vite运行项目时，会通过 <strong>esbulid</strong> 将所有的模块转换为 <strong>es module</strong>文件，不需要对整个项目进行打包。而浏览器在加载改模块的时候，会根据请求按需动态引入编译，再返给浏览器。</p><h4 id="_2-热更新不同" tabindex="-1"><a class="header-anchor" href="#_2-热更新不同"><span>2).热更新不同</span></a></h4><p>webpack项目中，每次修改都会对整个项目重新打包编译，虽然webpack有缓存机制，但不能从根本上解决问题。</p><p>vite在监听到文件发生变化时，会通过websocket通知浏览器，发起重新请求，只对发生变化的模块进行重新编译，然后进行替换。</p><h4 id="_3-构建速度不同" tabindex="-1"><a class="header-anchor" href="#_3-构建速度不同"><span>3).构建速度不同</span></a></h4><p>webpack和vite由于原理上不同，再加上vite底层是go语言开发了，执行速度是js的10到100倍，因此导致vite的构建速度远远高于webpack。</p><h4 id="_4-配置不同" tabindex="-1"><a class="header-anchor" href="#_4-配置不同"><span>4).配置不同</span></a></h4><p>webpack配置复杂度更高，插件社区更完善健全，更符合大型项目或稳定项目。</p><p>vite配置简单，兴起时间短，插件不健全，适合中小型项目。</p>`,39),o=[e];function c(l,i){return s(),a("div",null,o)}const u=n(t,[["render",c],["__file","webpack打包.html.vue"]]),k=JSON.parse('{"path":"/guide/vue/webpack%E6%89%93%E5%8C%85.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"1.webpack有什么用？","slug":"_1-webpack有什么用","link":"#_1-webpack有什么用","children":[]},{"level":3,"title":"2.webpack的核心功能有哪些？","slug":"_2-webpack的核心功能有哪些","link":"#_2-webpack的核心功能有哪些","children":[]},{"level":3,"title":"3.webpack和vite打包的区别？为什么vite打包速度快于webpack?","slug":"_3-webpack和vite打包的区别-为什么vite打包速度快于webpack","link":"#_3-webpack和vite打包的区别-为什么vite打包速度快于webpack","children":[]}],"git":{"updatedTime":1712798294000,"contributors":[{"name":"陈小知","email":"cjq314@qq.com","commits":1}]},"filePathRelative":"guide/vue/webpack打包.md","excerpt":"<p>webapck命令</p>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code>npm install webpack  <span class=\\"token comment\\">// 安装</span>\\nnpm webpack  <span class=\\"token comment\\">// 打包命令</span>\\n</code></pre></div><h3>1.webpack有什么用？</h3>\\n<p><strong>webpack</strong> 是一个用于现代 JavaScript 应用程序的 <em><strong>静态模块打包工具</strong></em>。<strong>将模块化开发的碎片资源组合为一个或多个静态资源。</strong></p>"}');export{u as comp,k as data};
