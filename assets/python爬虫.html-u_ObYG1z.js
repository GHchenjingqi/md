import{_ as o,c as i,b as l,d as t,a as p,e as s,w as e,r as c,o as u}from"./app-Tsm6EGXP.js";const r={},k={id:"用type或isinstance判断数据类型。",tabindex:"-1"},d={class:"header-anchor",href:"#用type或isinstance判断数据类型。"},m={id:"_11-pyecharts图表",tabindex:"-1"},v={class:"header-anchor",href:"#_11-pyecharts图表"},b={id:"使用selenium当爬虫-模拟打开浏览器获取页面数据",tabindex:"-1"},g={class:"header-anchor",href:"#使用selenium当爬虫-模拟打开浏览器获取页面数据"};function y(_,n){const a=c("font");return u(),i("div",null,[n[51]||(n[51]=l(`<h2 id="一、python基础" tabindex="-1"><a class="header-anchor" href="#一、python基础"><span>一、python基础</span></a></h2><p>python是弱类型语言</p><h3 id="_1-基本用法" tabindex="-1"><a class="header-anchor" href="#_1-基本用法"><span>1.基本用法</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># 导入整个模块</span></span>
<span class="line"><span class="token keyword">import</span> somemodule</span>
<span class="line"><span class="token comment"># 从某个模块中导入某个函数</span></span>
<span class="line"><span class="token keyword">from</span> somemodule <span class="token keyword">import</span> somefunction</span>
<span class="line"><span class="token comment"># 从某个模块中导入多个函数 </span></span>
<span class="line"><span class="token keyword">from</span> somemodule <span class="token keyword">import</span> firstfunc<span class="token punctuation">,</span> secondfunc<span class="token punctuation">,</span> thirdfunc</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 注释：打印输出</span></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&quot;Hello, Python!&quot;</span><span class="token punctuation">)</span> </span>
<span class="line"></span>
<span class="line"><span class="token comment"># 条件语句与缩进</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token boolean">True</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&quot;True&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&quot;False&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 等待用户输入</span></span>
<span class="line"><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\n\\n按下 enter 键后退出。&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 每行结束不需要加‘;’符合；单行语句需要加</span></span>
<span class="line"><span class="token keyword">import</span> sys<span class="token punctuation">;</span> x <span class="token operator">=</span> <span class="token string">&#39;runoob&#39;</span><span class="token punctuation">;</span> sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 删除对象单个引用</span></span>
<span class="line"><span class="token keyword">del</span> a</span>
<span class="line"><span class="token comment"># 删除对象多个引用</span></span>
<span class="line"><span class="token keyword">del</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-数据类型" tabindex="-1"><a class="header-anchor" href="#_2-数据类型"><span>2.数据类型</span></a></h3>`,5)),t("p",null,[n[1]||(n[1]=s("不可变数据类型：",-1)),p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[0]||(n[0]=[s("Number（数字）、String（字符串）、Tuple（元组）；可变数据类型：List（列表）、Dictionary（字典）、Set（集合）。",-1)])),_:1,__:[0]})]),t("ul",null,[t("li",null,[p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[2]||(n[2]=[s("Number（数字）：整数(",-1)])),_:1,__:[2]}),n[11]||(n[11]=s("**",-1)),p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[3]||(n[3]=[s("int",-1)])),_:1,__:[3]}),n[12]||(n[12]=s("**",-1)),p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[4]||(n[4]=[s(")、布尔型(",-1)])),_:1,__:[4]}),n[13]||(n[13]=s("**",-1)),p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[5]||(n[5]=[s("bool",-1)])),_:1,__:[5]}),n[14]||(n[14]=s("**",-1)),p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[6]||(n[6]=[s(" )、浮点数(",-1)])),_:1,__:[6]}),n[15]||(n[15]=s("**",-1)),p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[7]||(n[7]=[s("float",-1)])),_:1,__:[7]}),n[16]||(n[16]=s("**",-1)),p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[8]||(n[8]=[s(")和复数(",-1)])),_:1,__:[8]}),n[17]||(n[17]=s("**",-1)),p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[9]||(n[9]=[s("complex",-1)])),_:1,__:[9]}),n[18]||(n[18]=s("**",-1)),p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[10]||(n[10]=[s(")",-1)])),_:1,__:[10]})])]),n[52]||(n[52]=l(`<div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">5</span> <span class="token operator">+</span> <span class="token number">4</span>  <span class="token comment"># 加法</span></span>
<span class="line"><span class="token number">9</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">4.3</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token comment"># 减法</span></span>
<span class="line"><span class="token number">2.3</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">7</span>  <span class="token comment"># 乘法</span></span>
<span class="line"><span class="token number">21</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token operator">/</span> <span class="token number">4</span>  <span class="token comment"># 除法，得到一个浮点数</span></span>
<span class="line"><span class="token number">0.5</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token operator">//</span> <span class="token number">4</span> <span class="token comment"># 除法，得到一个整数，向下取整</span></span>
<span class="line"><span class="token number">0</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">17</span> <span class="token operator">%</span> <span class="token number">3</span> <span class="token comment"># 取余 </span></span>
<span class="line"><span class="token number">2</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token operator">**</span> <span class="token number">5</span> <span class="token comment"># 乘方</span></span>
<span class="line"><span class="token number">32</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 平方根</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token number">16</span> <span class="token operator">**</span> <span class="token number">0.5</span> <span class="token comment"># </span></span>
<span class="line"><span class="token number">4</span></span>
<span class="line"><span class="token comment"># cmath平方根</span></span>
<span class="line"><span class="token keyword">import</span> cmath</span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> cmath<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),t("ul",null,[t("li",null,[p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[19]||(n[19]=[s(`String（字符串）：以单行字符串（""、''）、多行字符串（ ''' '''）`,-1)])),_:1,__:[19]})])]),n[53]||(n[53]=l(`<div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&#39;abcdefg&#39;</span></span>
<span class="line"><span class="token comment"># 截取到最后 bcdefg</span></span>
<span class="line"><span class="token builtin">str</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 截取指定位置 bc</span></span>
<span class="line"><span class="token builtin">str</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 两头截取 bc</span></span>
<span class="line"><span class="token builtin">str</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 倒序截取 abc</span></span>
<span class="line"><span class="token builtin">str</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 字符串输出2次</span></span>
<span class="line"><span class="token builtin">str</span> <span class="token operator">*</span> <span class="token number">2</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 字符串相加</span></span>
<span class="line"><span class="token builtin">str</span> <span class="token operator">+</span> &#39;<span class="token number">123</span>’</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),t("ul",null,[t("li",null,[p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[20]||(n[20]=[s("bool（布尔类型）：值为 True 和 False",-1)])),_:1,__:[20]})])]),n[54]||(n[54]=l(`<div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment"># False</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment"># True</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment"># False</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># True</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment"># False</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># True</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 布尔逻辑运算</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token boolean">True</span> <span class="token keyword">and</span> <span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># False</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token boolean">True</span> <span class="token keyword">or</span> <span class="token boolean">False</span><span class="token punctuation">)</span>   <span class="token comment"># True</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">not</span> <span class="token boolean">True</span><span class="token punctuation">)</span>        <span class="token comment"># False</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),t("ul",null,[t("li",null,[p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[21]||(n[21]=[s("List（列表）：类似js数组，有序的对象集合。常用方法如下：",-1)])),_:1,__:[21]})])]),n[55]||(n[55]=l(`<p><img src="https://cdn.nlark.com/yuque/0/2025/png/1460947/1741241374220-b55a2c1d-7799-4877-85ee-294f6360df99.png" alt=""> <img src="https://cdn.nlark.com/yuque/0/2025/png/1460947/1741241388741-682a582e-368c-4b38-9a5b-8adc956998a9.png" alt=""></p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">&#39;abcd&#39;</span><span class="token punctuation">,</span> <span class="token number">786</span> <span class="token punctuation">,</span> <span class="token number">2.23</span><span class="token punctuation">,</span> <span class="token string">&#39;runoob&#39;</span><span class="token punctuation">,</span> <span class="token number">70.2</span> <span class="token punctuation">]</span>  <span class="token comment"># 定义一个列表</span></span>
<span class="line">tinylist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token string">&#39;runoob&#39;</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>            <span class="token comment"># 打印整个列表</span></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>         <span class="token comment"># 打印列表的第一个元素</span></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>       <span class="token comment"># 打印列表第二到第四个元素（不包含第四个元素）</span></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># 打印列表从第三个元素开始到末尾</span></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span>tinylist <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment"># 打印tinylist列表两次</span></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">list</span> <span class="token operator">+</span> tinylist<span class="token punctuation">)</span>  <span class="token comment"># 打印两个列表拼接在一起的结果</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),t("ul",null,[t("li",null,[p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[22]||(n[22]=[s("Tuple（元组）：写在小括号里",-1)])),_:1,__:[22]})])]),n[56]||(n[56]=l(`<p><img src="https://cdn.nlark.com/yuque/0/2025/png/1460947/1741241511534-acb673cc-b908-44d0-8f40-2812933e67db.png" alt=""></p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token builtin">tuple</span> <span class="token operator">=</span> <span class="token punctuation">(</span> <span class="token string">&#39;abcd&#39;</span><span class="token punctuation">,</span> <span class="token number">786</span> <span class="token punctuation">,</span> <span class="token number">2.23</span><span class="token punctuation">,</span> <span class="token string">&#39;runoob&#39;</span><span class="token punctuation">,</span> <span class="token number">70.2</span>  <span class="token punctuation">)</span></span>
<span class="line">tinytuple <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token string">&#39;runoob&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">)</span>             <span class="token comment"># 输出完整元组</span></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>          <span class="token comment"># 输出元组的第一个元素</span></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># 输出从第二个元素开始到第三个元素</span></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>         <span class="token comment"># 输出从第三个元素开始的所有元素</span></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span>tinytuple <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span>     <span class="token comment"># 输出两次元组</span></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">tuple</span> <span class="token operator">+</span> tinytuple<span class="token punctuation">)</span> <span class="token comment"># 连接元组</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),t("ul",null,[t("li",null,[p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[23]||(n[23]=[s("Set（集合）：是一种无序、可变的数据类型，用于存储唯一的元素",-1)])),_:1,__:[23]})])]),n[57]||(n[57]=l(`<p><img src="https://cdn.nlark.com/yuque/0/2025/png/1460947/1741241652239-0402e606-1ec8-4cc2-9575-9c8831c12153.png" alt=""></p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">sites <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;Google&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Taobao&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Runoob&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Facebook&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Zhihu&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Baidu&#39;</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment"># 成员判断</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token string">&#39;Runoob&#39;</span> <span class="token keyword">in</span> sites <span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Runoob 在集合中&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">else</span> <span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Runoob 不在集合中&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 集合运算</span></span>
<span class="line">a <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token string">&#39;abracadabra&#39;</span><span class="token punctuation">)</span></span>
<span class="line">b <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token string">&#39;alacazam&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">-</span> b<span class="token punctuation">)</span>     <span class="token comment"># a 和 b 的差集 {&#39;r&#39;, &#39;b&#39;, &#39;d&#39;}</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">|</span> b<span class="token punctuation">)</span>     <span class="token comment"># a 和 b 的并集 {&#39;b&#39;, &#39;c&#39;, &#39;a&#39;, &#39;z&#39;, &#39;m&#39;, &#39;r&#39;, &#39;l&#39;, &#39;d&#39;}</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">&amp;</span> b<span class="token punctuation">)</span>     <span class="token comment"># a 和 b 的交集 {&#39;c&#39;, &#39;a&#39;}</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">^</span> b<span class="token punctuation">)</span>     <span class="token comment"># a 和 b 中不同时存在的元素  {&#39;z&#39;, &#39;b&#39;, &#39;m&#39;, &#39;r&#39;, &#39;l&#39;, &#39;d&#39;} </span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">{</span> <span class="token boolean">True</span> <span class="token punctuation">:</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token string">&#39;abc&#39;</span>  <span class="token punctuation">}</span></span>
<span class="line"><span class="token comment"># Key值是布尔会被转数字类型，key值唯一处理后： { 1:&#39;abc&#39;  }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),t("ul",null,[t("li",null,[p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[24]||(n[24]=[s("Dictionary（字典）：字典是无序的对象集合，类似js的对象，通过key取值",-1)])),_:1,__:[24]})])]),n[58]||(n[58]=l(`<p><img src="https://cdn.nlark.com/yuque/0/2025/png/1460947/1741241605170-6579cb9f-3cda-466c-8c78-a565a06aaa5d.png" alt=""></p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token builtin">dict</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">&#39;one&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;1 - 菜鸟教程&quot;</span></span>
<span class="line"><span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>     <span class="token operator">=</span> <span class="token string">&quot;2 - 菜鸟工具&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 输出所有键</span></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 输出所有值</span></span>
<span class="line"><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),t("h4",k,[t("a",d,[t("span",null,[p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[25]||(n[25]=[s("用",-1)])),_:1,__:[25]}),p(a,{style:{color:"#DF2A3F","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[26]||(n[26]=[s("type",-1)])),_:1,__:[26]}),p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[27]||(n[27]=[s("或",-1)])),_:1,__:[27]}),p(a,{style:{color:"#DF2A3F","background-color":"rgb(249, 249, 249)"}},{default:e(()=>n[28]||(n[28]=[s("isinstance",-1)])),_:1,__:[28]}),p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[29]||(n[29]=[s("判断数据类型。",-1)])),_:1,__:[29]})])])]),n[59]||(n[59]=l(`<div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># isinstance</span></span>
<span class="line"><span class="token builtin">isinstance</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># &gt; False</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># type</span></span>
<span class="line"><span class="token builtin">type</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># &lt;class &#39;int&#39;&gt;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-类型转换" tabindex="-1"><a class="header-anchor" href="#_3-类型转换"><span>3.类型转换</span></a></h3><p>显示转换：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">y <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">2.8</span><span class="token punctuation">)</span> <span class="token comment"># y 输出结果为 2</span></span>
<span class="line">z <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span> <span class="token comment"># z 输出结果为 3</span></span>
<span class="line">y <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token number">2.8</span><span class="token punctuation">)</span>   <span class="token comment"># y 输出结果为 2.8</span></span>
<span class="line">z <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span>   <span class="token comment"># z 输出结果为 3.0</span></span>
<span class="line">z <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">3.0</span><span class="token punctuation">)</span>  <span class="token comment"># z 输出结果为 &#39;3.0&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>隐式转换：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">n <span class="token operator">=</span> <span class="token number">125</span> <span class="token operator">+</span> <span class="token number">1.3</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>字符串+数字会报错！！！</li></ul><h3 id="_4-控制语句" tabindex="-1"><a class="header-anchor" href="#_4-控制语句"><span>4.控制语句</span></a></h3><p>if条件控制：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">if</span> condition_1<span class="token punctuation">:</span></span>
<span class="line">    statement_block_1</span>
<span class="line"><span class="token keyword">elif</span> condition_2<span class="token punctuation">:</span></span>
<span class="line">    statement_block_2</span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    statement_block_3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>match...case条件控制，类似js的switch case</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">match</span> subject<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token operator">&lt;</span>pattern_1<span class="token operator">&gt;</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token operator">&lt;</span>action_1<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token operator">&lt;</span>pattern_2<span class="token operator">&gt;</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token operator">&lt;</span>action_2<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token operator">&lt;</span>pattern_3<span class="token operator">&gt;</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token operator">&lt;</span>action_3<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token keyword">_</span><span class="token punctuation">:</span>  <span class="token comment"># 默认出口</span></span>
<span class="line">        <span class="token operator">&lt;</span>action_wildcard<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>while循环</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># while</span></span>
<span class="line"><span class="token keyword">while</span> <span class="token operator">&lt;</span>expr<span class="token operator">&gt;</span>：</span>
<span class="line">    <span class="token operator">&lt;</span>statement<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># while  else</span></span>
<span class="line"><span class="token keyword">while</span> <span class="token operator">&lt;</span>expr<span class="token operator">&gt;</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token operator">&lt;</span>statement<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token operator">&lt;</span>additional_statement<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>for in循环</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># for in</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token operator">&lt;</span>variable<span class="token operator">&gt;</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>sequence<span class="token operator">&gt;</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token operator">&lt;</span>statements<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># for else</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token operator">&lt;</span>variable<span class="token operator">&gt;</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>sequence<span class="token operator">&gt;</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token operator">&lt;</span>statements<span class="token operator">&gt;</span></span>
<span class="line"><span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token operator">&lt;</span>statements<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16)),t("p",null,[n[31]||(n[31]=s("range函数，",-1)),p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[30]||(n[30]=[s("遍历数字序列",-1)])),_:1,__:[30]})]),n[60]||(n[60]=l(`<div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">     <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>  <span class="token comment"># 1 2 3 4 5</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span> <span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment"># 5 6 7 8 </span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-函数" tabindex="-1"><a class="header-anchor" href="#_5-函数"><span>5.函数</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">def</span> 函数名（参数列表）<span class="token punctuation">:</span></span>
<span class="line">    函数体</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 有返回值</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">area</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">return</span> width <span class="token operator">*</span> height</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 无返回值</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># lambda 表达式，类似JS的箭头函数  </span></span>
<span class="line"><span class="token comment"># lambda 参数: 表达式</span></span>
<span class="line">x <span class="token operator">=</span> <span class="token keyword">lambda</span> a<span class="token punctuation">,</span> b <span class="token punctuation">:</span> a <span class="token operator">*</span> b</span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 30</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 装饰器：二次处理函数——将函数结果扔到装饰器里再处理一次</span></span>
<span class="line"><span class="token decorator annotation punctuation">@time_logger</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">target_function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">pass</span></span>
<span class="line"><span class="token comment"># 等同于</span></span>
<span class="line">target_function <span class="token operator">=</span> time_logger<span class="token punctuation">(</span>target_function<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-推导式" tabindex="-1"><a class="header-anchor" href="#_6-推导式"><span>6.推导式</span></a></h3>`,4)),p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[32]||(n[32]=[s("推导式是一种独特的数据处理方式，可以从一个数据序列构建另一个新的数据序列的结构体。",-1)])),_:1,__:[32]}),n[61]||(n[61]=l(`<p>列表推导式:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token punctuation">[</span>表达式 <span class="token keyword">for</span> 变量 <span class="token keyword">in</span> 列表<span class="token punctuation">]</span> </span>
<span class="line"><span class="token punctuation">[</span>表达式 <span class="token keyword">for</span> 变量 <span class="token keyword">in</span> 列表 <span class="token keyword">if</span> 条件<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">vec <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token number">3</span><span class="token operator">*</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> vec<span class="token punctuation">]</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span> x<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> vec<span class="token punctuation">]</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">]</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字典推导式：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token punctuation">{</span> key_expr<span class="token punctuation">:</span> value_expr <span class="token keyword">for</span> 变量 <span class="token keyword">in</span> collection  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">{</span> key_expr<span class="token punctuation">:</span> value_expr <span class="token keyword">for</span> 变量 <span class="token keyword">in</span> collection  <span class="token keyword">if</span> 条件 <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">listdemo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Google&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Runoob&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Taobao&#39;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">{</span>key<span class="token punctuation">:</span><span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token keyword">for</span> key <span class="token keyword">in</span> listdemo<span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token string">&#39;Google&#39;</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&#39;Runoob&#39;</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&#39;Taobao&#39;</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">{</span>x<span class="token punctuation">:</span> x<span class="token operator">**</span><span class="token number">2</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token number">2</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">:</span> <span class="token number">36</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>集合推导式：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token punctuation">{</span> 表达式 <span class="token keyword">for</span> 变量 <span class="token keyword">in</span> 序列 <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">{</span> 表达式 <span class="token keyword">for</span> 变量 <span class="token keyword">in</span> 序列 <span class="token keyword">if</span> 条件 <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">{</span>i<span class="token operator">**</span><span class="token number">2</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">{</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token string">&#39;abracadabra&#39;</span> <span class="token keyword">if</span> x <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;r&#39;</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6)),t("p",null,[n[34]||(n[34]=s("元组推导式，注意元组返回的事迭代器，需要",-1)),p(a,{style:{color:"rgb(0, 128, 128)","background-color":"rgb(249, 249, 249)"}},{default:e(()=>n[33]||(n[33]=[s("tuple转成元组",-1)])),_:1,__:[33]})]),n[62]||(n[62]=l(`<div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token punctuation">(</span>表达式 <span class="token keyword">for</span> 变量 <span class="token keyword">in</span> 序列 <span class="token punctuation">)</span></span>
<span class="line">或</span>
<span class="line"><span class="token punctuation">(</span>表达式 <span class="token keyword">for</span> 变量 <span class="token keyword">in</span> 序列 <span class="token keyword">if</span> 条件 <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">a <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token builtin">tuple</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> </span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-面向对象" tabindex="-1"><a class="header-anchor" href="#_7-面向对象"><span>7.面向对象</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MyClass</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 类属性 - 外部可访问</span></span>
<span class="line">    w <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    <span class="token comment"># ___私有属性 - 外部不可访问</span></span>
<span class="line">    __witdh <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># 构造函数 - 类实例化时调用</span></span>
<span class="line">    <span class="token comment"># self - 类实例本身</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>w <span class="token operator">=</span> width</span>
<span class="line">        self<span class="token punctuation">.</span>h <span class="token operator">=</span> height</span>
<span class="line"></span>
<span class="line">    <span class="token comment"># 类方法 - 类实例可调用</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> self<span class="token punctuation">.</span>w <span class="token operator">*</span> self<span class="token punctuation">.</span>h</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 类继承</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyClass2</span><span class="token punctuation">(</span>MyClass<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># super</span></span>
<span class="line">        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">x <span class="token operator">=</span> MyClass<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>w<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">y <span class="token operator">=</span> MyClass2<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>y<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>y<span class="token punctuation">.</span>w<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-文件" tabindex="-1"><a class="header-anchor" href="#_8-文件"><span>8.文件</span></a></h3>`,4)),p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[35]||(n[35]=[s("open() 方法打开一个文件，返回文件对象",-1)])),_:1,__:[35]}),t("p",null,[t("em",null,[t("strong",null,[p(a,{style:{color:"rgb(51, 51, 51)","background-color":"#FBDE28"}},{default:e(()=>n[36]||(n[36]=[s("open(file, mode='r')",-1)])),_:1,__:[36]})])])]),n[63]||(n[63]=l(`<div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;123.txt&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>mode常用类型（更多推荐<a href="https://www.runoob.com/python3/python3-file-methods.html" target="_blank" rel="noopener noreferrer">https://www.runoob.com/python3/python3-file-methods.html</a>）有：</p>`,2)),t("ul",null,[t("li",null,[n[38]||(n[38]=s("r ",-1)),p(a,{style:{color:"rgb(51, 51, 51)"}},{default:e(()=>n[37]||(n[37]=[s("只读方式",-1)])),_:1,__:[37]})]),t("li",null,[p(a,{style:{color:"rgb(51, 51, 51)"}},{default:e(()=>n[39]||(n[39]=[s("w ",-1)])),_:1,__:[39]}),p(a,{style:{color:"rgb(51, 51, 51)"}},{default:e(()=>n[40]||(n[40]=[s("只用于写入",-1)])),_:1,__:[40]})]),t("li",null,[p(a,{style:{color:"rgb(51, 51, 51)"}},{default:e(()=>n[41]||(n[41]=[s("w+ 用于读写",-1)])),_:1,__:[41]})]),t("li",null,[p(a,{style:{color:"rgb(51, 51, 51)"}},{default:e(()=>n[42]||(n[42]=[s("wb 只用于写入二进制",-1)])),_:1,__:[42]})]),t("li",null,[p(a,{style:{color:"rgb(51, 51, 51)"}},{default:e(()=>n[43]||(n[43]=[s("wb+ 用于写入二进制",-1)])),_:1,__:[43]})])]),n[64]||(n[64]=l(`<p>file文件操作方法：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 关闭文件</span></span>
<span class="line"><span class="token builtin">file</span><span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 刷新文件内部缓冲，直接把内部缓冲区的数据立刻写入文件</span></span>
<span class="line"><span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 读取文件</span></span>
<span class="line"><span class="token builtin">file</span><span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 读取指定行</span></span>
<span class="line"><span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span>  <span class="token comment"># 写入字符串</span></span>
<span class="line"><span class="token builtin">file</span><span class="token punctuation">.</span>writelines<span class="token punctuation">(</span>sequence<span class="token punctuation">)</span> <span class="token comment">#向文件写入一个序列字符串列表</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-常用函数" tabindex="-1"><a class="header-anchor" href="#_9-常用函数"><span>9.常用函数</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># replace 全部替换</span></span>
<span class="line"><span class="token string">&quot;runoob&quot;</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;o&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;x&quot;</span><span class="token punctuation">)</span>  <span class="token comment"># runxxb</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># random 随机返回0-1之间的数</span></span>
<span class="line">random<span class="token punctuation">.</span>random<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 列表序列号（变字符串）</span></span>
<span class="line"><span class="token keyword">import</span> json</span>
<span class="line"><span class="token comment"># json编码</span></span>
<span class="line"><span class="token builtin">str</span> <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># json解码</span></span>
<span class="line">data <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 时间获取</span></span>
<span class="line"><span class="token keyword">import</span> time</span>
<span class="line"><span class="token comment"># 时间戳</span></span>
<span class="line">ticks <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># strftime格式化  格式化成2016-03-20 11:45:39形式</span></span>
<span class="line">time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># map(fn,[])</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">add2</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">return</span> i<span class="token operator">+</span><span class="token number">2</span></span>
<span class="line"><span class="token comment"># list() 类型转为list</span></span>
<span class="line"><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span>add2<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> 等同于</span>
<span class="line"><span class="token punctuation">[</span>add2<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-pip用法" tabindex="-1"><a class="header-anchor" href="#_10-pip用法"><span>10.pip用法</span></a></h3>`,5)),p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[44]||(n[44]=[s("pip 是 Python 包管理工具，类似npm/yarn。对依赖包进行安装，删除等操作。",-1)])),_:1,__:[44]}),n[65]||(n[65]=l(`<div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># 查看版本</span></span>
<span class="line">pip <span class="token operator">-</span><span class="token operator">-</span>version</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装</span></span>
<span class="line">pip install 包</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 卸载</span></span>
<span class="line">pip uninstall 包</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 查看已安装的包</span></span>
<span class="line">pip <span class="token builtin">list</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),t("h3",m,[t("a",v,[t("span",null,[n[46]||(n[46]=s("11.",-1)),p(a,{style:{color:"rgb(0, 0, 0)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[45]||(n[45]=[s("pyecharts图表",-1)])),_:1,__:[45]})])])]),p(a,{style:{color:"rgb(51, 51, 51)","background-color":"rgb(250, 252, 253)"}},{default:e(()=>n[47]||(n[47]=[s("pyecharts 是一个基于 ECharts 的 Python 数据可视化库。",-1)])),_:1,__:[47]}),n[66]||(n[66]=l(`<div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">pip install pyecharts</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><img src="https://cdn.nlark.com/yuque/0/2025/png/1460947/1741313751958-6737736b-fbca-4731-bb5d-bb409c7a485d.png" alt=""></p><p>案例：</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> pyecharts<span class="token punctuation">.</span>charts <span class="token keyword">import</span> Bar</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 准备数据</span></span>
<span class="line">x_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;一月&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;二月&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;三月&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;四月&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;五月&#39;</span><span class="token punctuation">]</span></span>
<span class="line">y_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建柱状图</span></span>
<span class="line">bar_chart <span class="token operator">=</span> Bar<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">bar_chart<span class="token punctuation">.</span>add_xaxis<span class="token punctuation">(</span>x_data<span class="token punctuation">)</span></span>
<span class="line">bar_chart<span class="token punctuation">.</span>add_yaxis<span class="token punctuation">(</span><span class="token string">&quot;销售额&quot;</span><span class="token punctuation">,</span> y_data<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 也可以传入路径参数，如 bar_chart.render(&quot;bar_chart.html&quot;)</span></span>
<span class="line">bar_chart<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同级目录会生成一个“render.html”文件，打开就是绘制的图表。</p><h2 id="二、爬虫部分" tabindex="-1"><a class="header-anchor" href="#二、爬虫部分"><span>二、爬虫部分</span></a></h2><h3 id="安装必须插件" tabindex="-1"><a class="header-anchor" href="#安装必须插件"><span>安装必须插件</span></a></h3><p>pip是pythone的安装依赖命令符</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">pip install requests beautifulsoup4</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>requests 用于模拟浏览器页面请求</li></ul><h3 id="爬虫步骤" tabindex="-1"><a class="header-anchor" href="#爬虫步骤"><span>爬虫步骤</span></a></h3><ul><li>1.发送请求 - requests</li><li>2.解析数据 - BeautifulSoup/json</li><li>3.提取数据</li><li>4.保存数据 - with open(&quot;文件&quot;, &quot;w&quot;, 编码) as file</li></ul><h3 id="获取豆瓣top50电影排行-html获取数据" tabindex="-1"><a class="header-anchor" href="#获取豆瓣top50电影排行-html获取数据"><span>获取豆瓣Top50电影排行 - html获取数据</span></a></h3><ul><li>csv 操作csv文件</li><li>BeautifulSoup 用于解析Html/xml字符串</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> requests</span>
<span class="line"><span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup</span>
<span class="line"><span class="token keyword">import</span> csv</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. 发送HTTP请求获取网页内容（类似JS的fetch）</span></span>
<span class="line">url <span class="token operator">=</span> <span class="token string">&quot;https://movie.douban.com/top250&quot;</span></span>
<span class="line">headers <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 解析HTML内容（类似JS的DOM操作）</span></span>
<span class="line">soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">&quot;html.parser&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 提取电影数据（通过CSS选择器定位元素）</span></span>
<span class="line">movies <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">for</span> item <span class="token keyword">in</span> soup<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token string">&quot;.item&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    title <span class="token operator">=</span> item<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">&quot;.title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text</span>
<span class="line">    rating <span class="token operator">=</span> item<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">&quot;.rating_num&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text</span>
<span class="line">    link <span class="token operator">=</span> item<span class="token punctuation">.</span>select_one<span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;href&quot;</span><span class="token punctuation">]</span></span>
<span class="line">    movies<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span> title<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;rating&quot;</span><span class="token punctuation">:</span> rating<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;link&quot;</span><span class="token punctuation">:</span> link</span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. 保存到CSV文件（类似JS写入文件）</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;movies.csv&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span> newline<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">    writer <span class="token operator">=</span> csv<span class="token punctuation">.</span>DictWriter<span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> fieldnames<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rating&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;link&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    writer<span class="token punctuation">.</span>writeheader<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    writer<span class="token punctuation">.</span>writerows<span class="token punctuation">(</span>movies<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;数据已保存到 movies.csv 文件！&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="百度新闻-api接口获取数据" tabindex="-1"><a class="header-anchor" href="#百度新闻-api接口获取数据"><span>百度新闻 - API接口获取数据</span></a></h3><ul><li>json 解析json数据</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> requests</span>
<span class="line"><span class="token keyword">import</span> json</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. 发送HTTP请求获取网页内容（类似JS的fetch）</span></span>
<span class="line">url <span class="token operator">=</span> <span class="token string">&quot;https://news.baidu.com/widget?id=LocalNews&amp;loc=8206&amp;ajax=json&amp;t=1740990658439&quot;</span></span>
<span class="line">headers <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;Cookie&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;BIDUPSID=511EE2E51AFB200FB810A6B547E8D8DF; PSTM=1715224886; BAIDUID=2440377A056D28148F049494487811E3:SL=0:NR=10:FG=1; BDUSS=luLVRNc25Rfk5NSE5OSWVKeEhrbVhLN3JBUk1wMlE4WDhILVpFUzNSaTlPRTFuRVFBQUFBJCQAAAAAAAAAAAEAAACkO1whsKXRvc3f0sEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL2rJWe9qyVnaD; BDUSS_BFESS=luLVRNc25Rfk5NSE5OSWVKeEhrbVhLN3JBUk1wMlE4WDhILVpFUzNSaTlPRTFuRVFBQUFBJCQAAAAAAAAAAAEAAACkO1whsKXRvc3f0sEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL2rJWe9qyVnaD; MAWEBCUID=web_aFTZWWfbhqUakOCdOKqSRaHuUsEsOURPybvKiRMbmBcnJICjRD; MCITY=-268%3A; H_WISE_SIDS_BFESS=110085_287281_1992049_626068_628198_632155_633618_633569_634603_635511_636123_639037_639614_637511_639929_640078_640333_627286_640393_637862_640378_640829_640962_640974_640989_641048_641081_641054_641120_641173_641219_640865_641400_641424_641459_641468_641516_640916_641496_639679_641665_641591_641590_641593_641585_641588_641756_641797_641841_641262_641907_642007_642057_642072_641938_640773_642157_642202_641703_642322_642344_641154_642407_641423_642623_642658_642451_642537_642505_642755_642912_641325_642954_642987_642992_642979_642974_643040_643022_639696_642931_643057_643213_643294_643279_643181_643276; H_PS_PSSID=61027_62167_62206_62261_62282_62134_62136_62325_62345_62330_62368_62372; H_WISE_SIDS=61027_62167_62206_62261_62282_62134_62136_62325_62345_62330_62368_62372; ab_sr=1.0.1_YzVkYWI0YjdmMWU2YjIyMThlZTRjZDI5MWVhZGYxMDgwYzAzYWFmNWE0ZWJiNDgyNTA0YTg5NTYzMTUzMzljYmFlYzg5NjdiOGYxMDc5M2NjNmEzMWNlZjc2ZTk4ZmUzM2U3NTljZmIxYjMyZjcxNGM5ZDE2MGM1YWM3Y2VmZjcxMzg3YTlmYjA3ZTNmNThlNDk4ZjUzNzIxOGY5YWEzOQ==; BDORZ=B490B5EBF6F3CD402E515D22BCDA1598; BAIDUID_BFESS=2440377A056D28148F049494487811E3:SL=0:NR=10:FG=1; delPer=0; PSINO=2; Hm_lvt_e9e114d958ea263de46e080563e254c4=1740990596; Hm_lpvt_e9e114d958ea263de46e080563e254c4=1740990596; HMACCOUNT=F32079A778FF9CB6; LOCALGX=%u5317%u4EAC%7C%30%7C%u90D1%u5DDE%7C%34%33%37%32&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 解析JSON内容</span></span>
<span class="line">firsts <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;LocalNews&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;rows&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;first&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 提取数据</span></span>
<span class="line">news <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">for</span> item <span class="token keyword">in</span> firsts<span class="token punctuation">:</span></span>
<span class="line">    title <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">]</span></span>
<span class="line">    url <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">]</span></span>
<span class="line">    img <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">&quot;imgUrl&quot;</span><span class="token punctuation">]</span></span>
<span class="line">    news<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span>title<span class="token punctuation">,</span> </span>
<span class="line">        <span class="token string">&quot;url&quot;</span><span class="token punctuation">:</span>url<span class="token punctuation">,</span> </span>
<span class="line">        <span class="token string">&quot;img&quot;</span><span class="token punctuation">:</span>img</span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. 保存数据</span></span>
<span class="line">newsstr <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>news<span class="token punctuation">,</span> ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;news.json&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>newsstr<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;json保存成功&#39;</span><span class="token punctuation">)</span>   </span>
<span class="line"></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;news.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>newsstr<span class="token punctuation">)</span>    </span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;文本保存成功&#39;</span><span class="token punctuation">)</span>   </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>图片资源下载</p><ul><li>Image.open 只能打开本地图片，因此需要BytesIO将图片缓存到本地</li><li>random 用于生成随机数</li><li>os 用于创建匹配图片目录</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">import</span> requests</span>
<span class="line"><span class="token keyword">import</span> json</span>
<span class="line"><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image</span>
<span class="line"><span class="token keyword">import</span> os</span>
<span class="line"><span class="token keyword">from</span> io <span class="token keyword">import</span> BytesIO</span>
<span class="line"><span class="token keyword">import</span> random</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. 发送HTTP请求获取网页内容（类似JS的fetch）</span></span>
<span class="line">url <span class="token operator">=</span> <span class="token string">&quot;https://news.baidu.com/widget?id=LocalNews&amp;loc=8206&amp;ajax=json&amp;t=1740990658439&quot;</span></span>
<span class="line">headers <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;Cookie&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;BIDUPSID=511EE2E51AFB200FB810A6B547E8D8DF; PSTM=1715224886; BAIDUID=2440377A056D28148F049494487811E3:SL=0:NR=10:FG=1; BDUSS=luLVRNc25Rfk5NSE5OSWVKeEhrbVhLN3JBUk1wMlE4WDhILVpFUzNSaTlPRTFuRVFBQUFBJCQAAAAAAAAAAAEAAACkO1whsKXRvc3f0sEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL2rJWe9qyVnaD; BDUSS_BFESS=luLVRNc25Rfk5NSE5OSWVKeEhrbVhLN3JBUk1wMlE4WDhILVpFUzNSaTlPRTFuRVFBQUFBJCQAAAAAAAAAAAEAAACkO1whsKXRvc3f0sEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAL2rJWe9qyVnaD; MAWEBCUID=web_aFTZWWfbhqUakOCdOKqSRaHuUsEsOURPybvKiRMbmBcnJICjRD; MCITY=-268%3A; H_WISE_SIDS_BFESS=110085_287281_1992049_626068_628198_632155_633618_633569_634603_635511_636123_639037_639614_637511_639929_640078_640333_627286_640393_637862_640378_640829_640962_640974_640989_641048_641081_641054_641120_641173_641219_640865_641400_641424_641459_641468_641516_640916_641496_639679_641665_641591_641590_641593_641585_641588_641756_641797_641841_641262_641907_642007_642057_642072_641938_640773_642157_642202_641703_642322_642344_641154_642407_641423_642623_642658_642451_642537_642505_642755_642912_641325_642954_642987_642992_642979_642974_643040_643022_639696_642931_643057_643213_643294_643279_643181_643276; H_WISE_SIDS=61027_62167_62206_62261_62282_62134_62136_62325_62345_62330_62368_62372; H_PS_PSSID=61027_62167_62206_62261_62282_62134_62136_62325_62345_62330_62368_62372; H_WISE_SIDS=61027_62167_62206_62261_62282_62134_62136_62325_62345_62330_62368_62372; ab_sr=1.0.1_YzVkYWI0YjdmMWU2YjIyMThlZTRjZDI5MWVhZGYxMDgwYzAzYWFmNWE0ZWJiNDgyNTA0YTg5NTYzMTUzMzljYmFlYzg5NjdiOGYxMDc5M2NjNmEzMWNlZjc2ZTk4ZmUzM2U3NTljZmIxYjMyZjcxNGM5ZDE2MGM1YWM3Y2VmZjcxMzg3YTlmYjA3ZTNmNThlNDk4ZjUzNzIxOGY5YWEzOQ==; BDORZ=B490B5EBF6F3CD402E515D22BCDA1598; BAIDUID_BFESS=2440377A056D28148F049494487811E3:SL=0:NR=10:FG=1; delPer=0; PSINO=2; Hm_lvt_e9e114d958ea263de46e080563e254c4=1740990596; Hm_lpvt_e9e114d958ea263de46e080563e254c4=1740990596; HMACCOUNT=F32079A778FF9CB6; LOCALGX=%u5317%u4EAC%7C%30%7C%u90D1%u5DDE%7C%34%33%37%32&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span></span>
<span class="line">data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">#  生成随机字符串</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">generate_custom_random_string</span><span class="token punctuation">(</span>length<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 自定义字符池（包含字母、数字和特殊字符）</span></span>
<span class="line">    characters <span class="token operator">=</span> <span class="token string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choices<span class="token punctuation">(</span>characters<span class="token punctuation">,</span> k<span class="token operator">=</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 加载图片并下载</span></span>
<span class="line">save_dir <span class="token operator">=</span> <span class="token string">&quot;C:/Users/admin/Desktop/pics/&quot;</span></span>
<span class="line">os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>save_dir<span class="token punctuation">,</span> exist_ok<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">download_img</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>fileName<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span></span>
<span class="line">    img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>BytesIO<span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    filename <span class="token operator">=</span> fileName <span class="token operator">+</span> <span class="token string">&quot;.jpg&quot;</span></span>
<span class="line">    img<span class="token punctuation">.</span>save<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>save_dir<span class="token punctuation">,</span> filename<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 解析JSON内容</span></span>
<span class="line">firsts <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token punctuation">[</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;LocalNews&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;rows&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;first&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">idx <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">news <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">for</span> item <span class="token keyword">in</span> firsts<span class="token punctuation">:</span></span>
<span class="line">    title <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">&quot;title&quot;</span><span class="token punctuation">]</span></span>
<span class="line">    url <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">]</span></span>
<span class="line">    img <span class="token operator">=</span> item<span class="token punctuation">[</span><span class="token string">&quot;imgUrl&quot;</span><span class="token punctuation">]</span></span>
<span class="line">    imgname <span class="token operator">=</span> generate_custom_random_string<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line">    download_img<span class="token punctuation">(</span>img<span class="token punctuation">,</span>imgname<span class="token punctuation">)</span></span>
<span class="line">    news<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;index&quot;</span><span class="token punctuation">:</span> idx<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span> title<span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;img&quot;</span><span class="token punctuation">:</span> imgname<span class="token operator">+</span><span class="token string">&#39;.jpg&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4.数据存储</span></span>
<span class="line">newstr <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>news<span class="token punctuation">,</span> ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> indent<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;news.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">    f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>newstr<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;结束&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="selenium-自动化测试工具" tabindex="-1"><a class="header-anchor" href="#selenium-自动化测试工具"><span>selenium 自动化测试工具</span></a></h3>`,22)),p(a,{style:{color:"rgb(247, 49, 49)"}},{default:e(()=>n[48]||(n[48]=[s("Selenium",-1)])),_:1,__:[48]}),p(a,{style:{color:"rgb(22, 30, 46)"}},{default:e(()=>n[49]||(n[49]=[s("是一个Web的自动化测试工具,最初是为网站自动化测试而开发的,可以按指定的命令自动操作。",-1)])),_:1,__:[49]}),n[67]||(n[67]=l(`<div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">pip install selenium</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="模拟操作" tabindex="-1"><a class="header-anchor" href="#模拟操作"><span>模拟操作</span></a></h4><ul><li>webdriver.Chrome 启动浏览器</li><li>driver.get 打开网页</li><li>driver.quit 关闭浏览器</li><li>find_element(By.CSS_SELECTOR, &quot;.img&quot;) 使用css选择器获取单个元素</li><li>find_elements(By.CSS_SELECTOR, &quot;.img&quot;) 使用css选择器获取所有元素</li><li>search_box.send_keys(Keys.ENTER) 模拟回车事件</li><li>search_box.send_keys(&quot;Selenium&quot;) 模拟输入字符串“Selenium”</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver</span>
<span class="line"><span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By</span>
<span class="line"><span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>keys <span class="token keyword">import</span> Keys</span>
<span class="line"><span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>chrome<span class="token punctuation">.</span>options <span class="token keyword">import</span> Options</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 配置执行完不关闭浏览器</span></span>
<span class="line">options <span class="token operator">=</span> Options<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">options<span class="token punctuation">.</span>add_experimental_option<span class="token punctuation">(</span><span class="token string">&quot;detach&quot;</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span></span>
<span class="line"> </span>
<span class="line"><span class="token comment"># 启动 Chrome 浏览器</span></span>
<span class="line">driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span>options<span class="token operator">=</span>options<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 打开网页</span></span>
<span class="line">driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;https://www.baidu.com&quot;</span><span class="token punctuation">)</span></span>
<span class="line">search_box <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>NAME<span class="token punctuation">,</span> <span class="token string">&quot;wd&quot;</span><span class="token punctuation">)</span> </span>
<span class="line">search_box<span class="token punctuation">.</span>send_keys<span class="token punctuation">(</span><span class="token string">&quot;Selenium&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># 模拟回车 </span></span>
<span class="line"><span class="token comment"># search_box.send_keys(Keys.ENTER)</span></span>
<span class="line"><span class="token comment"># 模拟点击搜索按钮</span></span>
<span class="line">button <span class="token operator">=</span> driver<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span> <span class="token string">&quot;input#su&quot;</span><span class="token punctuation">)</span></span>
<span class="line">button<span class="token punctuation">.</span>click<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment"># print(&quot;获取完毕！&quot;)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 关闭浏览器</span></span>
<span class="line"><span class="token comment"># driver.quit()</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)),t("h4",b,[t("a",g,[t("span",null,[p(a,{style:{color:"rgb(22, 30, 46)"}},{default:e(()=>n[50]||(n[50]=[s("使用selenium当爬虫，模拟打开浏览器获取页面数据：",-1)])),_:1,__:[50]})])])]),n[68]||(n[68]=l(`<ul><li>WebDriverWait 异步等待</li><li>EC.presence_of_all_elements_located 获取所有符合条件的元素，返回数组</li><li>EC.presence_of_element_located 获取一个元素，返回对象</li><li>get_attribute 获取标签上的属性</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> selenium <span class="token keyword">import</span> webdriver</span>
<span class="line"><span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>by <span class="token keyword">import</span> By</span>
<span class="line"><span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>common<span class="token punctuation">.</span>keys <span class="token keyword">import</span> Keys</span>
<span class="line"><span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>support<span class="token punctuation">.</span>ui <span class="token keyword">import</span> WebDriverWait</span>
<span class="line"><span class="token keyword">from</span> selenium<span class="token punctuation">.</span>webdriver<span class="token punctuation">.</span>support <span class="token keyword">import</span> expected_conditions <span class="token keyword">as</span> EC</span>
<span class="line"><span class="token keyword">from</span> selenium<span class="token punctuation">.</span>common<span class="token punctuation">.</span>exceptions <span class="token keyword">import</span> TimeoutException</span>
<span class="line"><span class="token keyword">import</span> json</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 获取div背景图片-截取</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">getDivBackgroundImg</span><span class="token punctuation">(</span>style_value<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">if</span> style_value <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span></span>
<span class="line">    <span class="token builtin">str</span> <span class="token operator">=</span> style_value<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">:</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">&#39;https://&#39;</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token builtin">str</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. 发送HTTP请求获取网页内容（类似JS的fetch）</span></span>
<span class="line"><span class="token comment"># 启动 Chrome 浏览器</span></span>
<span class="line">driver <span class="token operator">=</span> webdriver<span class="token punctuation">.</span>Chrome<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 打开网页</span></span>
<span class="line">    driver<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;https://www.imooc.com/course/list&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment"># 异步 等待直到某个关键元素出现（如异步加载的内容）  presence_of_element_located -单个元素  presence_of_all_elements_located -多个元素</span></span>
<span class="line">    soup <span class="token operator">=</span> WebDriverWait<span class="token punctuation">(</span>driver<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span>until<span class="token punctuation">(</span></span>
<span class="line">        EC<span class="token punctuation">.</span>presence_of_all_elements_located<span class="token punctuation">(</span><span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span> <span class="token string">&quot;.list a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment"># 获取数据</span></span>
<span class="line">    course <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>soup<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">for</span> a <span class="token keyword">in</span> soup<span class="token punctuation">:</span></span>
<span class="line">            title <span class="token operator">=</span> a<span class="token punctuation">.</span>get_attribute<span class="token punctuation">(</span><span class="token string">&quot;data-title&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            url <span class="token operator">=</span> a<span class="token punctuation">.</span>get_attribute<span class="token punctuation">(</span><span class="token string">&quot;href&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            div <span class="token operator">=</span> a<span class="token punctuation">.</span>find_element<span class="token punctuation">(</span>By<span class="token punctuation">.</span>CSS_SELECTOR<span class="token punctuation">,</span> <span class="token string">&quot;.img&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            sty <span class="token operator">=</span> div<span class="token punctuation">.</span>get_attribute<span class="token punctuation">(</span><span class="token string">&quot;style&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            img <span class="token operator">=</span> getDivBackgroundImg<span class="token punctuation">(</span>sty<span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">if</span> title <span class="token keyword">and</span> url<span class="token punctuation">:</span></span>
<span class="line">                course<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">                    <span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span> title<span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&quot;img&quot;</span><span class="token punctuation">:</span> img<span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&quot;url&quot;</span><span class="token punctuation">:</span> url</span>
<span class="line">                <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        driver<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token builtin">str</span> <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>course<span class="token punctuation">,</span> ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;course.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token builtin">file</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;获取完毕！&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line"><span class="token keyword">except</span> TimeoutException<span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;超时：未找到目标元素&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2))])}const h=o(r,[["render",y]]),w=JSON.parse(`{"path":"/mds/python%E7%88%AC%E8%99%AB.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、python基础","slug":"一、python基础","link":"#一、python基础","children":[{"level":3,"title":"1.基本用法","slug":"_1-基本用法","link":"#_1-基本用法","children":[]},{"level":3,"title":"2.数据类型","slug":"_2-数据类型","link":"#_2-数据类型","children":[]},{"level":3,"title":"3.类型转换","slug":"_3-类型转换","link":"#_3-类型转换","children":[]},{"level":3,"title":"4.控制语句","slug":"_4-控制语句","link":"#_4-控制语句","children":[]},{"level":3,"title":"5.函数","slug":"_5-函数","link":"#_5-函数","children":[]},{"level":3,"title":"6.推导式","slug":"_6-推导式","link":"#_6-推导式","children":[]},{"level":3,"title":"7.面向对象","slug":"_7-面向对象","link":"#_7-面向对象","children":[]},{"level":3,"title":"8.文件","slug":"_8-文件","link":"#_8-文件","children":[]},{"level":3,"title":"9.常用函数","slug":"_9-常用函数","link":"#_9-常用函数","children":[]},{"level":3,"title":"10.pip用法","slug":"_10-pip用法","link":"#_10-pip用法","children":[]},{"level":3,"title":"11.pyecharts图表","slug":"_11-pyecharts图表","link":"#_11-pyecharts图表","children":[]}]},{"level":2,"title":"二、爬虫部分","slug":"二、爬虫部分","link":"#二、爬虫部分","children":[{"level":3,"title":"安装必须插件","slug":"安装必须插件","link":"#安装必须插件","children":[]},{"level":3,"title":"爬虫步骤","slug":"爬虫步骤","link":"#爬虫步骤","children":[]},{"level":3,"title":"获取豆瓣Top50电影排行 - html获取数据","slug":"获取豆瓣top50电影排行-html获取数据","link":"#获取豆瓣top50电影排行-html获取数据","children":[]},{"level":3,"title":"百度新闻 - API接口获取数据","slug":"百度新闻-api接口获取数据","link":"#百度新闻-api接口获取数据","children":[]},{"level":3,"title":"selenium  自动化测试工具","slug":"selenium-自动化测试工具","link":"#selenium-自动化测试工具","children":[]}]}],"git":{},"filePathRelative":"mds/python爬虫.md","excerpt":"<h2>一、python基础</h2>\\n<p>python是弱类型语言</p>\\n<h3>1.基本用法</h3>\\n<div class=\\"language-python line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"py\\"><pre><code><span class=\\"line\\"><span class=\\"token comment\\"># 导入整个模块</span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">import</span> somemodule</span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 从某个模块中导入某个函数</span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">from</span> somemodule <span class=\\"token keyword\\">import</span> somefunction</span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 从某个模块中导入多个函数 </span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">from</span> somemodule <span class=\\"token keyword\\">import</span> firstfunc<span class=\\"token punctuation\\">,</span> secondfunc<span class=\\"token punctuation\\">,</span> thirdfunc</span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 注释：打印输出</span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">print</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Hello, Python!\\"</span><span class=\\"token punctuation\\">)</span> </span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 条件语句与缩进</span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">if</span> <span class=\\"token boolean\\">True</span><span class=\\"token punctuation\\">:</span></span>\\n<span class=\\"line\\">    <span class=\\"token keyword\\">print</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"True\\"</span><span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span></span>\\n<span class=\\"line\\">    <span class=\\"token keyword\\">print</span> <span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"False\\"</span><span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 等待用户输入</span></span>\\n<span class=\\"line\\"><span class=\\"token builtin\\">input</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"\\\\n\\\\n按下 enter 键后退出。\\"</span><span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 每行结束不需要加‘;’符合；单行语句需要加</span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">import</span> sys<span class=\\"token punctuation\\">;</span> x <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'runoob'</span><span class=\\"token punctuation\\">;</span> sys<span class=\\"token punctuation\\">.</span>stdout<span class=\\"token punctuation\\">.</span>write<span class=\\"token punctuation\\">(</span>x <span class=\\"token operator\\">+</span> <span class=\\"token string\\">'\\\\n'</span><span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 删除对象单个引用</span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">del</span> a</span>\\n<span class=\\"line\\"><span class=\\"token comment\\"># 删除对象多个引用</span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">del</span> a<span class=\\"token punctuation\\">,</span>b<span class=\\"token punctuation\\">,</span>c</span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}`);export{h as comp,w as data};
