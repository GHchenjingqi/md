import{_ as l,c,b as o,d as a,a as e,e as s,w as t,r as i,o as u}from"./app-DMoYNb1f.js";const r={},k={id:"方法一-catmull-rom算法-根据一系列点集合绘制平滑曲线",tabindex:"-1"},d={class:"header-anchor",href:"#方法一-catmull-rom算法-根据一系列点集合绘制平滑曲线"},m={id:"方法二-二维三次贝塞尔曲线-由起点、终点和两个控制点所定义",tabindex:"-1"},v={class:"header-anchor",href:"#方法二-二维三次贝塞尔曲线-由起点、终点和两个控制点所定义"},b={id:"方法三-三维三次贝塞尔曲线-由起点、终点和两个控制点所定义",tabindex:"-1"},g={class:"header-anchor",href:"#方法三-三维三次贝塞尔曲线-由起点、终点和两个控制点所定义"},y={id:"方案四-椭圆的曲线-将xradius与yradius设为相等的值它将会成为一个圆",tabindex:"-1"},h={class:"header-anchor",href:"#方案四-椭圆的曲线-将xradius与yradius设为相等的值它将会成为一个圆"},w={id:"方案五-二维二次贝塞尔曲线-由起点、终点和一个控制点所定义",tabindex:"-1"},f={class:"header-anchor",href:"#方案五-二维二次贝塞尔曲线-由起点、终点和一个控制点所定义"},j={id:"方案六-三维-二次贝塞尔曲线-由起点、终点和一个控制点所定义",tabindex:"-1"},x={class:"header-anchor",href:"#方案六-三维-二次贝塞尔曲线-由起点、终点和一个控制点所定义"},E={id:"方案七-样条曲线-从一系列的点中-创建一个平滑的二维样条曲线",tabindex:"-1"},R={class:"header-anchor",href:"#方案七-样条曲线-从一系列的点中-创建一个平滑的二维样条曲线"},T={id:"_13-场景获取模型或物体",tabindex:"-1"},H={class:"header-anchor",href:"#_13-场景获取模型或物体"},C={id:"_14-mesh原型方法",tabindex:"-1"},M={class:"header-anchor",href:"#_14-mesh原型方法"},L={id:"getworld",tabindex:"-1"},_={class:"header-anchor",href:"#getworld"};function B(O,n){const p=i("font");return u(),c("div",null,[n[86]||(n[86]=o(`<p>官方地址：<a href="https://threejs.org/" target="_blank" rel="noopener noreferrer">https://threejs.org/</a></p><h2 id="一-安装及引入" tabindex="-1"><a class="header-anchor" href="#一-安装及引入"><span>一.安装及引入</span></a></h2><p>1.安装</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">npm install <span class="token operator">--</span>save three</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2.引入</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">THREE</span> <span class="token keyword">from</span> <span class="token string">&#39;three&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="二-使用threejs" tabindex="-1"><a class="header-anchor" href="#二-使用threejs"><span>二.使用threejs</span></a></h2><p>开发一个threejs场景至少需要以下4个元素：</p><h3 id="_1-场景-scene-类似canvas的画布-用于呈现效果。" tabindex="-1"><a class="header-anchor" href="#_1-场景-scene-类似canvas的画布-用于呈现效果。"><span>1.场景 scene ,类似canvas的画布，用于呈现效果。</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>设置场景背景色</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">scene<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Color</span><span class="token punctuation">(</span><span class="token number">0xcccccc</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,12)),a("p",null,[n[1]||(n[1]=s("设置场景贴图纹理，使用CubeTextureLoader按照 左右、上下、前后的顺序加载图片，最后给scene.background属性。注意：图片的宽高一致，可以将全景图使用 ",-1)),e(p,{style:{color:"rgb(77, 77, 77)"}},{default:t(()=>n[0]||(n[0]=[s("PTGui软件分割6张图（工具-分割面/QTVR）。",-1)])),_:1,__:[0]})]),n[87]||(n[87]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 环境贴图：左右、上下、前后</span></span>
<span class="line"><span class="token keyword">const</span> cubeTexture <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>CubeTextureLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span><span class="token string">&quot;/public/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&quot;003.png&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;001.png&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;006.png&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;002.png&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;004.png&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;005.png&quot;</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span>scene<span class="token punctuation">.</span>background <span class="token operator">=</span>cubeTexture<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>场景是顶级父级对象，物体，灯光都是子对象，通过 <strong>scene.add</strong> 方法将子对象添加到场景的childen属性中。</p><p><strong>scene.childen</strong> 类型为数组，childen数组长度就是子对象的数量，可以按添加顺序获取到子对象。当然也可以使用 <strong>scene.remove</strong> 移除子对象</p><h3 id="_2-元素物体-几何图形-模型-粒子灯光等。一个物体有材质-创建后还需要把材质和物体组合起来-然后放置到场景中。" tabindex="-1"><a class="header-anchor" href="#_2-元素物体-几何图形-模型-粒子灯光等。一个物体有材质-创建后还需要把材质和物体组合起来-然后放置到场景中。"><span>2.元素物体，几何图形，模型，粒子灯光等。一个物体有材质，创建后还需要把材质和物体组合起来，然后放置到场景中。</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 创建立方体 BoxGeometry(长，宽，高)，three的大小单位是米</span></span>
<span class="line"><span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// MeshBasicMaterial 为对象创建材质，颜色属性接收16进制(0xff0000），字符串16进制（&#39;#333333&#39;）,颜色（red）</span></span>
<span class="line"><span class="token keyword">const</span> material <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterical</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xff0000</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 创建网格并把物体和材质组装一起</span></span>
<span class="line"><span class="token keyword">const</span> mesh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry <span class="token punctuation">,</span>material <span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 添加到场景中</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>mesh<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了立方体（BoxGeometry），还有常见的<strong>几何体Geometry</strong>：</p><ul><li>CapsuleGeometry - 胶囊体</li><li>CircleGeometry - 圆形</li><li>ConeGeometry - 圆锥体</li><li>CylinderGeometry - 圆柱体</li><li>DodecahedronGeometry - 12面缓冲体</li><li>SphereGeometry - 球缓冲体</li><li>TorusGeometry - 圆环体</li><li>TubeGeometry - 管道体</li><li>....</li></ul><p>**材质material，**如果需要改变物体的外观效果，就需要用到材质。</p><p><img src="https://cdn.nlark.com/yuque/0/2024/svg/1460947/1715828395542-d85a93b3-e078-45d0-b707-8b28190fe99f.svg" alt=""></p><p>物体创建完成之后，我们可以对物体进行：改变位置、缩放比例、旋转角度。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">cube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">;</span></span>
<span class="line">cube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">;</span></span>
<span class="line">cube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">cube<span class="token punctuation">.</span>scale<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">1.25</span><span class="token punctuation">;</span></span>
<span class="line">cube<span class="token punctuation">.</span>scale<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0.25</span><span class="token punctuation">;</span></span>
<span class="line">cube<span class="token punctuation">.</span>scale<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">;</span></span>
<span class="line"> </span>
<span class="line">cube<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 绕y轴旋转90度  </span></span>
<span class="line"><span class="token comment">// 注意：Three.js使用弧度，所以90度需要转换为弧度，即 Math.PI / 2  </span></span>
<span class="line">cube<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-1-绘制曲线" tabindex="-1"><a class="header-anchor" href="#_2-1-绘制曲线"><span>2.1 绘制曲线</span></a></h4>`,12)),a("h5",k,[a("a",d,[a("span",null,[n[3]||(n[3]=s("方法一：",-1)),n[4]||(n[4]=a("a",{href:"https://en.wikipedia.org/wiki/Centripetal_Catmull-Rom_spline",target:"_blank",rel:"noopener noreferrer"},"Catmull-Rom",-1)),e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[2]||(n[2]=[s("算法，根据一系列点集合绘制平滑曲线",-1)])),_:1,__:[2]})])])]),n[88]||(n[88]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> curve <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>CatmullRomCurve3</span><span class="token punctuation">(</span> <span class="token punctuation">[</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 经过点1</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 经过点2</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 经过点3</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 经过点4</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span> <span class="token punctuation">)</span> <span class="token comment">// 经过点5</span></span>
<span class="line"><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// getPoints 均匀获取曲线上的50个点</span></span>
<span class="line"><span class="token keyword">const</span> points <span class="token operator">=</span> curve<span class="token punctuation">.</span><span class="token function">getPoints</span><span class="token punctuation">(</span> <span class="token number">50</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 创建一个新的 BufferGeometry. 同时将预置属性设置为默认值. </span></span>
<span class="line"><span class="token comment">// setFromPoints通过一组给定的点来创建一条曲线</span></span>
<span class="line"><span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BufferGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFromPoints</span><span class="token punctuation">(</span> points <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 线材质 </span></span>
<span class="line"><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>LineBasicMaterial</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xff0000</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创建曲线</span></span>
<span class="line"><span class="token keyword">const</span> curveObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Line</span><span class="token punctuation">(</span> geometry<span class="token punctuation">,</span> material <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),a("h5",m,[a("a",v,[a("span",null,[n[6]||(n[6]=s("方法二：二维",-1)),n[7]||(n[7]=a("a",{href:"http://en.wikipedia.org/wiki/B%C3%A9zier_curve#mediaviewer/File:Bezier_curve.svg",target:"_blank",rel:"noopener noreferrer"},"三次贝塞尔曲线",-1)),n[8]||(n[8]=s("，",-1)),e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[5]||(n[5]=[s("由起点、终点和两个控制点所定义",-1)])),_:1,__:[5]})])])]),n[89]||(n[89]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> curve <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>CubicBezierCurve</span><span class="token punctuation">(</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 起点</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">15</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 控制点1</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">15</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 控制点2</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token comment">// 终点</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> points <span class="token operator">=</span> curve<span class="token punctuation">.</span><span class="token function">getPoints</span><span class="token punctuation">(</span> <span class="token number">50</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BufferGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFromPoints</span><span class="token punctuation">(</span> points <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>LineBasicMaterial</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xff0000</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Create the final object to add to the scene</span></span>
<span class="line"><span class="token keyword">const</span> curveObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Line</span><span class="token punctuation">(</span> geometry<span class="token punctuation">,</span> material <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),a("h5",b,[a("a",g,[a("span",null,[n[10]||(n[10]=s("方法三：三维",-1)),n[11]||(n[11]=a("a",{href:"http://en.wikipedia.org/wiki/B%C3%A9zier_curve#mediaviewer/File:Bezier_curve.svg",target:"_blank",rel:"noopener noreferrer"},"三次贝塞尔曲线",-1)),e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[9]||(n[9]=[s("， 由起点、终点和两个控制点所定义",-1)])),_:1,__:[9]})])])]),n[90]||(n[90]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> curve <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>CubicBezierCurve3</span><span class="token punctuation">(</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 起点</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 控制点1</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 控制点2</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span>  <span class="token comment">// 终点</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> points <span class="token operator">=</span> curve<span class="token punctuation">.</span><span class="token function">getPoints</span><span class="token punctuation">(</span> <span class="token number">50</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BufferGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFromPoints</span><span class="token punctuation">(</span> points <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>LineBasicMaterial</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xff0000</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Create the final object to add to the scene</span></span>
<span class="line"><span class="token keyword">const</span> curveObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Line</span><span class="token punctuation">(</span> geometry<span class="token punctuation">,</span> material <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),a("h5",y,[a("a",h,[a("span",null,[n[15]||(n[15]=s("方案四： ",-1)),e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[12]||(n[12]=[s("椭圆的曲线， 将",-1)])),_:1,__:[12]}),n[16]||(n[16]=s("xRadius",-1)),e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[13]||(n[13]=[s("与",-1)])),_:1,__:[13]}),n[17]||(n[17]=s("yRadius",-1)),e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[14]||(n[14]=[s("设为相等的值它将会成为一个圆",-1)])),_:1,__:[14]})])])]),n[91]||(n[91]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> curve <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>EllipseCurve</span><span class="token punctuation">(</span></span>
<span class="line">	<span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token comment">// ax, aY  椭圆中心坐标x,y</span></span>
<span class="line">	<span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span>           <span class="token comment">// xRadius, yRadius 椭圆x,y轴半经</span></span>
<span class="line">	<span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">,</span>  <span class="token comment">// aStartAngle, aEndAngle  起始、终止角度</span></span>
<span class="line">	<span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token comment">// aClockwise 是否按照顺时针方向，默认false</span></span>
<span class="line">	<span class="token number">0</span>                 <span class="token comment">// aRotation  椭圆从X轴正方向逆时针的旋转角度</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> points <span class="token operator">=</span> curve<span class="token punctuation">.</span><span class="token function">getPoints</span><span class="token punctuation">(</span> <span class="token number">50</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BufferGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFromPoints</span><span class="token punctuation">(</span> points <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>LineBasicMaterial</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xff0000</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Create the final object to add to the scene</span></span>
<span class="line"><span class="token keyword">const</span> ellipse <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Line</span><span class="token punctuation">(</span> geometry<span class="token punctuation">,</span> material <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),a("h5",w,[a("a",f,[a("span",null,[n[19]||(n[19]=s("方案五：二维",-1)),n[20]||(n[20]=a("a",{href:"http://en.wikipedia.org/wiki/B%C3%A9zier_curve#mediaviewer/File:B%C3%A9zier_2_big.gif",target:"_blank",rel:"noopener noreferrer"},"二次贝塞尔曲线",-1)),n[21]||(n[21]=s()),e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[18]||(n[18]=[s(" 由起点、终点和一个控制点所定义",-1)])),_:1,__:[18]})])])]),n[92]||(n[92]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> curve <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>QuadraticBezierCurve</span><span class="token punctuation">(</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 起点</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">15</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 控制点1</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token comment">// 终点</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> points <span class="token operator">=</span> curve<span class="token punctuation">.</span><span class="token function">getPoints</span><span class="token punctuation">(</span> <span class="token number">50</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BufferGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFromPoints</span><span class="token punctuation">(</span> points <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>LineBasicMaterial</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xff0000</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//Create the final object to add to the scene</span></span>
<span class="line"><span class="token keyword">const</span> curveObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Line</span><span class="token punctuation">(</span> geometry<span class="token punctuation">,</span> material <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),a("h5",j,[a("a",x,[a("span",null,[n[24]||(n[24]=s("方案六：",-1)),e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[22]||(n[22]=[s("三维 ",-1)])),_:1,__:[22]}),n[25]||(n[25]=a("a",{href:"http://en.wikipedia.org/wiki/B%C3%A9zier_curve#mediaviewer/File:B%C3%A9zier_2_big.gif",target:"_blank",rel:"noopener noreferrer"},"二次贝塞尔曲线",-1)),e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[23]||(n[23]=[s("， 由起点、终点和一个控制点所定义",-1)])),_:1,__:[23]})])])]),n[93]||(n[93]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> curve <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>QuadraticBezierCurve3</span><span class="token punctuation">(</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> points <span class="token operator">=</span> curve<span class="token punctuation">.</span><span class="token function">getPoints</span><span class="token punctuation">(</span> <span class="token number">50</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BufferGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFromPoints</span><span class="token punctuation">(</span> points <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>LineBasicMaterial</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xff0000</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Create the final object to add to the scene</span></span>
<span class="line"><span class="token keyword">const</span> curveObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Line</span><span class="token punctuation">(</span> geometry<span class="token punctuation">,</span> material <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),a("h5",E,[a("a",R,[a("span",null,[n[27]||(n[27]=s("方案七：",-1)),e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[26]||(n[26]=[s("样条曲线，从一系列的点中，创建一个平滑的二维样条曲线",-1)])),_:1,__:[26]})])])]),n[94]||(n[94]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> curve <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>SplineCurve</span><span class="token punctuation">(</span> <span class="token punctuation">[</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 途径点</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// 途径点</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// 途径点</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span> <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment">// 途径点</span></span>
<span class="line">	<span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token comment">// 途径点</span></span>
<span class="line"><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> points <span class="token operator">=</span> curve<span class="token punctuation">.</span><span class="token function">getPoints</span><span class="token punctuation">(</span> <span class="token number">50</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BufferGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setFromPoints</span><span class="token punctuation">(</span> points <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>LineBasicMaterial</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xff0000</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Create the final object to add to the scene</span></span>
<span class="line"><span class="token keyword">const</span> splineObject <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Line</span><span class="token punctuation">(</span> geometry<span class="token punctuation">,</span> material <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-相机-camera-这里的相机是指-观察物体成像的位置-如同一个相机的视角。创建相机后-也需要把相机放置到场景中。" tabindex="-1"><a class="header-anchor" href="#_3-相机-camera-这里的相机是指-观察物体成像的位置-如同一个相机的视角。创建相机后-也需要把相机放置到场景中。"><span>3.相机 camera，这里的相机是指 观察物体成像的位置，如同一个相机的视角。创建相机后，也需要把相机放置到场景中。</span></a></h3><h4 id="perspectivecamera-透视相机" tabindex="-1"><a class="header-anchor" href="#perspectivecamera-透视相机"><span>PerspectiveCamera: 透视相机</span></a></h4><p>构造函数接收四个参数</p><p><strong>constructor(fov?: number, aspect?: number, near?: number, far?: number);</strong></p><ul><li>fov：角度，视野范围，近大远小</li><li>aspect：画布长宽比</li><li>near：近平面距离，小于这个距离物体不可见</li><li>far：远平面距离，大于这个距离物理不可见，也就是说距离在近远距离之间才可见。</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 创建相机 camera</span></span>
<span class="line"><span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// camera 相机位置</span></span>
<span class="line">camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line"><span class="token comment">// 放置到场景</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>camera<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>除了透视相机还有以下相机：</strong></p><ul><li><strong>正交相机（OrthographicCamera）</strong> ：这种相机不会产生透视效果，而是以平行投影的方式来渲染场景。</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>OrthographicCamera</span><span class="token punctuation">(</span> width <span class="token operator">/</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> height <span class="token operator">/</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span> camera <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>立体相机（StereoCamera）</strong> ：这种相机用于创建立体效果，它包含两个相机，分别模拟左右眼的视角。</li><li><strong>立方体相机（CubeCamera）</strong> ：这种相机用于创建六个面的立方体贴图，可以用于环境映射。</li></ul><hr><p><strong>相机使用</strong></p><p>(1).改变相机位置 - position</p><p>可以使用position.set(x,y,z) ，也可以直接修改指定坐标位置 position.x</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">5</span></span>
<span class="line">camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>(2).改变相机朝向 - lookAt(x,y,z)</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">camera<span class="token punctuation">.</span><span class="token function">lookAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4-渲染器-renderer-从相机的角度渲染物体元素。然后设置渲染器分辨率和尺寸-并把渲染器关联到页面。" tabindex="-1"><a class="header-anchor" href="#_4-渲染器-renderer-从相机的角度渲染物体元素。然后设置渲染器分辨率和尺寸-并把渲染器关联到页面。"><span>4.渲染器 renderer ，从相机的角度渲染物体元素。然后设置渲染器分辨率和尺寸，并把渲染器关联到页面。</span></a></h3><ul><li><strong>WebGLRederer将3d场景通过canvas渲染出来。</strong></li></ul><p>将元素关联到页面有两种，可以使用canvas属性绑定页面元素，也可以把 renderer.domElement 添加到body中。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 创建渲染器 WebGLRenderer</span></span>
<span class="line"><span class="token keyword">const</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRederer</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line"> <span class="token comment">// 第一种：绑定指定canvas元素</span></span>
<span class="line"> <span class="token literal-property property">canvas</span><span class="token operator">:</span> 页面canvas元素</span>
<span class="line"> <span class="token comment">// 抗锯齿属性，开启之后边缘更平滑，降低马赛克出现概率</span></span>
<span class="line"> <span class="token literal-property property">antialias</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 分辨率</span></span>
<span class="line">renderer<span class="token punctuation">.</span>setPixelRatio <span class="token operator">=</span> window<span class="token punctuation">.</span>devicePixelRatio</span>
<span class="line"><span class="token comment">// 尺寸</span></span>
<span class="line">renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span>window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">//  背景色</span></span>
<span class="line">renderer<span class="token punctuation">.</span><span class="token function">setClearColor</span><span class="token punctuation">(</span><span class="token number">0x444444</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 第二种：将渲染器添加到页面中</span></span>
<span class="line">document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了这个<strong>WebGLRederer</strong>渲染器之外，还有</p>`,23)),a("ul",null,[a("li",null,[a("strong",null,[e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[28]||(n[28]=[s("CSS2DRenderer 三维物体和基于HTML的标签相结合，渲染的元素都是div元素。",-1)])),_:1,__:[28]})])]),a("li",null,[a("strong",null,[e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[29]||(n[29]=[s("CSS3DRenderer 通过CSS3的",-1)])),_:1,__:[29]}),n[31]||(n[31]=a("strong",null,[a("strong",null,"transform")],-1)),e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[30]||(n[30]=[s("属性， 将层级的3D变换应用到DOM元素上。",-1)])),_:1,__:[30]})])]),a("li",null,[a("strong",null,[e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[32]||(n[32]=[s("SVGRenderer",-1)])),_:1,__:[32]})]),n[34]||(n[34]=s("** **",-1)),a("strong",null,[e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[33]||(n[33]=[s("使用SVG来渲染几何数据。",-1)])),_:1,__:[33]})])])]),n[95]||(n[95]=o(`<h3 id="_5-最后用渲染器渲染场景和相机-页面就有内容了。" tabindex="-1"><a class="header-anchor" href="#_5-最后用渲染器渲染场景和相机-页面就有内容了。"><span>5.最后用渲染器渲染场景和相机，页面就有内容了。</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span>camera<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_6-轨道控制器orbitcontrols" tabindex="-1"><a class="header-anchor" href="#_6-轨道控制器orbitcontrols"><span>6.轨道控制器OrbitControls</span></a></h3><p>用于控制相机运动：<strong>旋转、平移、缩放</strong>，方便观察三位场景。</p><p>OrbitControls 将相机和元素关联，实现相机围绕元素运动。第一个参数是相机，第二个参数是元素。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 引入轨道控制器扩展库OrbitControls.js（必须）</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> OrbitControls <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;three/addons/controls/OrbitControls.js&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 创建轨道控制器</span></span>
<span class="line"><span class="token comment">// 2个参数：要控制的摄像机，用于事件侦听器的 HTML 元素</span></span>
<span class="line"><span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrbitControls</span><span class="token punctuation">(</span>camera<span class="token punctuation">,</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 添加阻尼</span></span>
<span class="line">controls<span class="token punctuation">.</span>enableDamping <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token comment">// 阻尼系数</span></span>
<span class="line">controls<span class="token punctuation">.</span>dampingFactor <span class="token operator">=</span> <span class="token number">0.01</span></span>
<span class="line"><span class="token comment">// 自动旋转</span></span>
<span class="line">controls<span class="token punctuation">.</span>autoRotate <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token comment">// 自动旋转速度</span></span>
<span class="line">controls<span class="token punctuation">.</span>autoRotateSpeed <span class="token operator">=</span> <span class="token number">0.5</span></span>
<span class="line"><span class="token comment">// 将轨道控制器添加到场景中</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>controls<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样相机就跟随物体运动了，效果不明显，我们可以添加地面网格效果。</p><p>比较舒服的控制参数：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> controls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OrbitControls</span><span class="token punctuation">(</span>camera<span class="token punctuation">,</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">controls<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">controls<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">controls<span class="token punctuation">.</span>enablePan <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">controls<span class="token punctuation">.</span>enableDamping <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制器限制视角（设置最大最小旋转角度）</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">controls<span class="token punctuation">.</span>minPolarAngle <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// 最小垂直角度</span></span>
<span class="line">controls<span class="token punctuation">.</span>maxPolarAngle <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// 最大垂直角度</span></span>
<span class="line">controls<span class="token punctuation">.</span>minAzimuthAngle <span class="token operator">=</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">6</span><span class="token punctuation">;</span> <span class="token comment">// 最小水平角度</span></span>
<span class="line">controls<span class="token punctuation">.</span>maxAzimuthAngle <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">2.5</span> <span class="token operator">/</span> <span class="token number">6</span><span class="token punctuation">;</span> <span class="token comment">// 最大水平角度</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-坐标格辅助对象-gridhelper" tabindex="-1"><a class="header-anchor" href="#_7-坐标格辅助对象-gridhelper"><span>7.坐标格辅助对象 GridHelper</span></a></h3><p>GridHelper方法接受4个参数：</p><ul><li>size -- 坐标格尺寸. 默认为 10.</li><li>divisions -- 坐标格细分次数. 默认为 10.</li><li>colorCenterLine -- 中线颜色. 值可以为 Color 类型, 16进制 和 CSS 颜色名. 默认为 0x444444</li><li>colorGrid -- 坐标格网格线颜色. 值可以为 Color 类型, 16进制 和 CSS 颜色名. 默认为 0x888888</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> gridHelper <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>GridHelper</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0x00ff00</span><span class="token punctuation">,</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">)</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>gridHelper<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://cdn.nlark.com/yuque/0/2024/png/1460947/1715829977412-1d4de7b5-00d2-4a00-bee2-6005d4410b18.png" alt=""></p><h3 id="_8-axeshelper-坐标辅助线" tabindex="-1"><a class="header-anchor" href="#_8-axeshelper-坐标辅助线"><span>8.AxesHelper 坐标辅助线</span></a></h3><p>红色代表 X 轴. 绿色代表 Y 轴. 蓝色代表 Z 轴。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> axesHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AxesHelper</span><span class="token punctuation">(</span> <span class="token number">5</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span> axesHelper <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-fog-雾" tabindex="-1"><a class="header-anchor" href="#_9-fog-雾"><span>9.fog 雾</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 在6 ~15 之间可见物体，超出雾颜色显示在物体上</span></span>
<span class="line">scene<span class="token punctuation">.</span>fog <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Fog</span><span class="token punctuation">(</span> <span class="token number">0x1888ff</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">15</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-页面跟随窗口变化" tabindex="-1"><a class="header-anchor" href="#_10-页面跟随窗口变化"><span>10.页面跟随窗口变化</span></a></h3><p>通过监听 resize 变化，重置渲染器大小及相机宽高比。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;resize&quot;</span><span class="token punctuation">,</span> <span class="token parameter">event</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  camera<span class="token punctuation">.</span>aspect <span class="token operator">=</span> innerWidth <span class="token operator">/</span> innerHeight<span class="token punctuation">;</span></span>
<span class="line">  camera<span class="token punctuation">.</span><span class="token function">updateProjectionMatrix</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>innerWidth<span class="token punctuation">,</span> innerHeight<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-raycaster射线选择物体" tabindex="-1"><a class="header-anchor" href="#_11-raycaster射线选择物体"><span>11.raycaster射线选择物体</span></a></h3><p>threejs选择物体使用raycaster对象，它是相机到点击位置的一条射线，它会返回射线穿过的所有元素。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">let</span> group<span class="token punctuation">;</span> <span class="token comment">// 需要监听点击元素的组</span></span>
<span class="line"><span class="token keyword">let</span> selectedObject <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// 所选择的对象</span></span>
<span class="line"><span class="token keyword">let</span> raycaster <span class="token punctuation">;</span> <span class="token comment">// 射线</span></span>
<span class="line"><span class="token keyword">let</span> pointer <span class="token punctuation">;</span> <span class="token comment">// 点击位置，用来记录x,y坐标</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 计算属性获取盒子尺寸信息</span></span>
<span class="line"><span class="token keyword">const</span> canvasbox <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#canvas&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 初始化</span></span>
<span class="line">group <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 需要被选择物体加入到 组</span></span>
<span class="line">group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube1<span class="token punctuation">)</span></span>
<span class="line">group<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube2<span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 组元素加入场景</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创建射线投射器</span></span>
<span class="line">raycaster <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Raycaster</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 鼠标位置</span></span>
<span class="line">pointer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector2</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 注册点击监听事件 pointerdown === click</span></span>
<span class="line">window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;pointerdown&#39;</span><span class="token punctuation">,</span> mouseClick<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">mouseClick</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span> selectedObject <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    selectedObject<span class="token punctuation">.</span>material<span class="token punctuation">.</span>color<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span> <span class="token string">&#39;#ffffff&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    selectedObject <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 将鼠标坐标标准化</span></span>
<span class="line">  pointer<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>clientX <span class="token operator">-</span> canvasbox<span class="token punctuation">.</span>value<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">/</span> canvasbox<span class="token punctuation">.</span>value<span class="token punctuation">.</span>width <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">  pointer<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>clientY <span class="token operator">-</span> canvasbox<span class="token punctuation">.</span>value<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token operator">/</span> canvasbox<span class="token punctuation">.</span>value<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 设置射线起点为鼠标位置，射线的方向为相机视角方向</span></span>
<span class="line">  raycaster<span class="token punctuation">.</span><span class="token function">setFromCamera</span><span class="token punctuation">(</span> pointer<span class="token punctuation">,</span> camera <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> intersects <span class="token operator">=</span> raycaster<span class="token punctuation">.</span><span class="token function">intersectObject</span><span class="token punctuation">(</span> group<span class="token punctuation">,</span> <span class="token boolean">true</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>intersects<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>intersects<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> res <span class="token operator">=</span> intersects<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span> <span class="token keyword">function</span> <span class="token punctuation">(</span> <span class="token parameter">res</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">return</span> res <span class="token operator">&amp;&amp;</span> res<span class="token punctuation">.</span>object<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span> res <span class="token operator">&amp;&amp;</span> res<span class="token punctuation">.</span>object <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 射线穿过的第一个被选的元素</span></span>
<span class="line">      selectedObject <span class="token operator">=</span> res<span class="token punctuation">.</span>object<span class="token punctuation">;</span></span>
<span class="line">      selectedObject<span class="token punctuation">.</span>material<span class="token punctuation">.</span>color<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span> <span class="token string">&#39;#f00&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      msg<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">点击了</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>selectedObject<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span> </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面场景是非全屏的，全屏计算标准化坐标方式如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">pointer<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token punctuation">(</span> event<span class="token punctuation">.</span>clientX <span class="token operator">/</span> window<span class="token punctuation">.</span>innerWidth <span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">pointer<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token operator">-</span> <span class="token punctuation">(</span> event<span class="token punctuation">.</span>clientY <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight <span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_12-pointerlockcontrols控制器" tabindex="-1"><a class="header-anchor" href="#_12-pointerlockcontrols控制器"><span>12.PointerLockControls控制器</span></a></h3>`,30)),a("p",null,[n[37]||(n[37]=a("code",null,'<font style="color:rgb(199, 37, 78);background-color:rgb(249, 242, 244);">PointerLockControls</font>',-1)),e(p,{style:{color:"rgb(77, 77, 77)"}},{default:t(()=>n[35]||(n[35]=[s(" 是 Three.js 中用于处理鼠标锁定状态下的相机控制的类。它允许用户通过",-1)])),_:1,__:[35]}),n[38]||(n[38]=a("a",{href:"https://so.csdn.net/so/search?q=%E9%BC%A0%E6%A0%87%E7%A7%BB%E5%8A%A8&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},"鼠标移动",-1)),e(p,{style:{color:"rgb(77, 77, 77)"}},{default:t(()=>n[36]||(n[36]=[s("来控制相机的旋转方向、移动位置。",-1)])),_:1,__:[36]})]),e(p,{style:{color:"rgb(77, 77, 77)"}},{default:t(()=>n[39]||(n[39]=[s("注意：无论如何控制相机，相机朝向不会发生变化！！！",-1)])),_:1,__:[39]}),n[96]||(n[96]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> PointerLockControls <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;three/examples/jsm/controls/PointerLockControls.js&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> cameraControls <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line"><span class="token comment">// 移动方向</span></span>
<span class="line"><span class="token keyword">let</span> moveForward <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> moveBackward <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> moveLeft <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> moveRight <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 相机视角控制器 </span></span>
<span class="line">cameraControls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PointerLockControls</span><span class="token punctuation">(</span>camera<span class="token punctuation">,</span> renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cameraControls<span class="token punctuation">.</span><span class="token function">getObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> blocker <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;box&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">blocker<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  cameraControls<span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">cameraControls<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;lock&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  blocker<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">cameraControls<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;unlock&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  blocker<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;block&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;keydown&#39;</span><span class="token punctuation">,</span> onKeyDown<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;keyup&#39;</span><span class="token punctuation">,</span> onKeyUp<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">onKeyDown</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">switch</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>code<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;ArrowUp&#39;</span><span class="token operator">:</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;KeyW&#39;</span><span class="token operator">:</span></span>
<span class="line">      moveForward <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;ArrowLeft&#39;</span><span class="token operator">:</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;KeyA&#39;</span><span class="token operator">:</span></span>
<span class="line">      moveLeft <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;ArrowDown&#39;</span><span class="token operator">:</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;KeyS&#39;</span><span class="token operator">:</span></span>
<span class="line">      moveBackward <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;ArrowRight&#39;</span><span class="token operator">:</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;KeyD&#39;</span><span class="token operator">:</span></span>
<span class="line">      moveRight <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;Space&#39;</span><span class="token operator">:</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>canJump <span class="token operator">===</span> <span class="token boolean">true</span><span class="token punctuation">)</span> velocity<span class="token punctuation">.</span>y <span class="token operator">+=</span> <span class="token number">350</span><span class="token punctuation">;</span></span>
<span class="line">      canJump <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">onKeyUp</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">switch</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>code<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;ArrowUp&#39;</span><span class="token operator">:</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;KeyW&#39;</span><span class="token operator">:</span></span>
<span class="line">      moveForward <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;ArrowLeft&#39;</span><span class="token operator">:</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;KeyA&#39;</span><span class="token operator">:</span></span>
<span class="line">      moveLeft <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;ArrowDown&#39;</span><span class="token operator">:</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;KeyS&#39;</span><span class="token operator">:</span></span>
<span class="line">      moveBackward <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;ArrowRight&#39;</span><span class="token operator">:</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&#39;KeyD&#39;</span><span class="token operator">:</span></span>
<span class="line">      moveRight <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),e(p,{style:{color:"rgb(77, 77, 77)"}},{default:t(()=>n[40]||(n[40]=[s("动画里面，控制相机方向移动moveForward、moveRight",-1)])),_:1,__:[40]}),n[97]||(n[97]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 控制相机移动</span></span>
<span class="line"><span class="token keyword">const</span> speed <span class="token operator">=</span> <span class="token number">0.1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>cameraControls<span class="token punctuation">.</span>isLocked<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> direction <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 前进</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>moveForward<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    direction<span class="token punctuation">.</span>z <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token comment">// 退后</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>moveBackward<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    direction<span class="token punctuation">.</span>z <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>moveLeft<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    direction<span class="token punctuation">.</span>x <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>moveRight<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    direction<span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  cameraControls<span class="token punctuation">.</span><span class="token function">moveForward</span><span class="token punctuation">(</span>speed <span class="token operator">*</span> direction<span class="token punctuation">.</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  cameraControls<span class="token punctuation">.</span><span class="token function">moveRight</span><span class="token punctuation">(</span>speed <span class="token operator">*</span> direction<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),a("h3",T,[a("a",H,[a("span",null,[e(p,{style:{color:"rgb(77, 77, 77)"}},{default:t(()=>n[41]||(n[41]=[s("13.场景获取模型或物体",-1)])),_:1,__:[41]})])])]),n[98]||(n[98]=o(`<p>方法1：通过名称name属性获取：getObjectByName</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> home <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">getObjectByName</span><span class="token punctuation">(</span><span class="token string">&#39;node_id36&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>方法2：通过遍历 scene.children 获取mesh</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> home <span class="token operator">=</span> scene<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> item<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;home&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_13-模型面的问题" tabindex="-1"><a class="header-anchor" href="#_13-模型面的问题"><span>13. 模型面的问题</span></a></h3>`,5)),a("ul",null,[a("li",null,[a("strong",null,[e(p,{style:{color:"rgb(89, 89, 89)"}},{default:t(()=>n[42]||(n[42]=[s("side",-1)])),_:1,__:[42]})]),e(p,{style:{color:"rgb(89, 89, 89)"}},{default:t(()=>n[43]||(n[43]=[s(": Integer ，值类型：THREE.FrontSide-默认正面 | THREE.BackSide-反面 | THREE.DoubleSide-双面",-1)])),_:1,__:[43]})])]),e(p,{style:{color:"rgb(89, 89, 89)"}}),a("h3",C,[a("a",M,[a("span",null,[e(p,{style:{color:"#000000"}},{default:t(()=>n[44]||(n[44]=[s("14.Mesh原型方法",-1)])),_:1,__:[44]})])])]),n[99]||(n[99]=o(`<p><img src="https://cdn.nlark.com/yuque/0/2025/png/1460947/1749707636063-a4fe9f16-d89a-404f-9db3-2651904321ac.png" alt=""></p><h4 id="applymatrix4" tabindex="-1"><a class="header-anchor" href="#applymatrix4"><span>applyMatrix4</span></a></h4><p>applyMatrix4() 是 Three.js 中 Object3D 类的一个重要方法，用于将 4x4 变换矩阵应用于几何体顶点或整个物体。这个方法对于实现复杂变换、坐标系转换和矩阵级联操作非常有用。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> obstacleGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> obstacleMaterial <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshStandardMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xaa0000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">obstacle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>obstacleGeometry<span class="token punctuation">,</span> obstacleMaterial<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>obstacle<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 缩放</span></span>
<span class="line">scaleBTN<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> translationMatrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREEObject<span class="token punctuation">.</span>Matrix4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">makeScale</span><span class="token punctuation">(</span><span class="token number">1.2</span><span class="token punctuation">,</span> <span class="token number">2.5</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  obstacle<span class="token punctuation">.</span><span class="token function">applyMatrix4</span><span class="token punctuation">(</span>translationMatrix<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// 旋转</span></span>
<span class="line">rotateBTN<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> angle <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">;</span> <span class="token comment">// 45度</span></span>
<span class="line">  <span class="token keyword">const</span> axis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREEObject<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 绕Y轴旋转</span></span>
<span class="line">  <span class="token keyword">const</span> translationMatrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREEObject<span class="token punctuation">.</span>Matrix4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">makeRotationAxis</span><span class="token punctuation">(</span>axis<span class="token punctuation">,</span> angle<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  obstacle<span class="token punctuation">.</span><span class="token function">applyMatrix4</span><span class="token punctuation">(</span>translationMatrix<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// 平移</span></span>
<span class="line">translateBTN<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> translationMatrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREEObject<span class="token punctuation">.</span>Matrix4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">makeTranslation</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  obstacle<span class="token punctuation">.</span><span class="token function">applyMatrix4</span><span class="token punctuation">(</span>translationMatrix<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// 组合</span></span>
<span class="line">combineBTN<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 创建组合矩阵：缩放、旋转然后平移</span></span>
<span class="line">  <span class="token keyword">const</span> scale <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREEObject<span class="token punctuation">.</span>Matrix4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">makeScale</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token number">1.5</span><span class="token punctuation">,</span> <span class="token number">1.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> rotation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREEObject<span class="token punctuation">.</span>Matrix4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">makeRotationX</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> translation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREEObject<span class="token punctuation">.</span>Matrix4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">makeTranslation</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 组合矩阵：缩放 -&gt; 旋转 -&gt; 平移</span></span>
<span class="line">  <span class="token keyword">const</span> matrix <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREEObject<span class="token punctuation">.</span>Matrix4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  matrix<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span>translation<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 最后应用平移</span></span>
<span class="line">  matrix<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span>rotation<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 然后旋转</span></span>
<span class="line">  matrix<span class="token punctuation">.</span><span class="token function">multiply</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 先应用缩放</span></span>
<span class="line"></span>
<span class="line">  obstacle<span class="token punctuation">.</span><span class="token function">applyMatrix4</span><span class="token punctuation">(</span>matrix<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="applyquaternion" tabindex="-1"><a class="header-anchor" href="#applyquaternion"><span>applyQuaternion</span></a></h4>`,5)),a("p",null,[n[46]||(n[46]=s("applyQuaternion 是Three.js中用于**",-1)),e(p,{style:{color:"#7E45E8"}},{default:t(()=>n[45]||(n[45]=[s("应用旋转",-1)])),_:1,__:[45]}),n[47]||(n[47]=s("**的一个高效方法，使用四元数（quaternion）来表示3D旋转。四元数相比欧拉角具有多项优势：避免万向节锁、插值更平滑、运算更高效。",-1))]),n[100]||(n[100]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">obstacle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>obstacleGeometry<span class="token punctuation">,</span> obstacleMaterial<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 创建一个表示绕Y轴旋转90度的四元数</span></span>
<span class="line"><span class="token keyword">const</span> quaternion <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Quaternion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">quaternion<span class="token punctuation">.</span><span class="token function">setFromAxisAngle</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 应用四元数旋转到对象 等同于 obstacle.quaternion.multiply(quaternion);</span></span>
<span class="line">obstacle<span class="token punctuation">.</span><span class="token function">applyQuaternion</span><span class="token punctuation">(</span>quaternion<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="attach" tabindex="-1"><a class="header-anchor" href="#attach"><span>attach</span></a></h4><p>attach 方法可以让你改变对象的父级，但是对象在世界空间中的变换保持不变。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 创建父级对象</span></span>
<span class="line"><span class="token keyword">const</span> parent1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> parent2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Group</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>parent1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>parent2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创建子对象并添加到 parent1</span></span>
<span class="line"><span class="token keyword">const</span> child <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">parent1<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 使用 attach 方法将子对象转移到 parent2</span></span>
<span class="line">parent2<span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 子对象现在在 parent2 下</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="clear" tabindex="-1"><a class="header-anchor" href="#clear"><span>clear</span></a></h4><p>clear 是 Object3D 类的方法（Mesh 继承自它），用于移除对象的所有子对象。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 移除所有子对象,不删除对象本身,高效清空</span></span>
<span class="line">Object3D<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 注意清除后仍需手动释放资源防止内存泄漏，常配合dispose使用</span></span>
<span class="line"><span class="token comment">// 处置几何体</span></span>
<span class="line">geometry<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 处置材质</span></span>
<span class="line">material<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="remove" tabindex="-1"><a class="header-anchor" href="#remove"><span>remove</span></a></h4><p>remove移除子对象不会触发子对象的<code>dispose</code>方法，因此需要手动管理资源（如几何体、材质）的释放。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 语法：parent.remove(child1, child2, ...); </span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>cube<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 彻底清除物体</span></span>
<span class="line"><span class="token comment">// 释放资源（几何体和材质）</span></span>
<span class="line">cube<span class="token punctuation">.</span>geometry<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>material<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  cube<span class="token punctuation">.</span>material<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">mat</span> <span class="token operator">=&gt;</span> mat<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">  cube<span class="token punctuation">.</span>material<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// 清除选中</span></span>
<span class="line">cube <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="clone" tabindex="-1"><a class="header-anchor" href="#clone"><span>clone</span></a></h4>`,11)),a("p",null,[n[48]||(n[48]=s("clone一个新的对象，几何体属性材质与源对象一样（位置随机），需要手动添加到场景中。",-1)),e(p,{style:{color:"rgba(0, 0, 0, 0.6)","background-color":"rgb(252, 252, 252)"}})]),n[101]||(n[101]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> clone <span class="token operator">=</span> originalCube<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 随机位置</span></span>
<span class="line">clone<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">-</span> <span class="token number">4</span><span class="token punctuation">;</span></span>
<span class="line">clone<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">6</span> <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 添加到场景</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>clone<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="copy" tabindex="-1"><a class="header-anchor" href="#copy"><span>copy</span></a></h4><p>copy后者会完全将前者覆盖，包括形状，材质，位置。不会创建新对象。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"> <span class="token comment">//复制原始蓝色立方体的属性（几何体、材质等）到红色立方体,注意redCube位置同样被蓝色立方体覆盖</span></span>
<span class="line"> redCube<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>originalCube<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="选择物体" tabindex="-1"><a class="header-anchor" href="#选择物体"><span>选择物体</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 创建一个立方体</span></span>
<span class="line"><span class="token keyword">const</span> cube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span></span>
<span class="line">  <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xff0000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">cube<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;myCube&quot;</span><span class="token punctuation">;</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>getObjectById</li></ul><p>每个Object3D实例都有一个唯一的id属性（自动生成）。getObjectById方法通过指定的id来查找对象。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 通过id查找</span></span>
<span class="line"><span class="token keyword">const</span> foundById <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">getObjectById</span><span class="token punctuation">(</span>cube<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foundById <span class="token operator">===</span> cube<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>getObjectByName</li></ul><p>可以通过对象的name属性来查找。可以给对象设置一个字符串名称，然后使用此方法查找。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> foundByName <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">getObjectByName</span><span class="token punctuation">(</span><span class="token string">&quot;myCube&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foundByName <span class="token operator">===</span> cube<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>getObjectByProperty</li></ul><p>通过任意属性和值来查找第一个匹配的对象。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// object.getObjectByProperty( name, value )</span></span>
<span class="line"><span class="token keyword">const</span> foundByType <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">getObjectByProperty</span><span class="token punctuation">(</span><span class="token string">&#39;type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Mesh&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>getObjectsByProperty</li></ul><p>与getObjectByProperty类似，但是返回所有匹配的对象（数组）。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// object.getObjectsByProperty( name, value )</span></span>
<span class="line"><span class="token keyword">const</span> cubes <span class="token operator">=</span> scene<span class="token punctuation">.</span><span class="token function">getObjectsByProperty</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cube&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// []</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,18)),a("h4",L,[a("a",_,[a("span",null,[e(p,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:t(()=>n[49]||(n[49]=[s("getWorld*",-1)])),_:1,__:[49]})])])]),n[102]||(n[102]=a("p",null,"在 Three.js 中，getWorld* 方法系列用于获取对象在世界坐标系中的状态，而非局部坐标系。",-1)),a("ul",null,[a("li",null,[e(p,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:t(()=>n[50]||(n[50]=[s("getWorldPosition 获取对象在世界坐标系中的位置",-1)])),_:1,__:[50]})]),a("li",null,[e(p,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:t(()=>n[51]||(n[51]=[s("getWorldDirection 获取对象在正前方向上的世界空间方向向量。",-1)])),_:1,__:[51]})]),a("li",null,[e(p,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:t(()=>n[52]||(n[52]=[s("getWorldQuaternion 获取表示对象在世界坐标系中旋转的四元数。",-1)])),_:1,__:[52]})]),a("li",null,[e(p,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:t(()=>n[53]||(n[53]=[s("getWorldScale 获取对象在世界坐标系中的缩放向量。",-1)])),_:1,__:[53]})])]),n[103]||(n[103]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> worldPosition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">selectedObject<span class="token punctuation">.</span><span class="token function">getWorldPosition</span><span class="token punctuation">(</span>worldPosition<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> worldDirection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">selectedObject<span class="token punctuation">.</span><span class="token function">getWorldDirection</span><span class="token punctuation">(</span>worldDirection<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> worldQuaternion <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Quaternion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">selectedObject<span class="token punctuation">.</span><span class="token function">getWorldQuaternion</span><span class="token punctuation">(</span>worldQuaternion<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> worldScale <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">selectedObject<span class="token punctuation">.</span><span class="token function">getWorldScale</span><span class="token punctuation">(</span>worldScale<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="坐标系转换" tabindex="-1"><a class="header-anchor" href="#坐标系转换"><span>坐标系转换</span></a></h4>`,2)),a("ul",null,[a("li",null,[n[55]||(n[55]=s("localToWorld ",-1)),e(p,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:t(()=>n[54]||(n[54]=[s("对象的局部坐标系 => 场景的世界坐标系",-1)])),_:1,__:[54]})]),a("li",null,[n[57]||(n[57]=s("worldToLocal ",-1)),e(p,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:t(()=>n[56]||(n[56]=[s(" 场景的世界坐标系=> 对象的局部坐标系 ",-1)])),_:1,__:[56]})])]),n[104]||(n[104]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">cube<span class="token punctuation">.</span><span class="token function">localToWorld</span><span class="token punctuation">(</span>localPoint<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> worldPoint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> refLocalPoint <span class="token operator">=</span> cube<span class="token punctuation">.</span><span class="token function">worldToLocal</span><span class="token punctuation">(</span>referencePoint<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="onbeforerender" tabindex="-1"><a class="header-anchor" href="#onbeforerender"><span>onBeforeRender</span></a></h4><p>在对象被渲染之前调用</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">object<span class="token punctuation">.</span><span class="token function-variable function">onBeforeRender</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">renderer<span class="token punctuation">,</span> scene<span class="token punctuation">,</span> camera</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 添加渲染前效果（线框）</span></span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span>material<span class="token punctuation">.</span>wireframe <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span>material<span class="token punctuation">.</span>wireframeLinewidth <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="onafterrender" tabindex="-1"><a class="header-anchor" href="#onafterrender"><span>onAfterRender</span></a></h4><p>在对象被渲染之后调用。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 渲染后回调</span></span>
<span class="line">object<span class="token punctuation">.</span><span class="token function-variable function">onAfterRender</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">renderer<span class="token punctuation">,</span> scene<span class="token punctuation">,</span> camera</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 清除线框效果</span></span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span>material<span class="token punctuation">.</span>wireframe <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="traverse-遍历" tabindex="-1"><a class="header-anchor" href="#traverse-遍历"><span>traverse 遍历</span></a></h4><ul><li>traverse(callback) 递归地遍历对象及其所有后代（子对象、子对象的子对象等），并对每个对象执行回调函数。用于修改多个对象的属性或查找指定对象。</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 只计算网格（Mesh）对象</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>object<span class="token punctuation">.</span>isMesh<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    count<span class="token operator">++</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>traverseVisible(callback) 仅遍历可见的子树（visible为true的节点才遍历），如果父级不可见，整个子树都不会遍历，用法同traverse。</li><li>traverseAncestors(callback) 从直接父级向上遍历祖先节点（父级、祖父级...直到根节点）。</li></ul><h4 id="tojson" tabindex="-1"><a class="header-anchor" href="#tojson"><span>toJSON</span></a></h4><p>用于将网格对象转换为 JSON 格式，便于序列化或存储。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> json <span class="token operator">=</span> mesh<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="rotateonaxis" tabindex="-1"><a class="header-anchor" href="#rotateonaxis"><span>rotateOnAxis</span></a></h4>`,15)),e(p,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:t(()=>n[58]||(n[58]=[s("对象围绕局部坐标系的特定轴旋转指定角度",-1)])),_:1,__:[58]}),n[105]||(n[105]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> axis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Y轴</span></span>
<span class="line">cube<span class="token punctuation">.</span><span class="token function">rotateOnAxis</span><span class="token punctuation">(</span>axis<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 旋转π/4弧度(45度)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 绕自定义轴旋转</span></span>
<span class="line"><span class="token keyword">const</span> customAxis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">cube<span class="token punctuation">.</span><span class="token function">rotateOnAxis</span><span class="token punctuation">(</span>customAxis<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="rotateonworldaxis" tabindex="-1"><a class="header-anchor" href="#rotateonworldaxis"><span>rotateOnWorldAxis</span></a></h4>`,2)),e(p,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:t(()=>n[59]||(n[59]=[s("对象围绕世界坐标系中的指定轴旋转。",-1)])),_:1,__:[59]}),n[106]||(n[106]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 在世界坐标系中绕Y轴旋转</span></span>
<span class="line"><span class="token keyword">const</span> worldYAxis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">cube<span class="token punctuation">.</span><span class="token function">rotateOnWorldAxis</span><span class="token punctuation">(</span>worldYAxis<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="translateonaxis" tabindex="-1"><a class="header-anchor" href="#translateonaxis"><span>translateOnAxis</span></a></h4>`,2)),e(p,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:t(()=>n[60]||(n[60]=[s("对象沿局部坐标系中的特定轴移动指定距离。",-1)])),_:1,__:[60]}),n[107]||(n[107]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 沿X轴移动1个单位</span></span>
<span class="line"><span class="token keyword">const</span> xAxis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// X轴</span></span>
<span class="line">cube<span class="token punctuation">.</span><span class="token function">translateOnAxis</span><span class="token punctuation">(</span>xAxis<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 沿对角线方向移动</span></span>
<span class="line"><span class="token keyword">const</span> diagonal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Vector3</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">normalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">cube<span class="token punctuation">.</span><span class="token function">translateOnAxis</span><span class="token punctuation">(</span>diagonal<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="三-光源" tabindex="-1"><a class="header-anchor" href="#三-光源"><span>三.光源</span></a></h2><h3 id="_1-光源" tabindex="-1"><a class="header-anchor" href="#_1-光源"><span>1.光源</span></a></h3><p>是threejs照亮场景的重要元素。</p><ul><li>AmbientLight 环境光，会均匀的照亮场景中的所有物体，环境光不能用来投射阴影，因为它没有方向。用于模拟天空光，漫射光。环境光没有方向，不能设置位置属性。</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 环境光 接受2个参数</span></span>
<span class="line"><span class="token function">AmbientLight</span><span class="token punctuation">(</span> color <span class="token operator">:</span> 颜色<span class="token operator">-</span>默认值白色<span class="token number">0xffffff</span><span class="token punctuation">,</span> <span class="token literal-property property">intensity</span> <span class="token operator">:</span> 光照强度<span class="token operator">-</span>默认值<span class="token number">1</span> <span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,6)),a("ul",null,[a("li",null,[n[62]||(n[62]=s("PointLight 点光源，从一个点向各个方向发射的光源。一个常见的例子是模拟一个",-1)),e(p,{style:{color:"#DF2A3F"}},{default:t(()=>n[61]||(n[61]=[s("灯泡",-1)])),_:1,__:[61]}),n[63]||(n[63]=s("发出的光。",-1))])]),n[108]||(n[108]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token function">PointLight</span><span class="token punctuation">(</span> color <span class="token operator">:</span> Color<span class="token punctuation">,</span> <span class="token literal-property property">intensity</span> <span class="token operator">:</span> Float<span class="token punctuation">,</span> <span class="token literal-property property">distance</span> <span class="token operator">:</span> Number<span class="token punctuation">,</span> <span class="token literal-property property">decay</span> <span class="token operator">:</span> Float <span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">-</span> color <span class="token operator">-</span>（可选）一个表示颜色的 Color 的实例、字符串或数字，默认为一个白色（<span class="token number">0xffffff</span>）的 Color 对象。</span>
<span class="line"><span class="token operator">-</span> intensity <span class="token operator">-</span>（可选）光照强度。默认值为 <span class="token number">1</span>。</span>
<span class="line"><span class="token operator">-</span> distance <span class="token operator">-</span> 光源照射的最大距离。默认值为 <span class="token number">0</span>（无限远）。</span>
<span class="line"><span class="token operator">-</span> decay <span class="token operator">-</span> 沿着光照距离的衰退量。默认值为 <span class="token number">2</span>。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),a("ul",null,[a("li",null,[n[65]||(n[65]=s("DirectionalLight 平行光，是一种从无限远处射来的平行光线。它通常用于模拟",-1)),e(p,{style:{color:"#DF2A3F"}},{default:t(()=>n[64]||(n[64]=[s("太阳光",-1)])),_:1,__:[64]}),n[66]||(n[66]=s("等光源。",-1))])]),n[109]||(n[109]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 从上方照射的白色平行光，强度为 0.5。</span></span>
<span class="line"><span class="token keyword">const</span> directionalLight <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>DirectionalLight</span><span class="token punctuation">(</span> <span class="token number">0xffffff</span><span class="token punctuation">,</span> <span class="token number">0.5</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 光源添加到场景</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span> directionalLight <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),a("ul",null,[a("li",null,[n[68]||(n[68]=s("SpotLight 聚光灯，是一种锥形光束光源。它通常用于模拟",-1)),e(p,{style:{color:"#DF2A3F"}},{default:t(()=>n[67]||(n[67]=[s("手电筒",-1)])),_:1,__:[67]}),n[69]||(n[69]=s("、舞台灯光等光源。",-1))])]),n[110]||(n[110]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token function">SpotLight</span><span class="token punctuation">(</span> color <span class="token operator">:</span> Color<span class="token punctuation">,</span> <span class="token literal-property property">intensity</span> <span class="token operator">:</span> Float<span class="token punctuation">,</span> <span class="token literal-property property">distance</span> <span class="token operator">:</span> Float<span class="token punctuation">,</span> <span class="token literal-property property">angle</span> <span class="token operator">:</span> Radians<span class="token punctuation">,</span> <span class="token literal-property property">penumbra</span> <span class="token operator">:</span> Float<span class="token punctuation">,</span> <span class="token literal-property property">decay</span> <span class="token operator">:</span> Float <span class="token punctuation">)</span></span>
<span class="line"><span class="token operator">-</span> color <span class="token operator">-</span>（可选）一个表示颜色的 Color 的实例、字符串或数字，默认为一个白色（<span class="token number">0xffffff</span>）的 Color 对象。</span>
<span class="line"><span class="token operator">-</span> intensity <span class="token operator">-</span>（可选）光照强度。默认值为 <span class="token number">1</span>。</span>
<span class="line"><span class="token operator">-</span> distance <span class="token operator">-</span> 光源照射的最大距离。默认值为 <span class="token number">0</span>（无限远）。</span>
<span class="line"><span class="token operator">-</span> angle <span class="token operator">-</span> 光线照射范围的角度。默认值为 Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token operator">/</span><span class="token number">3</span>。</span>
<span class="line"><span class="token operator">-</span> penumbra <span class="token operator">-</span> 聚光锥的半影衰减百分比。默认值为 <span class="token number">0</span>。</span>
<span class="line"><span class="token operator">-</span> decay <span class="token operator">-</span> 沿着光照距离的衰减量。默认值为 <span class="token number">2</span>。</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>HemisphereLight 半球光，是一种模拟天空光和地面反射光的光源。它通常用于室外场景。</li></ul>`,2)),a("p",null,[a("strong",null,[e(p,{style:{color:"rgb(68, 68, 68)","background-color":"#EFF0F0"}},{default:t(()=>n[70]||(n[70]=[s("HemisphereLight( skyColor : ",-1)])),_:1,__:[70]}),a("strong",null,[a("strong",null,[e(p,{style:{color:"rgb(153, 153, 153)","background-color":"#EFF0F0"}},{default:t(()=>n[71]||(n[71]=[s("Integer",-1)])),_:1,__:[71]})])]),e(p,{style:{color:"rgb(68, 68, 68)","background-color":"#EFF0F0"}},{default:t(()=>n[72]||(n[72]=[s(", groundColor : ",-1)])),_:1,__:[72]}),a("strong",null,[a("strong",null,[e(p,{style:{color:"rgb(153, 153, 153)","background-color":"#EFF0F0"}},{default:t(()=>n[73]||(n[73]=[s("Integer",-1)])),_:1,__:[73]})])]),e(p,{style:{color:"rgb(68, 68, 68)","background-color":"#EFF0F0"}},{default:t(()=>n[74]||(n[74]=[s(", intensity : ",-1)])),_:1,__:[74]}),a("strong",null,[a("strong",null,[e(p,{style:{color:"rgb(153, 153, 153)","background-color":"#EFF0F0"}},{default:t(()=>n[75]||(n[75]=[s("Float",-1)])),_:1,__:[75]})])]),e(p,{style:{color:"rgb(68, 68, 68)","background-color":"#EFF0F0"}},{default:t(()=>n[76]||(n[76]=[s(" )",-1)])),_:1,__:[76]})])]),e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[77]||(n[77]=[s("skyColor -（可选）一个表示颜色的 Color 的实例、字符串或数字，默认为一个白色（0xffffff）的 Color 对象。 ",-1)])),_:1,__:[77]}),e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[78]||(n[78]=[s("groundColor -（可选）一个表示颜色的 Color 的实例、字符串或数字，默认为一个白色（0xffffff）的 Color 对象。 ",-1)])),_:1,__:[78]}),n[111]||(n[111]=s("intensity",-1)),e(p,{style:{color:"rgb(68, 68, 68)"}},{default:t(()=>n[79]||(n[79]=[s(" -（可选）光照强度。默认值为 1。",-1)])),_:1,__:[79]}),n[112]||(n[112]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> light <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>HemisphereLight</span><span class="token punctuation">(</span> <span class="token number">0xffffbb</span><span class="token punctuation">,</span> <span class="token number">0x080820</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span> light <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Light 光源的基类 - 所有其他的光类型都继承了该类描述的属性和方法。</li><li>LightProbe 光照探针，是一种在3D场景中添加光源的另一种方法。</li><li>RectAreaLight 平面光，光源从一个矩形平面上均匀地发射光线。这种光源可以用来模拟像明亮的窗户或者条状灯光光源。</li></ul><p><strong>光源参数属性</strong></p><ul><li>颜色（color） ：光源的颜色</li><li>强度（intensity） ：光源的强度</li><li>距离（distance） ：光源的有效距离</li><li>衰减（decay） ：光源的光照衰减，设置成0-不衰减</li><li>位置（position） ：光源的位置</li><li>方向（direction） ：光源的方向</li><li>目标（target） ：光源的目标点</li></ul><p>设置/修改灯光颜色</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">light<span class="token punctuation">.</span>color<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0xffffff</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-开启投影" tabindex="-1"><a class="header-anchor" href="#_2-开启投影"><span>2.开启投影</span></a></h3><p>-- 1 three 渲染器开启投影</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">renderer<span class="token punctuation">.</span>shadowMap<span class="token punctuation">.</span>enabled <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">renderer<span class="token punctuation">.</span>shadowMap<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>PCFSoftShadowMap<span class="token punctuation">;</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>-- 2 需要添加投影的物体开启投影</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">sphere<span class="token punctuation">.</span>castShadow <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token operator">...</span></span>
<span class="line">plane<span class="token punctuation">.</span>receiveShadow <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>-- 3 光源开启投影，仅支持 点光、平行光、聚光。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">directionalLight<span class="token punctuation">.</span>castShadow <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="四-网格材质和贴图" tabindex="-1"><a class="header-anchor" href="#四-网格材质和贴图"><span>四.网格材质和贴图</span></a></h2><h3 id="_1-网格材质-meshmaterial-是-three-js-中用于给网格模型赋予外观的材质。它可以控制模型的颜色、光泽度、透明度等属性。" tabindex="-1"><a class="header-anchor" href="#_1-网格材质-meshmaterial-是-three-js-中用于给网格模型赋予外观的材质。它可以控制模型的颜色、光泽度、透明度等属性。"><span>1.网格材质（MeshMaterial）是 Three.js 中用于给网格模型赋予外观的材质。它可以控制模型的颜色、光泽度、透明度等属性。</span></a></h3><p><img src="https://cdn.nlark.com/yuque/0/2024/png/1460947/1724832819218-388b49ff-b870-4691-857a-9037226e88b0.png" alt=""></p><p>常用材质：</p><ul><li>基础网格材质（MeshBasicMaterial）: 最简单的网格材质，仅支持颜色和透明度属性。</li><li>朗伯网格材质（<strong>MeshLambertMaterial</strong>）:  支持漫反射光照模型，可以模拟物体表面对光线的漫反射效果。</li><li>冯格网格材质（<strong>MeshPhongMaterial</strong>）:  支持漫反射和镜面反射光照模型，可以模拟物体表面对光线的漫反射和镜面反射效果。</li><li>标准网格材质（MeshStandardMaterial）:  基于物理的材质，可以模拟物体表面的真实光照效果。</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> cubeGeometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> cubeMaterial <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshLambertMaterial</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;rgb(255,0,0)&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">emissive</span><span class="token operator">:</span> <span class="token number">0x200000</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">cube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span> cubeGeometry<span class="token punctuation">,</span> cubeMaterial <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">cube<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span> cube <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-纹理贴图-texture-是指从网络上加载的图像-用于赋予模型更逼真的外观。" tabindex="-1"><a class="header-anchor" href="#_2-纹理贴图-texture-是指从网络上加载的图像-用于赋予模型更逼真的外观。"><span>2.纹理贴图（Texture）是指从网络上加载的图像，用于赋予模型更逼真的外观。</span></a></h3><p>threejs支持的贴图格式：png,jpeg,gif,dds</p><p>使用纹理贴图需要创建一个贴图加载器（TextureLoader），加载完成之后传给材质的map属性</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>TextureLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> texture <span class="token operator">=</span> loader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com/texture.png&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token comment">// 材质map属性展示贴图</span></span>
<span class="line"><span class="token keyword">const</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">map</span><span class="token operator">:</span> texture<span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>案例：给球贴纹理</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 创建图形加载器</span></span>
<span class="line"><span class="token keyword">const</span> textureLoader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>TextureLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> texture <span class="token operator">=</span> textureLoader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&#39;/public/all.jpg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 创建形状，材质</span></span>
<span class="line"><span class="token keyword">const</span> geometry2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>SphereGeometry</span><span class="token punctuation">(</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">18</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> material2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshBasicMaterial</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> </span>
<span class="line">    <span class="token literal-property property">map</span><span class="token operator">:</span>texture<span class="token punctuation">,</span> </span>
<span class="line">    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token number">0xffffff</span> </span>
<span class="line"><span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 创建网格关联材质和形状</span></span>
<span class="line"><span class="token keyword">const</span> cube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span> geometry2<span class="token punctuation">,</span> material2 <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span>cube <span class="token operator">=</span> cube</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五-glb-gltf模型导入threejs" tabindex="-1"><a class="header-anchor" href="#五-glb-gltf模型导入threejs"><span>五.glb/gltf模型导入threejs</span></a></h2><p>模型导入我们需要借助 GLTFLoader ，然后加载glb文件，并把加载成功的场景添加到当前场景中，同时也可以调用glb场景中的动画。</p><p>案例:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> GLTFLoader <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;three/examples/jsm/loaders/GLTFLoader.js&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GLTFLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">loader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&#39;/public/scene.glb&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">gltf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">const</span> model <span class="token operator">=</span> gltf<span class="token punctuation">.</span>scene<span class="token punctuation">;</span></span>
<span class="line">        model<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        model<span class="token punctuation">.</span>scale<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 调用 动画函数</span></span>
<span class="line">        renderer<span class="token punctuation">.</span><span class="token function">setAnimationLoop</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        controls<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>复杂的三维模型可以通过 DRACOLoader 加载器加载。它主要用于压缩解压三维模型。</p><p>注意需要先把 draco文件夹拷贝到公共文件，然后用过gltfloader加载。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> DRACOLoader <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;three/addons/loaders/DRACOLoader.js&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> dracoLoader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DRACOLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    dracoLoader<span class="token punctuation">.</span><span class="token function">setDecoderPath</span><span class="token punctuation">(</span><span class="token string">&#39;/public/draco/gltf/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GLTFLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    loader<span class="token punctuation">.</span><span class="token function">setDRACOLoader</span><span class="token punctuation">(</span>dracoLoader<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    loader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">&#39;/public/scene.glb&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">gltf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">const</span> model <span class="token operator">=</span> gltf<span class="token punctuation">.</span>scene<span class="token punctuation">;</span></span>
<span class="line">        model<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        model<span class="token punctuation">.</span>scale<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        renderer<span class="token punctuation">.</span><span class="token function">setAnimationLoop</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>导入的模型如果反面不可见，说明模型只开启的单面可见，需要加载模型的时候改成以下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">loader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>modelPath<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">gltf</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> model <span class="token operator">=</span> gltf<span class="token punctuation">.</span>scene<span class="token punctuation">;</span></span>
<span class="line">  gltf<span class="token punctuation">.</span>scene<span class="token punctuation">.</span><span class="token function">traverse</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">child</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>isMesh<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">      child<span class="token punctuation">.</span>material<span class="token punctuation">.</span>side <span class="token operator">=</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>DoubleSide<span class="token punctuation">;</span> <span class="token comment">// 双面显示</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  renderer<span class="token punctuation">.</span><span class="token function">setAnimationLoop</span><span class="token punctuation">(</span>animation<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><p>1.three 坐标轴 z轴不是朝上，是朝着屏幕外的！！！</p>`,36)),a("p",null,[n[81]||(n[81]=s("2.场景元素相邻出现闪烁画面，这种事深度渲染造成的",-1)),e(p,{style:{color:"rgb(5, 7, 59)","background-color":"rgb(253, 253, 254)"}},{default:t(()=>n[80]||(n[80]=[s("渲染伪影（渲染器不知道层级高低关系导致）",-1)])),_:1,__:[80]})]),e(p,{style:{color:"rgb(5, 7, 59)","background-color":"rgb(253, 253, 254)"}},{default:t(()=>n[82]||(n[82]=[s("解决办法：",-1)])),_:1,__:[82]}),e(p,{style:{color:"rgb(5, 7, 59)","background-color":"rgb(253, 253, 254)"}},{default:t(()=>n[83]||(n[83]=[s("方法1：调大元素之间的间隔",-1)])),_:1,__:[83]}),e(p,{style:{color:"rgb(5, 7, 59)","background-color":"rgb(253, 253, 254)"}},{default:t(()=>n[84]||(n[84]=[s("方法2：关闭深度检测",-1)])),_:1,__:[84]}),n[113]||(n[113]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">depthTest</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1)),e(p,{style:{color:"rgb(5, 7, 59)","background-color":"rgb(253, 253, 254)"}},{default:t(()=>n[85]||(n[85]=[s("方法3：提高深度精度 ",-1)])),_:1,__:[85]}),n[114]||(n[114]=o(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> <span class="token literal-property property">logarithmicDepthBuffer</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1))])}const P=l(r,[["render",B]]),F=JSON.parse('{"path":"/mds/threeJS%20%E5%85%A5%E9%97%A8.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一.安装及引入","slug":"一-安装及引入","link":"#一-安装及引入","children":[]},{"level":2,"title":"二.使用threejs","slug":"二-使用threejs","link":"#二-使用threejs","children":[{"level":3,"title":"1.场景 scene ,类似canvas的画布，用于呈现效果。","slug":"_1-场景-scene-类似canvas的画布-用于呈现效果。","link":"#_1-场景-scene-类似canvas的画布-用于呈现效果。","children":[]},{"level":3,"title":"2.元素物体，几何图形，模型，粒子灯光等。一个物体有材质，创建后还需要把材质和物体组合起来，然后放置到场景中。","slug":"_2-元素物体-几何图形-模型-粒子灯光等。一个物体有材质-创建后还需要把材质和物体组合起来-然后放置到场景中。","link":"#_2-元素物体-几何图形-模型-粒子灯光等。一个物体有材质-创建后还需要把材质和物体组合起来-然后放置到场景中。","children":[]},{"level":3,"title":"3.相机 camera，这里的相机是指 观察物体成像的位置，如同一个相机的视角。创建相机后，也需要把相机放置到场景中。","slug":"_3-相机-camera-这里的相机是指-观察物体成像的位置-如同一个相机的视角。创建相机后-也需要把相机放置到场景中。","link":"#_3-相机-camera-这里的相机是指-观察物体成像的位置-如同一个相机的视角。创建相机后-也需要把相机放置到场景中。","children":[]},{"level":3,"title":"4.渲染器 renderer ，从相机的角度渲染物体元素。然后设置渲染器分辨率和尺寸，并把渲染器关联到页面。","slug":"_4-渲染器-renderer-从相机的角度渲染物体元素。然后设置渲染器分辨率和尺寸-并把渲染器关联到页面。","link":"#_4-渲染器-renderer-从相机的角度渲染物体元素。然后设置渲染器分辨率和尺寸-并把渲染器关联到页面。","children":[]},{"level":3,"title":"5.最后用渲染器渲染场景和相机，页面就有内容了。","slug":"_5-最后用渲染器渲染场景和相机-页面就有内容了。","link":"#_5-最后用渲染器渲染场景和相机-页面就有内容了。","children":[]},{"level":3,"title":"6.轨道控制器OrbitControls","slug":"_6-轨道控制器orbitcontrols","link":"#_6-轨道控制器orbitcontrols","children":[]},{"level":3,"title":"7.坐标格辅助对象 GridHelper","slug":"_7-坐标格辅助对象-gridhelper","link":"#_7-坐标格辅助对象-gridhelper","children":[]},{"level":3,"title":"8.AxesHelper 坐标辅助线","slug":"_8-axeshelper-坐标辅助线","link":"#_8-axeshelper-坐标辅助线","children":[]},{"level":3,"title":"9.fog 雾","slug":"_9-fog-雾","link":"#_9-fog-雾","children":[]},{"level":3,"title":"10.页面跟随窗口变化","slug":"_10-页面跟随窗口变化","link":"#_10-页面跟随窗口变化","children":[]},{"level":3,"title":"11.raycaster射线选择物体","slug":"_11-raycaster射线选择物体","link":"#_11-raycaster射线选择物体","children":[]},{"level":3,"title":"12.PointerLockControls控制器","slug":"_12-pointerlockcontrols控制器","link":"#_12-pointerlockcontrols控制器","children":[]},{"level":3,"title":"13.场景获取模型或物体","slug":"_13-场景获取模型或物体","link":"#_13-场景获取模型或物体","children":[]},{"level":3,"title":"13. 模型面的问题","slug":"_13-模型面的问题","link":"#_13-模型面的问题","children":[]},{"level":3,"title":"14.Mesh原型方法","slug":"_14-mesh原型方法","link":"#_14-mesh原型方法","children":[]}]},{"level":2,"title":"三.光源","slug":"三-光源","link":"#三-光源","children":[{"level":3,"title":"1.光源","slug":"_1-光源","link":"#_1-光源","children":[]},{"level":3,"title":"2.开启投影","slug":"_2-开启投影","link":"#_2-开启投影","children":[]}]},{"level":2,"title":"四.网格材质和贴图","slug":"四-网格材质和贴图","link":"#四-网格材质和贴图","children":[{"level":3,"title":"1.网格材质（MeshMaterial）是 Three.js 中用于给网格模型赋予外观的材质。它可以控制模型的颜色、光泽度、透明度等属性。","slug":"_1-网格材质-meshmaterial-是-three-js-中用于给网格模型赋予外观的材质。它可以控制模型的颜色、光泽度、透明度等属性。","link":"#_1-网格材质-meshmaterial-是-three-js-中用于给网格模型赋予外观的材质。它可以控制模型的颜色、光泽度、透明度等属性。","children":[]},{"level":3,"title":"2.纹理贴图（Texture）是指从网络上加载的图像，用于赋予模型更逼真的外观。","slug":"_2-纹理贴图-texture-是指从网络上加载的图像-用于赋予模型更逼真的外观。","link":"#_2-纹理贴图-texture-是指从网络上加载的图像-用于赋予模型更逼真的外观。","children":[]}]},{"level":2,"title":"五.glb/gltf模型导入threejs","slug":"五-glb-gltf模型导入threejs","link":"#五-glb-gltf模型导入threejs","children":[]},{"level":2,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]}],"git":{},"filePathRelative":"mds/threeJS 入门.md","excerpt":"<p>官方地址：<a href=\\"https://threejs.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://threejs.org/</a></p>\\n<h2>一.安装及引入</h2>\\n<p>1.安装</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"js\\"><pre><code><span class=\\"line\\">npm install <span class=\\"token operator\\">--</span>save three</span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>"}');export{P as comp,F as data};
