import{_ as o,c as r,d as a,a as l,b as p,e as n,w as i,r as t,o as c}from"./app-Tsm6EGXP.js";const d={},u={id:"一-docker-核心组件",tabindex:"-1"},k={class:"header-anchor",href:"#一-docker-核心组件"},b={id:"_1-images-镜像",tabindex:"-1"},m={class:"header-anchor",href:"#_1-images-镜像"},v={id:"_2-containers-容器",tabindex:"-1"},g={class:"header-anchor",href:"#_2-containers-容器"},y={id:"_3-volumes-卷",tabindex:"-1"},h={class:"header-anchor",href:"#_3-volumes-卷"},f={id:"_5-dockerfile-构建文件",tabindex:"-1"},_={class:"header-anchor",href:"#_5-dockerfile-构建文件"},q={id:"_6-docker-compose-编排",tabindex:"-1"},x={class:"header-anchor",href:"#_6-docker-compose-编排"},w={id:"_1-创建dockerfile",tabindex:"-1"},j={class:"header-anchor",href:"#_1-创建dockerfile"},D={id:"_3-构建docker镜像",tabindex:"-1"},N={class:"header-anchor",href:"#_3-构建docker镜像"},R={id:"_4-运行docker容器",tabindex:"-1"},O={class:"header-anchor",href:"#_4-运行docker容器"},C={id:"五-发布到docker-hub",tabindex:"-1"},S={class:"header-anchor",href:"#五-发布到docker-hub"},B={id:"_1-注册-docker-hub-账号",tabindex:"-1"},E={class:"header-anchor",href:"#_1-注册-docker-hub-账号"},H={id:"_3-给镜像打标签",tabindex:"-1"},P={class:"header-anchor",href:"#_3-给镜像打标签"};function V(M,s){const e=t("font");return c(),r("div",null,[a("h3",u,[a("a",k,[a("span",null,[s[1]||(s[1]=n("一.",-1)),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[0]||(s[0]=[n("Docker 核心组件",-1)])),_:1,__:[0]})])])]),a("h4",b,[a("a",m,[a("span",null,[s[3]||(s[3]=n("1.",-1)),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[2]||(s[2]=[n("Images (镜像)",-1)])),_:1,__:[2]})])])]),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[4]||(s[4]=[n("只读模板，包含创建容器所需的所有文件和配置。",-1)])),_:1,__:[4]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[5]||(s[5]=[n("通过 ",-1)])),_:1,__:[5]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[6]||(s[6]=[n("Dockerfile ",-1)])),_:1,__:[6]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[7]||(s[7]=[n("构建或从仓库拉取。",-1)])),_:1,__:[7]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[8]||(s[8]=[n("常用命令：",-1)])),_:1,__:[8]}),s[51]||(s[51]=p(`<div class="language-basic line-numbers-mode" data-highlighter="prismjs" data-ext="basic"><pre><code><span class="line">docker build <span class="token operator">-</span>t my<span class="token operator">-</span><span class="token function">image</span> .  # 构建镜像</span>
<span class="line">docker images              # 列出本地镜像</span>
<span class="line">docker pull nginx          # 从仓库拉取镜像</span>
<span class="line">docker rmi my<span class="token operator">-</span><span class="token function">image</span>        # 删除镜像</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),a("h4",v,[a("a",g,[a("span",null,[s[10]||(s[10]=n("2.",-1)),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[9]||(s[9]=[n("Containers (容器)",-1)])),_:1,__:[9]})])])]),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[11]||(s[11]=[n("镜像的运行实例，包含应用程序及其所有依赖项。容器之间相互隔离。",-1)])),_:1,__:[11]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[12]||(s[12]=[n("常用命令：",-1)])),_:1,__:[12]}),s[52]||(s[52]=p(`<div class="language-basic line-numbers-mode" data-highlighter="prismjs" data-ext="basic"><pre><code><span class="line">docker <span class="token keyword">run</span> <span class="token operator">-</span>d <span class="token operator">-</span>p <span class="token number">80</span><span class="token punctuation">:</span><span class="token number">80</span> my<span class="token operator">-</span><span class="token function">image</span>  # 运行容器</span>
<span class="line">docker ps                       # 查看运行中的容器</span>
<span class="line">docker <span class="token keyword">stop</span> container<span class="token operator">-</span>id        # 停止容器</span>
<span class="line">docker rm container<span class="token operator">-</span>id          # 删除容器</span>
<span class="line">docker exec <span class="token operator">-</span>it container<span class="token operator">-</span>id sh # 进入容器</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),a("h4",y,[a("a",h,[a("span",null,[s[14]||(s[14]=n("3.",-1)),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[13]||(s[13]=[n("Volumes (卷)",-1)])),_:1,__:[13]})])])]),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[15]||(s[15]=[n("解决容器内数据持久化问题，",-1)])),_:1,__:[15]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[16]||(s[16]=[n("可以在容器间共享。",-1)])),_:1,__:[16]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[17]||(s[17]=[n("常用命令：",-1)])),_:1,__:[17]}),s[53]||(s[53]=p(`<div class="language-basic line-numbers-mode" data-highlighter="prismjs" data-ext="basic"><pre><code><span class="line">docker volume create my<span class="token operator">-</span>vol     # 创建卷</span>
<span class="line">docker <span class="token keyword">run</span> <span class="token operator">-</span>v my<span class="token operator">-</span>vol<span class="token punctuation">:</span><span class="token operator">/</span>app<span class="token operator">/</span><span class="token keyword">data</span> # 挂载卷</span>
<span class="line">docker volume ls               # 列出卷</span>
<span class="line">docker volume inspect my<span class="token operator">-</span>vol   # 检查卷详情</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-networks-网络" tabindex="-1"><a class="header-anchor" href="#_4-networks-网络"><span>4.Networks (网络)</span></a></h4>`,2)),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[18]||(s[18]=[n("容器间通信的机制：默认有 bridge、host、none 三种网络模式。",-1)])),_:1,__:[18]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[19]||(s[19]=[n("常用命令：",-1)])),_:1,__:[19]}),s[54]||(s[54]=p(`<div class="language-basic line-numbers-mode" data-highlighter="prismjs" data-ext="basic"><pre><code><span class="line">docker network create my<span class="token operator">-</span>net    # 创建网络</span>
<span class="line">docker <span class="token keyword">run</span> <span class="token operator">-</span><span class="token operator">-</span>network<span class="token operator">=</span>my<span class="token operator">-</span>net    # 使用指定网络</span>
<span class="line">docker network ls              # 列出网络</span>
<span class="line">docker network inspect my<span class="token operator">-</span>net  # 检查网络详情</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),a("h4",f,[a("a",_,[a("span",null,[s[21]||(s[21]=n("5.",-1)),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[20]||(s[20]=[n("Dockerfile (构建文件)",-1)])),_:1,__:[20]})])])]),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[22]||(s[22]=[n("定义如何构建 Docker 镜像的文本文件。",-1)])),_:1,__:[22]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[23]||(s[23]=[n("常见指令：",-1)])),_:1,__:[23]}),s[55]||(s[55]=p(`<div class="language-basic line-numbers-mode" data-highlighter="prismjs" data-ext="basic"><pre><code><span class="line">FROM node<span class="token punctuation">:</span><span class="token number">16</span>         # 基础镜像</span>
<span class="line">WORKDIR <span class="token operator">/</span>app         # 工作目录</span>
<span class="line">COPY . .             # 复制文件</span>
<span class="line"><span class="token keyword">RUN</span> npm install      # 执行命令</span>
<span class="line">EXPOSE <span class="token number">3000</span>          # 暴露端口</span>
<span class="line">CMD [<span class="token string">&quot;npm&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;start&quot;</span>] # 启动命令</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),a("h4",q,[a("a",x,[a("span",null,[s[25]||(s[25]=n("6.",-1)),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[24]||(s[24]=[n("Docker Compose (编排)",-1)])),_:1,__:[24]})])])]),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[26]||(s[26]=[n("用于定义和运行多容器 Docker 应用程序的工具。",-1)])),_:1,__:[26]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[27]||(s[27]=[n("示例：",-1)])),_:1,__:[27]}),s[56]||(s[56]=p(`<div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code><span class="line"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3&#39;</span></span>
<span class="line"><span class="token key atrule">services</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">web</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">build</span><span class="token punctuation">:</span> .</span>
<span class="line">    <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&quot;3000:3000&quot;</span></span>
<span class="line">  <span class="token key atrule">db</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres</span>
<span class="line">    <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> db<span class="token punctuation">-</span>data<span class="token punctuation">:</span>/var/lib/postgresql/data</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">db-data</span><span class="token punctuation">:</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1)),l(e,{style:{color:"rgba(0, 0, 0, 0.9)"}},{default:i(()=>s[28]||(s[28]=[n("各组件关系图解:",-1)])),_:1,__:[28]}),s[57]||(s[57]=p(`<div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code><span class="line">Dockerfile → (构建) → Image → (实例化) → Container</span>
<span class="line">                     ↑</span>
<span class="line">Registry (Docker Hub/私有仓库)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二-window镜像源设置" tabindex="-1"><a class="header-anchor" href="#二-window镜像源设置"><span>二.window镜像源设置</span></a></h3><p><img src="https://cdn.nlark.com/yuque/0/2025/png/1460947/1750037751966-7e8fc30d-6039-433c-b12f-9bb85818bbe6.png" alt=""></p><p>打开docker桌面应用，点击设置，替换registry-mirrors</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;builder&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;gc&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token property">&quot;defaultKeepStorage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;20GB&quot;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;experimental&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;registry-mirrors&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&quot;https://2a6bf1988cb6428c877f723ec7530dbc.mirror.swr.myhuaweicloud.com&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://docker.m.daocloud.io&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://hub-mirror.c.163.com&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://mirror.baidubce.com&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://your_preferred_mirror&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://dockerhub.icu&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://docker.registry.cyou&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://docker-cf.registry.cyou&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://dockercf.jsdelivr.fyi&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://docker.jsdelivr.fyi&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://dockertest.jsdelivr.fyi&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://mirror.aliyuncs.com&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://dockerproxy.com&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://mirror.baidubce.com&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://docker.m.daocloud.io&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://docker.nju.edu.cn&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://docker.mirrors.sjtug.sjtu.edu.cn&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://mirror.iscas.ac.cn&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;https://docker.rainbond.cc&quot;</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三-常用命令" tabindex="-1"><a class="header-anchor" href="#三-常用命令"><span>三.常用命令</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># docker步骤</span></span>
<span class="line">dockerfile 	定制镜像文件</span>
<span class="line"><span class="token function">docker</span> build 	构建镜像</span>
<span class="line"><span class="token function">docker</span> run	运行镜像，得到一个容器进程（container）</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 容器</span></span>
<span class="line"><span class="token function">docker</span> run *    启动（容器）服务进程 - * 进程id或进程name</span>
<span class="line"><span class="token function">docker</span> stop *  停止服务进程 - * 进程id或进程name</span>
<span class="line"><span class="token function">docker</span> start *  再次启用服务进程 - * 进程id或进程name</span>
<span class="line"><span class="token function">docker</span> <span class="token function">ps</span>        查看正在运行的进行</span>
<span class="line"><span class="token function">docker</span> <span class="token function">ps</span> <span class="token parameter variable">-a</span>    查看容器所有的服务（包括未启动的）	</span>
<span class="line"><span class="token function">docker</span> <span class="token function">rm</span> *     删除容器 - * 进程id或进程name<span class="token punctuation">(</span>需要先暂停服务）</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 镜像（dockerhub网站）</span></span>
<span class="line"><span class="token function">docker</span> pull  author/仓库名	     拉去镜像到本地</span>
<span class="line"><span class="token function">docker</span> push *		     上传镜像到dockerhub</span>
<span class="line"><span class="token function">docker</span> commit  进程id  name        将容器进程保存成镜像</span>
<span class="line"><span class="token function">docker</span> image <span class="token function">ls</span>                             查看本地所有镜像</span>
<span class="line"><span class="token function">docker</span> rmi  *                                 删除镜像</span>
<span class="line">	</span>
<span class="line"></span>
<span class="line"><span class="token comment"># docker volume   		 数据存存储到指定位置，避免数据污染</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 启动多个容器</span></span>
<span class="line"><span class="token function">docker-compose</span> up</span>
<span class="line"><span class="token function">docker-compose</span> down</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="四-前端构建-运行docker镜像" tabindex="-1"><a class="header-anchor" href="#四-前端构建-运行docker镜像"><span>四.前端构建/运行docker镜像</span></a></h3><p>下面案例以Vite创建的单页面应用为例。</p>`,9)),a("h4",w,[a("a",j,[a("span",null,[s[30]||(s[30]=n("1.",-1)),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[29]||(s[29]=[n("创建Dockerfile",-1)])),_:1,__:[29]})])])]),s[58]||(s[58]=p(`<p>在项目根目录创建 <code>Dockerfile</code> 文件(无扩展名)，用于编写构建命令，内容如下：</p><div class="language-docker line-numbers-mode" data-highlighter="prismjs" data-ext="docker"><pre><code><span class="line"><span class="token comment"># 使用官方Node镜像作为构建环境</span></span>
<span class="line"><span class="token comment"># 使用 Node 18</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">FROM</span> node:18-alpine <span class="token keyword">as</span> builder </span></span>
<span class="line"><span class="token comment"># 添加这些行安装必要的依赖</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> apk add --no-cache openssl </span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 设置工作目录</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 复制package.json和package-lock.json</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">COPY</span> package*.json ./</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装依赖</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> npm install</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 复制项目文件</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">COPY</span> . .</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 构建项目</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">RUN</span> npm run build</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用Nginx作为生产服务器</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">FROM</span> nginx:alpine</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 从构建阶段复制构建好的文件到Nginx目录</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">COPY</span> <span class="token options"><span class="token property">--from</span><span class="token punctuation">=</span><span class="token string">builder</span></span> /app/dist /usr/share/nginx/html</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 暴露80端口</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">EXPOSE</span> 80</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 启动Nginx</span></span>
<span class="line"><span class="token instruction"><span class="token keyword">CMD</span> [<span class="token string">&quot;nginx&quot;</span>, <span class="token string">&quot;-g&quot;</span>, <span class="token string">&quot;daemon off;&quot;</span>]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-创建忽略文件-dockerignore" tabindex="-1"><a class="header-anchor" href="#_2-创建忽略文件-dockerignore"><span>2.创建忽略文件.dockerignore</span></a></h4><p>在项目根目录创建 <code>.dockerignore</code> 文件-可选，避免复制不必要的文件</p><div class="language-plain line-numbers-mode" data-highlighter="prismjs" data-ext="plain"><pre><code><span class="line">node_modules</span>
<span class="line">.git</span>
<span class="line">.DS_Store</span>
<span class="line">dist</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5)),a("h4",D,[a("a",N,[a("span",null,[s[32]||(s[32]=n("3.",-1)),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[31]||(s[31]=[n("构建Docker镜像",-1)])),_:1,__:[31]})])])]),s[59]||(s[59]=p(`<div class="language-basic line-numbers-mode" data-highlighter="prismjs" data-ext="basic"><pre><code><span class="line"># <span class="token operator">-</span>t my<span class="token operator">-</span>spa<span class="token operator">-</span>app 给镜像命名</span>
<span class="line"># . 表示使用当前目录的Dockerfile</span>
<span class="line">docker build <span class="token operator">-</span>t my<span class="token operator">-</span>spa<span class="token operator">-</span>app .</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行完之后，如下：</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/1460947/1750041291950-8a2419a0-8573-436b-9214-51da48e94a3c.png" alt=""></p><p>打开docker应用 —— 在Builds下就可看到我们构建的镜像了。</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/1460947/1750041539627-755fa5b1-bba3-4cb1-a75d-d3759e6ec792.png" alt=""></p>`,5)),a("h4",R,[a("a",O,[a("span",null,[s[34]||(s[34]=n("4.",-1)),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[33]||(s[33]=[n("运行Docker容器",-1)])),_:1,__:[33]})])])]),s[60]||(s[60]=p(`<div class="language-basic line-numbers-mode" data-highlighter="prismjs" data-ext="basic"><pre><code><span class="line">docker <span class="token keyword">run</span> <span class="token operator">-</span>d <span class="token operator">-</span>p <span class="token number">8080</span><span class="token punctuation">:</span><span class="token number">80</span> <span class="token operator">-</span><span class="token operator">-</span><span class="token keyword">name</span> my<span class="token operator">-</span>spa<span class="token operator">-</span>container my<span class="token operator">-</span>spa<span class="token operator">-</span>app</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1)),a("ul",null,[a("li",null,[l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[35]||(s[35]=[n("-d ",-1)])),_:1,__:[35]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[36]||(s[36]=[n("后台运行",-1)])),_:1,__:[36]})]),a("li",null,[l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[37]||(s[37]=[n("-p 8080:80 ",-1)])),_:1,__:[37]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[38]||(s[38]=[n("将主机的8080端口映射到容器的80端口",-1)])),_:1,__:[38]})]),a("li",null,[l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[39]||(s[39]=[n("--name ",-1)])),_:1,__:[39]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[40]||(s[40]=[n("给容器命名",-1)])),_:1,__:[40]})]),a("li",null,[l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[41]||(s[41]=[n("my-spa-app ",-1)])),_:1,__:[41]}),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[42]||(s[42]=[n("使用的镜像名称",-1)])),_:1,__:[42]})])]),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[43]||(s[43]=[n("然后就可以在containers里看到我们的服务了。",-1)])),_:1,__:[43]}),s[61]||(s[61]=a("p",null,[a("img",{src:"https://cdn.nlark.com/yuque/0/2025/png/1460947/1750043541987-ba1500d8-d81f-4ccf-a598-1f99b4bd6e89.png",alt:""})],-1)),a("p",null,[s[45]||(s[45]=n("当然上面的步骤仅在本地构建和运行docker镜像。下面是发布到 ",-1)),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[44]||(s[44]=[n("Docker Hub 方式。",-1)])),_:1,__:[44]})]),a("h3",C,[a("a",S,[a("span",null,[l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[46]||(s[46]=[n("五.发布到Docker Hub",-1)])),_:1,__:[46]})])])]),a("h4",B,[a("a",E,[a("span",null,[s[48]||(s[48]=n("1.",-1)),l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[47]||(s[47]=[n("注册 Docker Hub 账号",-1)])),_:1,__:[47]})])])]),s[62]||(s[62]=p(`<p>前往 <a href="https://hub.docker.com" target="_blank" rel="noopener noreferrer">hub.docker.com</a> 注册（如果还没有账号）</p><h4 id="_2-登录-docker-hub" tabindex="-1"><a class="header-anchor" href="#_2-登录-docker-hub"><span>2.登录 Docker Hub</span></a></h4><div class="language-basic line-numbers-mode" data-highlighter="prismjs" data-ext="basic"><pre><code><span class="line"># 本地终端登录</span>
<span class="line">docker login</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,3)),a("h4",H,[a("a",P,[a("span",null,[s[50]||(s[50]=n("3.",-1)),a("strong",null,[l(e,{style:{color:"rgba(0, 0, 0, 0.9)","background-color":"rgb(252, 252, 252)"}},{default:i(()=>s[49]||(s[49]=[n("给镜像打标签",-1)])),_:1,__:[49]})])])])]),s[63]||(s[63]=p(`<div class="language-basic line-numbers-mode" data-highlighter="prismjs" data-ext="basic"><pre><code><span class="line"># docker tag my<span class="token operator">-</span>spa<span class="token operator">-</span>app 你的用户名<span class="token operator">/</span>my<span class="token operator">-</span>spa<span class="token operator">-</span>app<span class="token punctuation">:</span>版本号</span>
<span class="line"># 例如</span>
<span class="line">docker tag my<span class="token operator">-</span>spa<span class="token operator">-</span>app zhangsan<span class="token operator">/</span>my<span class="token operator">-</span>spa<span class="token operator">-</span>app<span class="token punctuation">:</span>v1.<span class="token number">0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-推送镜像到-docker-hub" tabindex="-1"><a class="header-anchor" href="#_4-推送镜像到-docker-hub"><span>4.<strong>推送镜像到 Docker Hub</strong></span></a></h4><div class="language-plain line-numbers-mode" data-highlighter="prismjs" data-ext="plain"><pre><code><span class="line"># docker push 你的用户名/my-spa-app:版本号</span>
<span class="line"># 例如</span>
<span class="line">docker push zhangsan/my-spa-app:v1.0</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5-新服务器拉去镜像" tabindex="-1"><a class="header-anchor" href="#_5-新服务器拉去镜像"><span>5.新服务器拉去镜像</span></a></h4><div class="language-plain line-numbers-mode" data-highlighter="prismjs" data-ext="plain"><pre><code><span class="line"># docker pull 你的用户名/my-spa-app:版本号</span>
<span class="line"># docker run -d -p 80:80 --name spa-app 你的用户名/my-spa-app:版本号</span>
<span class="line"># 例如</span>
<span class="line">docker pull zhangsan/my-spa-app:v1.0</span>
<span class="line">docker run -d -p 80:80 --name spa-app zhangsan/my-spa-app:v1.0</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5))])}const z=o(d,[["render",V]]),F=JSON.parse('{"path":"/mds/docker%E4%BD%BF%E7%94%A8.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"一.Docker 核心组件","slug":"一-docker-核心组件","link":"#一-docker-核心组件","children":[]},{"level":3,"title":"二.window镜像源设置","slug":"二-window镜像源设置","link":"#二-window镜像源设置","children":[]},{"level":3,"title":"三.常用命令","slug":"三-常用命令","link":"#三-常用命令","children":[]},{"level":3,"title":"四.前端构建/运行docker镜像","slug":"四-前端构建-运行docker镜像","link":"#四-前端构建-运行docker镜像","children":[]},{"level":3,"title":"五.发布到Docker Hub","slug":"五-发布到docker-hub","link":"#五-发布到docker-hub","children":[]}],"git":{},"filePathRelative":"mds/docker使用.md","excerpt":"<h3>一.</h3>\\n<h4>1.</h4>\\n<div class=\\"language-basic line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"basic\\"><pre><code><span class=\\"line\\">docker build <span class=\\"token operator\\">-</span>t my<span class=\\"token operator\\">-</span><span class=\\"token function\\">image</span> .  # 构建镜像</span>\\n<span class=\\"line\\">docker images              # 列出本地镜像</span>\\n<span class=\\"line\\">docker pull nginx          # 从仓库拉取镜像</span>\\n<span class=\\"line\\">docker rmi my<span class=\\"token operator\\">-</span><span class=\\"token function\\">image</span>        # 删除镜像</span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{z as comp,F as data};
