import{_ as s,o as n,c as a,a as e}from"./app-D1Go9_za.js";const l={},p=e(`<h3 id="数据库和数据表创建" tabindex="-1"><a class="header-anchor" href="#数据库和数据表创建"><span>数据库和数据表创建</span></a></h3><h4 id="数据库操作" tabindex="-1"><a class="header-anchor" href="#数据库操作"><span>数据库操作：</span></a></h4><p>show databases - 显示指定数据库的所有表</p><p>create database 数据库名 - 创建数据库</p><p>drop database 数据库名 - 删除数据库</p><p>use 数据库名 - 切换到指定数据库</p><h4 id="数据表操作" tabindex="-1"><a class="header-anchor" href="#数据表操作"><span>数据表操作：</span></a></h4><p>create table(字段 字段类型) - 创建数据表：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">create</span> <span class="token keyword">table</span> <span class="token keyword">user</span><span class="token punctuation">(</span>
	id <span class="token keyword">INT</span><span class="token punctuation">,</span>
    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    sex <span class="token keyword">INT</span><span class="token punctuation">,</span>
    age <span class="token keyword">INT</span><span class="token punctuation">,</span>
    <span class="token keyword">date</span> <span class="token keyword">DATETIME</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>desc 表名 - 查看表结构都有哪些字段</p><p><strong>alter table</strong> 使用</p><ul><li>alter table 表名 modify colmn 字段 字段类型 - 修改表结构：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">table</span> <span class="token keyword">user</span> <span class="token keyword">MODIFY</span> <span class="token keyword">COLUMN</span> name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>alter table 表名 rename colmn 字段名 to 新字段名 - 修改表字段名：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">table</span> <span class="token keyword">user</span> <span class="token keyword">RENAME</span> <span class="token keyword">COLUMN</span> name <span class="token keyword">to</span> nick_name<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>alter table 表名 add colmn 字段 字段类型 - 新增字段：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">table</span> <span class="token keyword">user</span> <span class="token keyword">ADD</span> <span class="token keyword">COLUMN</span> <span class="token keyword">level</span> <span class="token keyword">INT</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>alter table 表名 drop colmn 字段 - 删除字段</li></ul><div class="language-SQL line-numbers-mode" data-ext="SQL" data-title="SQL"><pre class="language-SQL"><code>ALTER table user DROP COLUMN level ;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>alter table 表名 modify colmn 字段 字段类型 default 值 - 设置默认值：</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">table</span> <span class="token keyword">user</span> <span class="token keyword">MODIFY</span> <span class="token keyword">COLUMN</span> <span class="token keyword">level</span> <span class="token keyword">INT</span> <span class="token keyword">DEFAULT</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>​</p><h3 id="数据的增删改查" tabindex="-1"><a class="header-anchor" href="#数据的增删改查"><span><strong>数据的增删改查</strong></span></a></h3><p>insert into 表名 （字段1，字段2）values (值1，值2) - 插入一条数据：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">user</span> <span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;zhansan&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>select * from 表名 - 查询数据</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span><span class="token punctuation">;</span>
<span class="token keyword">select</span>  id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>sex  <span class="token keyword">from</span> <span class="token keyword">user</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>update 表名 set 字段=值 where name=值 - 更新数据</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 使用 where 条件语句 更新 张三的等级为1</span>
<span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> <span class="token keyword">level</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// 所有用户的等级改为1  --- 非常危险</span>
<span class="token keyword">UPDATE</span> <span class="token keyword">user</span> <span class="token keyword">set</span> <span class="token keyword">level</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>delete from 表名 where 字段条件 - 删除指定条数据</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">delete</span> <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span>  id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="数据表导入导出" tabindex="-1"><a class="header-anchor" href="#数据表导入导出"><span><strong>数据表导入导出</strong></span></a></h3><p>导出到指定文件：</p><p>mysqldump -u 用户 -p 表名 &gt; 文件名.sql</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>// 使用root用户 输入密码 导出user数据表 到user.sql文件中
mysqldump -u root -p user &gt; user.sql
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>导入指定文件：</p><p>mysql -u 用户 -p 表名 &lt; 文件名.sql</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>mysql <span class="token operator">-</span>u  root  <span class="token operator">-</span>p <span class="token keyword">user</span> <span class="token operator">&lt;</span> <span class="token keyword">user</span><span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="常用语句" tabindex="-1"><a class="header-anchor" href="#常用语句"><span><strong>常用语句</strong></span></a></h3><h4 id="where-条件语句" tabindex="-1"><a class="header-anchor" href="#where-条件语句"><span>where 条件语句</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> <span class="token keyword">level</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> <span class="token keyword">level</span> <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">and</span> sex <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> <span class="token keyword">level</span> <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">and</span> sex <span class="token operator">=</span> <span class="token number">1</span>  <span class="token operator">or</span> age <span class="token operator">&gt;</span> <span class="token number">30</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关键字 优先级：not &gt; and &gt; or</p><p>可以使用括号改变条件语句的优先级：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> <span class="token keyword">level</span> <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">and</span> <span class="token punctuation">(</span>sex <span class="token operator">=</span> <span class="token number">1</span>  <span class="token operator">or</span> age <span class="token operator">&gt;</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="关键字-in-限定指定值类型" tabindex="-1"><a class="header-anchor" href="#关键字-in-限定指定值类型"><span>关键字 in 限定指定值类型</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 查找等级 1,3,4的用户</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> <span class="token keyword">level</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="关键字-between-and-指定范围" tabindex="-1"><a class="header-anchor" href="#关键字-between-and-指定范围"><span>关键字 between ... and ... 指定范围</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 查询等级 1-4 的用户，包括1和4</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> <span class="token keyword">level</span> <span class="token operator">BETWEEN</span> <span class="token number">1</span> <span class="token operator">and</span> <span class="token number">4</span><span class="token punctuation">;</span>
<span class="token comment">// 等价于</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> <span class="token keyword">level</span> <span class="token operator">&gt;=</span> <span class="token number">1</span> <span class="token operator">and</span> <span class="token keyword">level</span> <span class="token operator">&lt;=</span> <span class="token number">4</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>not可以加到任何一个条件语句中</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 不在 1到4范围内的</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> <span class="token keyword">level</span> <span class="token operator">NOT</span> <span class="token operator">BETWEEN</span> <span class="token number">1</span> <span class="token operator">and</span> <span class="token number">4</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="关键字-like-模糊查询" tabindex="-1"><a class="header-anchor" href="#关键字-like-模糊查询"><span>关键字 like 模糊查询</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 查询名字带第一个是“王”字的，%代表任意字</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;王%&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// 名字中包含 “王”字的用户</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;%王%&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// _ 一个表示一个任意字：查询名字为2个字姓王的用户</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;王_&#39;</span><span class="token punctuation">;</span>
<span class="token comment">// 查询名字为3个字姓王的用户</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> name <span class="token operator">LIKE</span> <span class="token string">&#39;王__&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="is-null-判断" tabindex="-1"><a class="header-anchor" href="#is-null-判断"><span>is null 判断</span></a></h4><p>sql里面的null和任何都不相等，同样也不和自己相等。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 查询性别为 null的用户</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> sex <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">;</span>
<span class="token comment">// 查询性别不为 null的用户</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> sex <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用等号 查找 字段为空 - 有值空白符，注意sql中 空和&quot;&quot;不一样！</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> sex <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="使用-order-by-进行排序" tabindex="-1"><a class="header-anchor" href="#使用-order-by-进行排序"><span>使用 order by 进行排序</span></a></h4><ul><li>desc 降序排列</li><li>asc 升序排列</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 按等级降序排列</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token keyword">level</span> <span class="token keyword">desc</span><span class="token punctuation">;</span>
<span class="token comment">// 按等级降序排列的基础上，额外的再按 年龄降序排列</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token keyword">level</span> <span class="token keyword">desc</span><span class="token punctuation">,</span>  age<span class="token punctuation">;</span>
<span class="token comment">// 按等级降序排列的基础上，额外的再按 年龄升序排列</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token keyword">level</span> <span class="token keyword">desc</span><span class="token punctuation">,</span>  age <span class="token keyword">ASC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="limit-分页查询" tabindex="-1"><a class="header-anchor" href="#limit-分页查询"><span><strong>limit 分页查询</strong></span></a></h4><ul><li>limit n 限制查询n条记录</li><li>limit n offset m 限制从第m+1条 开始查询n条记录，等效于低版本的 limit m,n</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 从第6条开始，获取3条记录</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">limit</span> <span class="token number">3</span> <span class="token keyword">offset</span> <span class="token number">5</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>分页公式：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span>  表名  <span class="token keyword">limit</span> <span class="token punctuation">(</span>currentPage<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>pageSize<span class="token punctuation">,</span>pageSize<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span>  表名  <span class="token keyword">limit</span> pageSize <span class="token keyword">offset</span> <span class="token punctuation">(</span>currentPage<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>pageSize<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="as-别名" tabindex="-1"><a class="header-anchor" href="#as-别名"><span>as 别名</span></a></h4><p>字段别名</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span>  id <span class="token keyword">as</span> u_id <span class="token punctuation">,</span>name <span class="token keyword">as</span> u_name  <span class="token keyword">from</span> <span class="token keyword">user</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>表别名</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">as</span> u <span class="token keyword">where</span> u<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="聚合函数" tabindex="-1"><a class="header-anchor" href="#聚合函数"><span>聚合函数</span></a></h3><ul><li>AVG() 返回集合平均值</li><li>COUNT() 返回集合数量</li><li>MAX() 返回最大值</li><li>MIN() 返回最小值</li><li>SUM 求和</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 统计用户数量</span>
<span class="token keyword">select</span> coun<span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token punctuation">;</span>
<span class="token comment">// 求等级的平均值</span>
<span class="token keyword">select</span> <span class="token function">AVG</span><span class="token punctuation">(</span><span class="token keyword">level</span><span class="token punctuation">)</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>分组 group by</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 通过分组，统计性别分别对应的数量</span>
<span class="token keyword">SELECT</span> sex<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> sex<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>分组过滤 having</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 分组统计不同级别的数量，仅显示统计数量大于4的</span>
<span class="token keyword">SELECT</span> <span class="token keyword">level</span><span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token keyword">level</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> <span class="token keyword">user</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">level</span> <span class="token keyword">having</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token keyword">level</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">4</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>去重 distinct</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> sex <span class="token keyword">FROM</span> <span class="token keyword">use</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>并集查询 union</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 等级在1~4 和 性别不为null 的并集</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> <span class="token keyword">level</span> <span class="token operator">BETWEEN</span> <span class="token number">1</span> <span class="token operator">and</span> <span class="token number">4</span>
<span class="token keyword">UNION</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> sex <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>union 默认会去重：2个条件都满足会合并成一条。如需不去重，使用 union all 。</p><p><strong>交集查询 intersect</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 等级在1~4 且 性别不为null 的交集</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> <span class="token keyword">level</span> <span class="token operator">BETWEEN</span> <span class="token number">1</span> <span class="token operator">and</span> <span class="token number">4</span>
<span class="token keyword">INTERSECT</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> sex <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>差集查询 except</strong></p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 等级在1~4 且 性别不为0 的差集</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> <span class="token keyword">level</span> <span class="token operator">BETWEEN</span> <span class="token number">1</span> <span class="token operator">and</span> <span class="token number">4</span>
<span class="token keyword">EXCEPT</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> sex <span class="token operator">=</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="子查询" tabindex="-1"><a class="header-anchor" href="#子查询"><span>子查询</span></a></h3><p>一个查询的结果是另一个查询的条件，这个时候就用到子查询。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 求平均等级</span>
<span class="token keyword">select</span>  <span class="token function">AVG</span><span class="token punctuation">(</span><span class="token keyword">level</span><span class="token punctuation">)</span>  <span class="token keyword">from</span> <span class="token keyword">user</span><span class="token punctuation">;</span>

<span class="token comment">// 查询 大于平均等级的数据</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> <span class="token keyword">level</span> <span class="token operator">&gt;</span> <span class="token punctuation">(</span><span class="token keyword">select</span>  <span class="token function">AVG</span><span class="token punctuation">(</span><span class="token keyword">level</span><span class="token punctuation">)</span>  <span class="token keyword">from</span> <span class="token keyword">user</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 新建一个表，数据为查询小于5的数据</span>
<span class="token keyword">create</span> <span class="token keyword">table</span> new_user <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">where</span> <span class="token keyword">level</span> <span class="token operator">&lt;</span> <span class="token number">5</span>

<span class="token comment">// 将大于6的数据插入到新表中</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> new_user <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">where</span> <span class="token keyword">level</span> <span class="token operator">&gt;</span> <span class="token number">6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>exists 查询结构判断，返回查询结果的数量</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 查询等级大于100的数据是否存在，返回0，不存在</span>
<span class="token keyword">select</span> <span class="token keyword">exists</span> <span class="token punctuation">(</span><span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span>  <span class="token keyword">where</span> <span class="token keyword">level</span> <span class="token operator">&gt;</span> <span class="token number">100</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="表关联" tabindex="-1"><a class="header-anchor" href="#表关联"><span>表关联</span></a></h3><p>一个表的主键是另一个表的外键，这样就可以把2个不同表关联起来。</p><ul><li>内连接：inner join 返回2个表都有的数据</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">inner</span> <span class="token keyword">join</span> article <span class="token keyword">on</span> <span class="token keyword">user</span><span class="token punctuation">.</span>id <span class="token operator">=</span> artical<span class="token punctuation">.</span>uid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>左连接：left join 返回左表所有记录，即便右表没有记录使用null填充</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>select  *  from user left join article on user.id = artical.uid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>右连接：right join 返回右表所有记录，即便左表没有记录使用null填充</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>select  *  from user right join article on user.id = artical.uid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="索引" tabindex="-1"><a class="header-anchor" href="#索引"><span>索引</span></a></h3><p>索引可以大大提高MySQL的检索速度，提高运行效率。</p><p>为某个字段 创建索引</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 为user的name字段添加索引</span>
<span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> indexName <span class="token keyword">ON</span> <span class="token keyword">user</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>通过修改表结构添加索引</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> <span class="token keyword">user</span> <span class="token keyword">add</span> <span class="token keyword">index</span>  indexName<span class="token punctuation">(</span>name<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>删除索引</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">DROP</span> <span class="token keyword">INDEX</span> indexName <span class="token keyword">ON</span> <span class="token keyword">user</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="视图" tabindex="-1"><a class="header-anchor" href="#视图"><span>视图</span></a></h3><p>视图是虚拟存在的数据表。会根据查询语句保存在数据字段中，会根据表数据的修改而修改。</p><p>创建视图</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment">// 创建一个视图：存放user表等级前10的用户</span>
creat <span class="token keyword">view</span> top10
<span class="token keyword">as</span>
<span class="token keyword">select</span>  <span class="token operator">*</span>  <span class="token keyword">from</span> <span class="token keyword">user</span> 
<span class="token keyword">order</span> <span class="token keyword">by</span>
<span class="token keyword">level</span> <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,111),o=[p];function t(c,r){return n(),a("div",null,o)}const i=s(l,[["render",t],["__file","sql命令.html.vue"]]),k=JSON.parse('{"path":"/guide/mysql/sql%E5%91%BD%E4%BB%A4.html","title":"","lang":"zh-CN","frontmatter":{},"headers":[{"level":3,"title":"数据库和数据表创建","slug":"数据库和数据表创建","link":"#数据库和数据表创建","children":[]},{"level":3,"title":"数据的增删改查","slug":"数据的增删改查","link":"#数据的增删改查","children":[]},{"level":3,"title":"数据表导入导出","slug":"数据表导入导出","link":"#数据表导入导出","children":[]},{"level":3,"title":"常用语句","slug":"常用语句","link":"#常用语句","children":[]},{"level":3,"title":"聚合函数","slug":"聚合函数","link":"#聚合函数","children":[]},{"level":3,"title":"子查询","slug":"子查询","link":"#子查询","children":[]},{"level":3,"title":"表关联","slug":"表关联","link":"#表关联","children":[]},{"level":3,"title":"索引","slug":"索引","link":"#索引","children":[]},{"level":3,"title":"视图","slug":"视图","link":"#视图","children":[]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"guide/mysql/sql命令.md","excerpt":"<h3>数据库和数据表创建</h3>\\n<h4>数据库操作：</h4>\\n<p>show databases    - 显示指定数据库的所有表</p>\\n<p>create database  数据库名   - 创建数据库</p>\\n<p>drop database 数据库名    - 删除数据库</p>\\n<p>use 数据库名    - 切换到指定数据库</p>\\n<h4>数据表操作：</h4>\\n<p>create table(字段 字段类型)    - 创建数据表：</p>\\n<div class=\\"language-sql\\" data-ext=\\"sql\\" data-title=\\"sql\\"><pre class=\\"language-sql\\"><code><span class=\\"token keyword\\">create</span> <span class=\\"token keyword\\">table</span> <span class=\\"token keyword\\">user</span><span class=\\"token punctuation\\">(</span>\\n\\tid <span class=\\"token keyword\\">INT</span><span class=\\"token punctuation\\">,</span>\\n    name <span class=\\"token keyword\\">VARCHAR</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">100</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n    sex <span class=\\"token keyword\\">INT</span><span class=\\"token punctuation\\">,</span>\\n    age <span class=\\"token keyword\\">INT</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token keyword\\">date</span> <span class=\\"token keyword\\">DATETIME</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">)</span>\\n</code></pre></div>"}');export{i as comp,k as data};
