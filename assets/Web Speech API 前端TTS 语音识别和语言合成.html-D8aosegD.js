import{_ as s,c as a,b as p,o as t}from"./app-BI9Ul3hK.js";const e={};function o(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h3 id="_1-speechrecognition-语言识别demo" tabindex="-1"><a class="header-anchor" href="#_1-speechrecognition-语言识别demo"><span>1.SpeechRecognition 语言识别demo</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> SpeechRecognition <span class="token operator">=</span> window<span class="token punctuation">.</span>SpeechRecognition <span class="token operator">||</span> window<span class="token punctuation">.</span>webkitSpeechRecognition<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> SpeechGrammarList <span class="token operator">=</span> window<span class="token punctuation">.</span>SpeechGrammarList <span class="token operator">||</span> window<span class="token punctuation">.</span>webkitSpeechGrammarList<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> SpeechRecognitionEvent <span class="token operator">=</span> window<span class="token punctuation">.</span>SpeechRecognitionEvent <span class="token operator">||</span> window<span class="token punctuation">.</span>webkitSpeechRecognitionEvent<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token string">&quot;aqua&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&quot;azure&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&quot;beige&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&quot;bisque&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&quot;black&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&quot;blue&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&quot;brown&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&quot;chocolate&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&quot;coral&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// JSGF 规范</span></span>
<span class="line"><span class="token keyword">const</span> grammar <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">#JSGF V1.0; grammar colors; public &lt;color&gt; = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>colors<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot; | &quot;</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> recognition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpeechRecognition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> speechRecognitionList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpeechGrammarList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">speechRecognitionList<span class="token punctuation">.</span><span class="token function">addFromString</span><span class="token punctuation">(</span>grammar<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 被检索列表</span></span>
<span class="line">recognition<span class="token punctuation">.</span>grammars <span class="token operator">=</span> speechRecognitionList<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 不开启持续不间断</span></span>
<span class="line">recognition<span class="token punctuation">.</span>continuous <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 识别语言</span></span>
<span class="line">recognition<span class="token punctuation">.</span>lang <span class="token operator">=</span> <span class="token string">&quot;en-US&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 不返回临时结果</span></span>
<span class="line">recognition<span class="token punctuation">.</span>interimResults <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 最大匹配数量</span></span>
<span class="line">recognition<span class="token punctuation">.</span>maxAlternatives <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 开始识别</span></span>
<span class="line">  recognition<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;开始识别颜色...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 识别结果</span></span>
<span class="line">recognition<span class="token punctuation">.</span><span class="token function-variable function">onresult</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> color <span class="token operator">=</span> event<span class="token punctuation">.</span>results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>transcript<span class="token punctuation">;</span></span>
<span class="line">  diagnostic<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Result received: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>color<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line">  bg<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> color<span class="token punctuation">;</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Confidence: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>event<span class="token punctuation">.</span>results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>confidence<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 匹配到结果，就停止识别</span></span>
<span class="line">recognition<span class="token punctuation">.</span><span class="token function-variable function">onspeechend</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  recognition<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 未能识别返回</span></span>
<span class="line">recognition<span class="token punctuation">.</span><span class="token function-variable function">onnomatch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;I didn&#39;t recognize that color&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 错误异常时</span></span>
<span class="line">recognition<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Error occurred in recognition: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>event<span class="token punctuation">.</span>error<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-speechsynthesis-语音合成demo" tabindex="-1"><a class="header-anchor" href="#_2-speechsynthesis-语音合成demo"><span>2.speechSynthesis 语音合成demo</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> synth <span class="token operator">=</span> window<span class="token punctuation">.</span>speechSynthesis<span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 获取音频声源列表</span></span>
<span class="line">voices <span class="token operator">=</span> synth<span class="token punctuation">.</span><span class="token function">getVoices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// </span></span>
<span class="line"><span class="token keyword">let</span> utterThis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpeechSynthesisUtterance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 内容</span></span>
<span class="line">utterThis<span class="token punctuation">.</span>text  <span class="token operator">=</span> <span class="token string">&quot;are you ok?&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 声源设置，不同浏览器不一样</span></span>
<span class="line">utterThis<span class="token punctuation">.</span>voiceURI <span class="token operator">=</span> <span class="token string">&quot;Microsoft Huihui - Chinese (Simplified, PRC)&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 声音和服务</span></span>
<span class="line"><span class="token comment">// 声音音量区间范围是​​0​​​到​​1默认是​​1​​</span></span>
<span class="line">utterThis<span class="token punctuation">.</span>volume <span class="token operator">=</span> <span class="token number">0.7</span><span class="token punctuation">;</span> </span>
<span class="line"><span class="token comment">// 语言</span></span>
<span class="line">utterThis<span class="token punctuation">.</span>lang <span class="token operator">=</span> <span class="token string">&quot;zh-cn&quot;</span><span class="token punctuation">;</span> </span>
<span class="line"><span class="token comment">// 音高大小 0-2</span></span>
<span class="line">utterThis<span class="token punctuation">.</span>pitch <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 语速快慢 语速，默认值是​​1​​​，范围是​​0.1​​​到​​10​​​</span></span>
<span class="line">utterThis<span class="token punctuation">.</span>rate <span class="token operator">=</span> <span class="token number">1</span> <span class="token punctuation">;</span></span>
<span class="line">synth<span class="token punctuation">.</span><span class="token function">speak</span><span class="token punctuation">(</span>utterThis<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 支持事件：暂停、恢复、取消</span></span>
<span class="line">window<span class="token punctuation">.</span>speechSynthesis<span class="token punctuation">.</span><span class="token function">pause</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">window<span class="token punctuation">.</span>speechSynthesis<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">window<span class="token punctuation">.</span>speechSynthesis<span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)]))}const l=s(e,[["render",o]]),u=JSON.parse('{"path":"/mds/Web%20Speech%20API%20%E5%89%8D%E7%AB%AFTTS%20%E8%AF%AD%E9%9F%B3%E8%AF%86%E5%88%AB%E5%92%8C%E8%AF%AD%E8%A8%80%E5%90%88%E6%88%90.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":3,"title":"1.SpeechRecognition 语言识别demo","slug":"_1-speechrecognition-语言识别demo","link":"#_1-speechrecognition-语言识别demo","children":[]},{"level":3,"title":"2.speechSynthesis 语音合成demo","slug":"_2-speechsynthesis-语音合成demo","link":"#_2-speechsynthesis-语音合成demo","children":[]}],"git":{},"filePathRelative":"mds/Web Speech API 前端TTS 语音识别和语言合成.md","excerpt":"<h3>1.SpeechRecognition 语言识别demo</h3>\\n<div class=\\"language-javascript line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"js\\"><pre><code><span class=\\"line\\"><span class=\\"token keyword\\">const</span> SpeechRecognition <span class=\\"token operator\\">=</span> window<span class=\\"token punctuation\\">.</span>SpeechRecognition <span class=\\"token operator\\">||</span> window<span class=\\"token punctuation\\">.</span>webkitSpeechRecognition<span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">const</span> SpeechGrammarList <span class=\\"token operator\\">=</span> window<span class=\\"token punctuation\\">.</span>SpeechGrammarList <span class=\\"token operator\\">||</span> window<span class=\\"token punctuation\\">.</span>webkitSpeechGrammarList<span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">const</span> SpeechRecognitionEvent <span class=\\"token operator\\">=</span> window<span class=\\"token punctuation\\">.</span>SpeechRecognitionEvent <span class=\\"token operator\\">||</span> window<span class=\\"token punctuation\\">.</span>webkitSpeechRecognitionEvent<span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">const</span> colors <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span></span>\\n<span class=\\"line\\">  <span class=\\"token string\\">\\"aqua\\"</span><span class=\\"token punctuation\\">,</span></span>\\n<span class=\\"line\\">  <span class=\\"token string\\">\\"azure\\"</span><span class=\\"token punctuation\\">,</span></span>\\n<span class=\\"line\\">  <span class=\\"token string\\">\\"beige\\"</span><span class=\\"token punctuation\\">,</span></span>\\n<span class=\\"line\\">  <span class=\\"token string\\">\\"bisque\\"</span><span class=\\"token punctuation\\">,</span></span>\\n<span class=\\"line\\">  <span class=\\"token string\\">\\"black\\"</span><span class=\\"token punctuation\\">,</span></span>\\n<span class=\\"line\\">  <span class=\\"token string\\">\\"blue\\"</span><span class=\\"token punctuation\\">,</span></span>\\n<span class=\\"line\\">  <span class=\\"token string\\">\\"brown\\"</span><span class=\\"token punctuation\\">,</span></span>\\n<span class=\\"line\\">  <span class=\\"token string\\">\\"chocolate\\"</span><span class=\\"token punctuation\\">,</span></span>\\n<span class=\\"line\\">  <span class=\\"token string\\">\\"coral\\"</span><span class=\\"token punctuation\\">,</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// JSGF 规范</span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">const</span> grammar <span class=\\"token operator\\">=</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token string\\">#JSGF V1.0; grammar colors; public &lt;color&gt; = </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>colors<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">join</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\" | \\"</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">)</span><span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">;</span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">const</span> recognition <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">SpeechRecognition</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"token keyword\\">const</span> speechRecognitionList <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">SpeechGrammarList</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\">speechRecognitionList<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">addFromString</span><span class=\\"token punctuation\\">(</span>grammar<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 被检索列表</span></span>\\n<span class=\\"line\\">recognition<span class=\\"token punctuation\\">.</span>grammars <span class=\\"token operator\\">=</span> speechRecognitionList<span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 不开启持续不间断</span></span>\\n<span class=\\"line\\">recognition<span class=\\"token punctuation\\">.</span>continuous <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 识别语言</span></span>\\n<span class=\\"line\\">recognition<span class=\\"token punctuation\\">.</span>lang <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"en-US\\"</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 不返回临时结果</span></span>\\n<span class=\\"line\\">recognition<span class=\\"token punctuation\\">.</span>interimResults <span class=\\"token operator\\">=</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 最大匹配数量</span></span>\\n<span class=\\"line\\">recognition<span class=\\"token punctuation\\">.</span>maxAlternatives <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\">document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">querySelector</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"#btn\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">onclick</span><span class=\\"token operator\\">=</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token operator\\">=&gt;</span><span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">  <span class=\\"token comment\\">// 开始识别</span></span>\\n<span class=\\"line\\">  recognition<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">start</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\">  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"开始识别颜色...\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 识别结果</span></span>\\n<span class=\\"line\\">recognition<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">onresult</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">event</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">  <span class=\\"token keyword\\">const</span> color <span class=\\"token operator\\">=</span> event<span class=\\"token punctuation\\">.</span>results<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>transcript<span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\">  diagnostic<span class=\\"token punctuation\\">.</span>textContent <span class=\\"token operator\\">=</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token string\\">Result received: </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>color<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">.</span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\">  bg<span class=\\"token punctuation\\">.</span>style<span class=\\"token punctuation\\">.</span>backgroundColor <span class=\\"token operator\\">=</span> color<span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\">  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token string\\">Confidence: </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>event<span class=\\"token punctuation\\">.</span>results<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>confidence<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 匹配到结果，就停止识别</span></span>\\n<span class=\\"line\\">recognition<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">onspeechend</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">  recognition<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">stop</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 未能识别返回</span></span>\\n<span class=\\"line\\">recognition<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">onnomatch</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">event</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"I didn\'t recognize that color\\"</span><span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span class=\\"token comment\\">// 错误异常时</span></span>\\n<span class=\\"line\\">recognition<span class=\\"token punctuation\\">.</span><span class=\\"token function-variable function\\">onerror</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">event</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span></span>\\n<span class=\\"line\\">  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">error</span><span class=\\"token punctuation\\">(</span><span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token string\\">Error occurred in recognition: </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>event<span class=\\"token punctuation\\">.</span>error<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">`</span></span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span></span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">}</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{l as comp,u as data};
