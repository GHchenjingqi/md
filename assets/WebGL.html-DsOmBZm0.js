import{_ as o,c as l,a,b as c,d as p,w as t,r as i,o as u,e}from"./app-BI9Ul3hK.js";const r={};function k(d,n){const s=i("font");return u(),l("div",null,[a(s,{style:{color:"rgb(77, 77, 77)"}},{default:t(()=>n[0]||(n[0]=[e("webgl需要图形学知识，而webgl需要通过js和glsl两种语言。",-1)])),_:1,__:[0]}),n[3]||(n[3]=c(`<h2 id="webgl-坐标系" tabindex="-1"><a class="header-anchor" href="#webgl-坐标系"><span>webGL 坐标系</span></a></h2><p>与canvas坐标系不同（原点在左上角），webgl的原点在画布中心位置（同数学坐标系一致）。</p><p>canvas坐标系如下：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/1460947/1715736439252-32e0fad4-726f-408a-bbf9-481c6cdde3da.png" alt="canvas坐标"></p><p>webgl坐标系如下：</p><p><img src="https://cdn.nlark.com/yuque/0/2024/png/1460947/1715736504505-0f12968d-4c87-4123-998d-dc6a3f6224e7.png" alt=""></p><h2 id="webgl-颜色" tabindex="-1"><a class="header-anchor" href="#webgl-颜色"><span>webGL 颜色</span></a></h2><p>webgl的颜色参数也是安装 rgba的顺序，和css的rgba一致，不同的是webgl的rgb三项值域为【0-1】，css中rgb的值域【0-255】，因此css色转webgl色rgb需要分别除以255。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> rgba <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">const</span> r <span class="token operator">=</span> rgb<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> g <span class="token operator">=</span> rgb<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> b <span class="token operator">=</span> rgb<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">255</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> a <span class="token operator">=</span> rgb<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">gl<span class="token punctuation">.</span><span class="token function">clearColor</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>案例-颜色跑马灯</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Color <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;https://unpkg.com/three/build/three.module.js&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> color <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">ani</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">ani</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 每次R值偏移0.005</span></span>
<span class="line">  color<span class="token punctuation">.</span><span class="token function">offsetHSL</span><span class="token punctuation">(</span><span class="token number">0.005</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  gl<span class="token punctuation">.</span><span class="token function">clearColor</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span>r<span class="token punctuation">,</span> color<span class="token punctuation">.</span>g<span class="token punctuation">,</span> color<span class="token punctuation">.</span>b<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  gl<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">COLOR_BUFFER_BIT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>ani<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="webgl-着色器" tabindex="-1"><a class="header-anchor" href="#webgl-着色器"><span>webgl 着色器</span></a></h2><p>webgl绘图需要用到两种着色器。vec4 （4维矢量对象）</p><p>1.顶点着色器 Vertex shader ：描述顶点的特征，如位置、颜色等</p><p>定点着色器代码 要要写在type=“x-shader/x-vertex” 的script中。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>script id<span class="token operator">=</span><span class="token string">&quot;vertexShader&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;x-shader/x-vertex&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 位置：x,y,z</span></span>
<span class="line">        gl_Position <span class="token operator">=</span> <span class="token function">vec4</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 大小</span></span>
<span class="line">        gl_PointSize <span class="token operator">=</span> <span class="token number">100.0</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"><span class="token comment">// 获取定点着色器内容</span></span>
<span class="line"><span class="token keyword">const</span> vsSource <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;vertexShader&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.片元着色器 Fragment shader：进行逐片元处理，如光照。</p><p>片元着色程序，要写在type=“x-shader/x-fragment” 的script中。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>script id<span class="token operator">=</span><span class="token string">&quot;fragmentShader&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;x-shader/x-fragment&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 颜色:r,g,b</span></span>
<span class="line">        gl_FragColor <span class="token operator">=</span> <span class="token function">vec4</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"><span class="token comment">// 获取片元着色器内容</span></span>
<span class="line"><span class="token keyword">const</span> fsSource <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;fragmentShader&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>着色器初始化函数：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">initShaders</span><span class="token punctuation">(</span><span class="token parameter">gl<span class="token punctuation">,</span> vsSource<span class="token punctuation">,</span> fsSource</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token comment">//创建程序对象</span></span>
<span class="line">				<span class="token keyword">const</span> program <span class="token operator">=</span> gl<span class="token punctuation">.</span><span class="token function">createProgram</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token comment">//建立着色对象</span></span>
<span class="line">				<span class="token keyword">const</span> vertexShader <span class="token operator">=</span> <span class="token function">loadShader</span><span class="token punctuation">(</span>gl<span class="token punctuation">,</span> gl<span class="token punctuation">.</span><span class="token constant">VERTEX_SHADER</span><span class="token punctuation">,</span> vsSource<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">const</span> fragmentShader <span class="token operator">=</span> <span class="token function">loadShader</span><span class="token punctuation">(</span>gl<span class="token punctuation">,</span> gl<span class="token punctuation">.</span><span class="token constant">FRAGMENT_SHADER</span><span class="token punctuation">,</span> fsSource<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token comment">//把顶点着色对象装进程序对象中</span></span>
<span class="line">				gl<span class="token punctuation">.</span><span class="token function">attachShader</span><span class="token punctuation">(</span>program<span class="token punctuation">,</span> vertexShader<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token comment">//把片元着色对象装进程序对象中</span></span>
<span class="line">				gl<span class="token punctuation">.</span><span class="token function">attachShader</span><span class="token punctuation">(</span>program<span class="token punctuation">,</span> fragmentShader<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token comment">//连接webgl上下文对象和程序对象</span></span>
<span class="line">				gl<span class="token punctuation">.</span><span class="token function">linkProgram</span><span class="token punctuation">(</span>program<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token comment">//启动程序对象</span></span>
<span class="line">				gl<span class="token punctuation">.</span><span class="token function">useProgram</span><span class="token punctuation">(</span>program<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token comment">//将程序对象挂到上下文对象上</span></span>
<span class="line">				gl<span class="token punctuation">.</span>program <span class="token operator">=</span> program<span class="token punctuation">;</span></span>
<span class="line">				<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">loadShader</span><span class="token punctuation">(</span><span class="token parameter">gl<span class="token punctuation">,</span> type<span class="token punctuation">,</span> source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">				<span class="token comment">//根据着色类型，建立着色器对象</span></span>
<span class="line">				<span class="token keyword">const</span> shader <span class="token operator">=</span> gl<span class="token punctuation">.</span><span class="token function">createShader</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token comment">//将着色器源文件传入着色器对象中</span></span>
<span class="line">				gl<span class="token punctuation">.</span><span class="token function">shaderSource</span><span class="token punctuation">(</span>shader<span class="token punctuation">,</span> source<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token comment">//编译着色器对象</span></span>
<span class="line">				gl<span class="token punctuation">.</span><span class="token function">compileShader</span><span class="token punctuation">(</span>shader<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				<span class="token comment">//返回着色器对象</span></span>
<span class="line">				<span class="token keyword">return</span> shader<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样canvas的图形就有了颜色。</p><h2 id="webgl渲染规则" tabindex="-1"><a class="header-anchor" href="#webgl渲染规则"><span>webGL渲染规则</span></a></h2><p>webgl绘图和canvas绘图不同，每次都会走完js主线程，再次绘图，每次异步执行gl.drawArrays方法都会把图像重置，重新画。</p><h2 id="webgl-着色器参数动态" tabindex="-1"><a class="header-anchor" href="#webgl-着色器参数动态"><span>webGL 着色器参数动态</span></a></h2><h3 id="位置参数动态化-gl-position" tabindex="-1"><a class="header-anchor" href="#位置参数动态化-gl-position"><span>位置参数动态化 - gl_Position</span></a></h3><p><strong>1.设置位置动态参数</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token operator">&lt;</span>script id<span class="token operator">=</span><span class="token string">&quot;vertexShader&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;x-shader/x-vertex&quot;</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token comment">// attribute 向外抛出变量 a_Position ,类型是 vec4</span></span>
<span class="line">    attribute vec4 a_Position<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	 gl_Position <span class="token operator">=</span> a_Position<span class="token punctuation">;</span></span>
<span class="line">	 gl_PointSize <span class="token operator">=</span> <span class="token number">100.0</span><span class="token punctuation">;</span></span>
<span class="line"> <span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2.获取动态位置参数</strong></p><p>js使用getAttribLocation从gl.program上下文中获取动态位置参数</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> a_Position  <span class="token operator">=</span> gl<span class="token punctuation">.</span><span class="token function">getAttribLocation</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span>program<span class="token punctuation">,</span><span class="token string">&#39;a_Position&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>3.改变动态位置参数 gl.vertexAttrib3f(变量,x,y,z)</strong></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">gl<span class="token punctuation">.</span><span class="token function">vertexAttrib3f</span><span class="token punctuation">(</span>a_Position<span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>vertexAttrib3f 方法扩展</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">gl<span class="token punctuation">.</span><span class="token function">vertexAttrib1f</span><span class="token punctuation">(</span>location<span class="token punctuation">,</span>v0<span class="token punctuation">)</span>  <span class="token comment">// 修改第1个值</span></span>
<span class="line">gl<span class="token punctuation">.</span><span class="token function">vertexAttrib2f</span><span class="token punctuation">(</span>location<span class="token punctuation">,</span>v0<span class="token punctuation">,</span>v1<span class="token punctuation">)</span> <span class="token comment">// 修改前2个值</span></span>
<span class="line">gl<span class="token punctuation">.</span><span class="token function">vertexAttrib3f</span><span class="token punctuation">(</span>location<span class="token punctuation">,</span>v0<span class="token punctuation">,</span>v1<span class="token punctuation">,</span>v2<span class="token punctuation">)</span> <span class="token comment">// 修改前3个值</span></span>
<span class="line">gl<span class="token punctuation">.</span><span class="token function">vertexAttrib4f</span><span class="token punctuation">(</span>location<span class="token punctuation">,</span>v0<span class="token punctuation">,</span>v1<span class="token punctuation">,</span>v2<span class="token punctuation">,</span>v3<span class="token punctuation">)</span> <span class="token comment">// 修改前4个值</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>案例 - 元素跟随点击位置，元素中心同点击的位置</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">canvas<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// 获取点击位置</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">{</span> clientX<span class="token punctuation">,</span>clientY <span class="token punctuation">}</span> <span class="token operator">=</span> event</span>
<span class="line">	<span class="token comment">// 获取画布的位置信息</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">{</span>left<span class="token punctuation">,</span>top<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">}</span> <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// 除皮，点击位置 - 画布边界 = 画布内部的点击位置信息</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>cssX<span class="token punctuation">,</span>cssY<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>clientX<span class="token operator">-</span>left<span class="token punctuation">,</span> clientY<span class="token operator">-</span>top<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 半个画布宽高</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>halfWidth<span class="token punctuation">,</span>halfHeight<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span>height<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 获取画布内点击的坐标信息</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>xBaseCenter<span class="token punctuation">,</span>yBaseCenter<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>cssX<span class="token operator">-</span>halfWidth<span class="token punctuation">,</span>cssY<span class="token operator">-</span>halfHeight<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// y轴取反</span></span>
<span class="line">	<span class="token keyword">const</span> yBaseCenterTop<span class="token operator">=</span><span class="token operator">-</span>yBaseCenter<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 数学坐标 =&gt; webgl坐标</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>xBaseCenter<span class="token operator">/</span>halfWidth<span class="token punctuation">,</span>yBaseCenterTop<span class="token operator">/</span>halfHeight<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	gl<span class="token punctuation">.</span><span class="token function">vertexAttrib3f</span><span class="token punctuation">(</span>a_Position<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 重新绘图</span></span>
<span class="line">	gl<span class="token punctuation">.</span><span class="token function">clearColor</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 清理绘图区</span></span>
<span class="line">	gl<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">COLOR_BUFFER_BIT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 绘制顶点</span></span>
<span class="line">	gl<span class="token punctuation">.</span><span class="token function">drawArrays</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">POINTS</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>案例 - 每次点击画布，就新增一个元素在点击位置</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">let</span> glPosition <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">canvas<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// 获取点击位置</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">{</span> clientX<span class="token punctuation">,</span>clientY <span class="token punctuation">}</span> <span class="token operator">=</span> event</span>
<span class="line">	<span class="token comment">// 获取画布的位置信息</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">{</span>left<span class="token punctuation">,</span>top<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">}</span> <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 除皮，点击位置 - 画布边界 = 画布内部的点击位置信息</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>cssX<span class="token punctuation">,</span>cssY<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>clientX<span class="token operator">-</span>left<span class="token punctuation">,</span> clientY<span class="token operator">-</span>top<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 半个画布宽高</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>halfWidth<span class="token punctuation">,</span>halfHeight<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span>height<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 获取画布内点击的坐标信息</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>xBaseCenter<span class="token punctuation">,</span>yBaseCenter<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>cssX<span class="token operator">-</span>halfWidth<span class="token punctuation">,</span>cssY<span class="token operator">-</span>halfHeight<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// y轴取反</span></span>
<span class="line">	<span class="token keyword">const</span> yBaseCenterTop<span class="token operator">=</span><span class="token operator">-</span>yBaseCenter<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 数学坐标 =&gt; webgl坐标</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>xBaseCenter<span class="token operator">/</span>halfWidth<span class="token punctuation">,</span>yBaseCenterTop<span class="token operator">/</span>halfHeight<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	glPosition<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token punctuation">,</span>y<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// 重新绘图</span></span>
<span class="line">	gl<span class="token punctuation">.</span><span class="token function">clearColor</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 清理绘图区</span></span>
<span class="line">	gl<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">COLOR_BUFFER_BIT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 绘制顶点</span></span>
<span class="line">	glPosition<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>x<span class="token punctuation">,</span>y<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">		gl<span class="token punctuation">.</span><span class="token function">vertexAttrib2f</span><span class="token punctuation">(</span>a_Position<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		gl<span class="token punctuation">.</span><span class="token function">drawArrays</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">POINTS</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="大小参数动态化" tabindex="-1"><a class="header-anchor" href="#大小参数动态化"><span>大小参数动态化</span></a></h3><p>1.设置位置动态参数</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">attribute float a_PointSize<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	 gl_PointSize <span class="token operator">=</span> a_PointSize<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.获取动态大小参数</p><p>js使用getAttribLocation从gl.program上下文中获取动态位置参数</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> a_PointSize <span class="token operator">=</span> gl<span class="token punctuation">.</span><span class="token function">getAttribLocation</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span>program<span class="token punctuation">,</span><span class="token string">&#39;a_PointSize &#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>3.改变大小参数 gl.vertexAttrib1f(变量,size)</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">gl<span class="token punctuation">.</span><span class="token function">vertexAttrib1f</span><span class="token punctuation">(</span>a_PointSize <span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>案例 - 每次点击画布，新增元素随机大小，元素位置同鼠标点击位置</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">let</span> glPosition <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">canvas<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// 获取点击位置</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">{</span> clientX<span class="token punctuation">,</span>clientY <span class="token punctuation">}</span> <span class="token operator">=</span> event</span>
<span class="line">	<span class="token comment">// 获取画布的位置信息</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">{</span>left<span class="token punctuation">,</span>top<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">}</span> <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 除皮，点击位置 - 画布边界 = 画布内部的点击位置信息</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>cssX<span class="token punctuation">,</span>cssY<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>clientX<span class="token operator">-</span>left<span class="token punctuation">,</span> clientY<span class="token operator">-</span>top<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 半个画布宽高</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>halfWidth<span class="token punctuation">,</span>halfHeight<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span>height<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 获取画布内点击的坐标信息</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>xBaseCenter<span class="token punctuation">,</span>yBaseCenter<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>cssX<span class="token operator">-</span>halfWidth<span class="token punctuation">,</span>cssY<span class="token operator">-</span>halfHeight<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// y轴取反</span></span>
<span class="line">	<span class="token keyword">const</span> yBaseCenterTop<span class="token operator">=</span><span class="token operator">-</span>yBaseCenter<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 数学坐标 =&gt; webgl坐标</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>xBaseCenter<span class="token operator">/</span>halfWidth<span class="token punctuation">,</span>yBaseCenterTop<span class="token operator">/</span>halfHeight<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> size <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token punctuation">;</span></span>
<span class="line">	glPosition<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>size<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	</span>
<span class="line">	<span class="token comment">// 重新绘图</span></span>
<span class="line">	gl<span class="token punctuation">.</span><span class="token function">clearColor</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 清理绘图区</span></span>
<span class="line">	gl<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">COLOR_BUFFER_BIT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 绘制顶点</span></span>
<span class="line">	glPosition<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>size<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">		gl<span class="token punctuation">.</span><span class="token function">vertexAttrib2f</span><span class="token punctuation">(</span>a_Position<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		gl<span class="token punctuation">.</span><span class="token function">vertexAttrib1f</span><span class="token punctuation">(</span>a_PointSize<span class="token punctuation">,</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		gl<span class="token punctuation">.</span><span class="token function">drawArrays</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">POINTS</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="颜色参数动态化" tabindex="-1"><a class="header-anchor" href="#颜色参数动态化"><span>颜色参数动态化</span></a></h3><p>1.设置颜色动态参数</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">precision mediump float<span class="token punctuation">;</span></span>
<span class="line">uniform vec4 u_FragColor<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">         gl_FragColor <span class="token operator">=</span> u_FragColor<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.获取动态颜色参数</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> u_FragColor <span class="token operator">=</span> gl<span class="token punctuation">.</span><span class="token function">getUniformLocation</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span>program<span class="token punctuation">,</span><span class="token string">&#39;u_FragColor&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>3.改变颜色参数 gl.uniform4f(变量,...color)</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">gl<span class="token punctuation">.</span><span class="token function">uniform4f</span><span class="token punctuation">(</span>u_FragColor<span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">,</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>uniform变量改变扩展 ：</p>`,57)),p("ul",null,[p("li",null,[a(s,{style:{color:"rgb(25, 27, 31)"}},{default:t(()=>n[1]||(n[1]=[e("uniform4f - 4 是有4个数据，f 是float 浮点类型 ，4个参数分别就是rgba4个",-1)])),_:1,__:[1]})]),p("li",null,[a(s,{style:{color:"rgb(25, 27, 31)"}},{default:t(()=>n[2]||(n[2]=[e("uniform4fv - 4 是有4个数据，f 是float 浮点类型, v 是vector 矢量，因此可以由4个浮点构成",-1)])),_:1,__:[2]})])]),n[4]||(n[4]=c(`<p>案例 - 每次点击画布，新增元素随机大小，元素位置同鼠标点击位置，颜色随机</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">let</span> glPosition <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">canvas<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// 获取点击位置</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">{</span> clientX<span class="token punctuation">,</span>clientY <span class="token punctuation">}</span> <span class="token operator">=</span> event</span>
<span class="line">	<span class="token comment">// 获取画布的位置信息</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">{</span>left<span class="token punctuation">,</span>top<span class="token punctuation">,</span>width<span class="token punctuation">,</span>height<span class="token punctuation">}</span> <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 除皮，点击位置 - 画布边界 = 画布内部的点击位置信息</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>cssX<span class="token punctuation">,</span>cssY<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>clientX<span class="token operator">-</span>left<span class="token punctuation">,</span> clientY<span class="token operator">-</span>top<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 半个画布宽高</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>halfWidth<span class="token punctuation">,</span>halfHeight<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span>height<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 获取画布内点击的坐标信息</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>xBaseCenter<span class="token punctuation">,</span>yBaseCenter<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>cssX<span class="token operator">-</span>halfWidth<span class="token punctuation">,</span>cssY<span class="token operator">-</span>halfHeight<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// y轴取反</span></span>
<span class="line">	<span class="token keyword">const</span> yBaseCenterTop<span class="token operator">=</span><span class="token operator">-</span>yBaseCenter<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 数学坐标 =&gt; webgl坐标</span></span>
<span class="line">	<span class="token keyword">const</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span>xBaseCenter<span class="token operator">/</span>halfWidth<span class="token punctuation">,</span>yBaseCenterTop<span class="token operator">/</span>halfHeight<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> size <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">50</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> colors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Float32Array</span><span class="token punctuation">(</span><span class="token punctuation">[</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1.0</span> <span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">	glPosition<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>size<span class="token punctuation">,</span>colors<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	</span>
<span class="line">	<span class="token comment">// 重新绘图</span></span>
<span class="line">	gl<span class="token punctuation">.</span><span class="token function">clearColor</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 清理绘图区</span></span>
<span class="line">	gl<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">COLOR_BUFFER_BIT</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">// 绘制顶点</span></span>
<span class="line">	glPosition<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>size<span class="token punctuation">,</span>colors<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">		gl<span class="token punctuation">.</span><span class="token function">vertexAttrib2f</span><span class="token punctuation">(</span>a_Position<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		gl<span class="token punctuation">.</span><span class="token function">vertexAttrib1f</span><span class="token punctuation">(</span>a_PointSize<span class="token punctuation">,</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		gl<span class="token punctuation">.</span><span class="token function">uniform4fv</span><span class="token punctuation">(</span>u_FragColor<span class="token punctuation">,</span>colors<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		gl<span class="token punctuation">.</span><span class="token function">drawArrays</span><span class="token punctuation">(</span>gl<span class="token punctuation">.</span><span class="token constant">POINTS</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2))])}const m=o(r,[["render",k]]),b=JSON.parse('{"path":"/mds/WebGL.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"webGL 坐标系","slug":"webgl-坐标系","link":"#webgl-坐标系","children":[]},{"level":2,"title":"webGL 颜色","slug":"webgl-颜色","link":"#webgl-颜色","children":[]},{"level":2,"title":"webgl 着色器","slug":"webgl-着色器","link":"#webgl-着色器","children":[]},{"level":2,"title":"webGL渲染规则","slug":"webgl渲染规则","link":"#webgl渲染规则","children":[]},{"level":2,"title":"webGL 着色器参数动态","slug":"webgl-着色器参数动态","link":"#webgl-着色器参数动态","children":[{"level":3,"title":"位置参数动态化 - gl_Position","slug":"位置参数动态化-gl-position","link":"#位置参数动态化-gl-position","children":[]},{"level":3,"title":"大小参数动态化","slug":"大小参数动态化","link":"#大小参数动态化","children":[]},{"level":3,"title":"颜色参数动态化","slug":"颜色参数动态化","link":"#颜色参数动态化","children":[]}]}],"git":{},"filePathRelative":"mds/WebGL.md","excerpt":"<h2>webGL 坐标系</h2>\\n<p>与canvas坐标系不同（原点在左上角），webgl的原点在画布中心位置（同数学坐标系一致）。</p>\\n<p>canvas坐标系如下：</p>\\n<p><img src=\\"https://cdn.nlark.com/yuque/0/2024/png/1460947/1715736439252-32e0fad4-726f-408a-bbf9-481c6cdde3da.png\\" alt=\\"canvas坐标\\"></p>\\n<p>webgl坐标系如下：</p>\\n<p><img src=\\"https://cdn.nlark.com/yuque/0/2024/png/1460947/1715736504505-0f12968d-4c87-4123-998d-dc6a3f6224e7.png\\" alt=\\"\\"></p>"}');export{m as comp,b as data};
